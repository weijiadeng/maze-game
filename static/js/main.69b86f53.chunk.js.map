{"version":3,"sources":["Labyrinth/Controls/controlSlice.js","Labyrinth/Controls/GamePanel.jsx","Labyrinth/Controls/Controls.jsx","Utils/Utils.js","Labyrinth/Walls.jsx","Labyrinth/Labyrinth.jsx","App.js","store.js","index.js"],"names":["controlSlice","createSlice","name","initialState","direction","posX","posZ","currentAction","isInit","wallTop","wallLeft","numX","numZ","reducers","moveForward","state","console","log","moveBackward","turnLeft","turnRight","popEvent","assignPosX","action","payload","assignPosZ","assignWallTop","assignWallLeft","assignNumX","assignNumZ","assignInit","actions","selectDirection","control","selectPosX","selectPosZ","selectAction","selectIsInit","selectWallTop","selectWallLeft","GamePanel","dispatch","useDispatch","document","addEventListener","event","key","window","history","go","className","onClick","extend","TrackballControls","DIRECTION_ADJUSTER","Controls","blockWidth","startCoordX","startCoordZ","moveSpeed","turnSpeed","useThree","camera","gl","useSelector","React","currentAngle","setCurrentAngle","localAngle","coordX","coordZ","useFrame","position","z","lookAt","x","rotateY","THREE","degToRad","updateProjectionMatrix","args","domElement","dynamicDampingFactor","mouseButtons","LEFT","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","UnionFind","elementNum","this","partsCount","path","Array","apply","length","map","Number","call","rank","index","left","right","leftRoot","find","rightRoot","getWallNeighbourCells","numCells","wallIndex","initLabyrinthWalls","numCellPlusBorder","unionFind","wallArray","resArray","i","push","currentPos","targetArray","j","Math","floor","random","tmp","shuffleArray","currentWall","neighborA","neighborB","union","fill","convertIndex","val","GenVerticalWall","width","height","depth","rotation","PI","color","attach","String","Walls","blockHeight","blockDepth","mazeWidth","mazeDepth","walls","Labyrinth","props","posCoordX","posCoordY","ContextBridge","useContextBridge","ReactReduxContext","fov","intensity","Sky","distance","sunPosition","inclination","azimuth","rotation-x","opacity","App","configureStore","reducer","controlReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.69b86f53.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const MOVE_FORWARD = 0;\nexport const TURN_LEFT = 2;\nexport const TURN_RIGHT = 1;\nexport const MOVE_BACKWARD = 3;\nexport const NOTHING = 4;\nexport const UP = 0;\nexport const RIGHT = 3;\nexport const DOWN = 2;\nexport const LEFT = 1;\n\nexport const controlSlice = createSlice({\n  name: 'control',\n  initialState: {\n    direction: 0,\n    posX: 0,\n    posZ: 0,\n    // Used to block a new action when an action is exectuting\n    currentAction: MOVE_FORWARD,\n    isInit: false,\n    wallTop: [],\n    wallLeft: [],\n    numX: 0,\n    numZ: 0,\n  },\n  reducers: {\n    moveForward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_FORWARD;\n        switch (state.direction) {\n          case UP:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    moveBackward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_BACKWARD;\n        switch (state.direction) {\n          case UP:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } \n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    turnLeft: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_LEFT;\n        state.direction = (state.direction + 1) % 4;\n      }\n    },\n    turnRight: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_RIGHT;\n        state.direction = ((state.direction - 1) % 4 + 4) % 4;\n      }\n    },\n    popEvent: state => {\n      state.currentAction = NOTHING;\n    },\n    assignPosX: (state, action) => {\n      state.posX = action.payload;\n    },\n    assignPosZ: (state, action) => {\n      state.posZ = action.payload;\n    },\n    assignWallTop: (state, action) => {\n      state.wallTop = action.payload;\n    },\n    assignWallLeft: (state, action) => {\n      state.wallLeft = action.payload;\n    },\n    assignNumX: (state, action) => {\n      state.numX = action.payload;\n    },\n    assignNumZ: (state, action) => {\n      state.numZ = action.payload;\n    },\n    assignInit: (state, action) => {\n      state.isInit = action.payload;\n    }\n  },\n});\n\nexport const {\n  moveForward,\n  moveBackward,\n  turnLeft,\n  turnRight,\n  popEvent,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  assignNumX,\n  assignNumZ,\n  assignInit\n} = controlSlice.actions;\n\nexport const selectDirection = state => state.control.direction;\nexport const selectPosX = state => state.control.posX;\nexport const selectPosZ = state => state.control.posZ;\nexport const selectAction = state => state.control.currentAction;\nexport const selectIsInit = state => state.control.isInit;\nexport const selectWallTop = state => state.control.wallTop;\nexport const selectWallLeft = state => state.control.wallLeft;\n\n\nexport default controlSlice.reducer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  moveBackward,\n  moveForward,\n  turnLeft,\n  turnRight,\n\n} from './controlSlice';\n\n\nexport function GamePanel() {\n\n  const dispatch = useDispatch();\n\n  const handleMoveForward = () => {\n    dispatch(moveForward());\n  };\n  const handleMoveBackward = () => {\n    dispatch(moveBackward());\n  };\n\n  const handleTurnLeft = () => {\n    dispatch(turnLeft());\n  };\n  const handleTurnRight = () => {\n    dispatch(turnRight());\n  };\n\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        window.history.go(0);\n        break;\n      case 'ArrowLeft':\n        handleTurnLeft();\n        break;\n      case 'ArrowRight':\n        handleTurnRight();\n        break;\n      case 'ArrowUp':\n        handleMoveForward();\n        break;\n      case 'ArrowDown' :\n        handleMoveBackward();\n      default:\n        break;\n    }\n  }\n\n  document.addEventListener(\"keydown\", handleKeyDown);\n\n\n  return (\n    <div>\n      <button className=\"button forward-button\" onClick={() => dispatch(moveForward())}>\n        Move Forward\n        </button>\n        <button className=\"button backward-button\" onClick={() => dispatch(moveBackward())}>\n        Move Backward\n        </button>\n      <button className=\"button turn-left-button\" onClick={() => dispatch(turnLeft())}>\n        Turn Left\n        </button>\n      <button className=\"button turn-right-button\" onClick={() => dispatch(turnRight())}>\n        Turn Right\n        </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport * as THREE from 'three';\nimport {\n  selectAction,\n  selectPosX,\n  selectPosZ,\n  popEvent,\n  selectDirection,\n  MOVE_FORWARD,\n  MOVE_BACKWARD,\n  TURN_LEFT,\n  TURN_RIGHT,\n  NOTHING,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT\n} from './controlSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// Make the camera look ahead, can be any value greater than 0\nconst DIRECTION_ADJUSTER = 0.1;\n\nexport const Controls = ({\n  blockWidth,\n  startCoordX,\n  startCoordZ,\n  moveSpeed,\n  turnSpeed,\n}) => {\n  const { camera, gl } = useThree();\n  // const controls = React.useRef();\n\n  const currentAction = useSelector(selectAction);\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const direction = useSelector(selectDirection);\n  // Current angle is the remaining angle the camera needs to rotate\n  const [currentAngle, setCurrentAngle] = React.useState(0);\n  let localAngle = currentAngle;\n\n  const coordX = (-blockWidth / 2 + (posX+1) * blockWidth + startCoordX);\n  const coordZ = (-blockWidth / 2 + (posZ+1) * blockWidth + startCoordZ);\n\n  const dispatch = useDispatch();\n\n  useFrame(() => {\n    // console.log(posX, coordX, camera.position.x)\n    // update the view as the vis is interacted with\n    // controls.current.update();\n    switch (currentAction) {\n      case MOVE_FORWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n            }\n            break;\n          case LEFT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= moveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z < coordZ) {\n              camera.position.z += moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x < coordX) {\n              camera.position.x += moveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (camera.position.x === coordX) {\n          if (camera.position.z === coordZ) {\n            console.log(\"success\");\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case MOVE_BACKWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z < coordZ) {\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n              camera.position.z += moveSpeed;\n            }\n            break;\n          case LEFT:\n            if (camera.position.x < coordX) {\n              camera.position.x += moveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= moveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (camera.position.x === coordX) {\n          if (camera.position.z === coordZ) {\n            console.log(\"success\");\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case TURN_LEFT:\n        if (currentAngle === 0) {\n          localAngle = currentAngle + 90;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle > 0) {\n          camera.rotateY(THREE.Math.degToRad(2));\n          localAngle -= turnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle === 0) {\n          dispatch(popEvent());\n        }\n        break;\n      case TURN_RIGHT:\n        if (currentAngle === 0) {\n          setCurrentAngle(currentAngle - 90);\n          localAngle = currentAngle - 90;\n        }\n        if (localAngle < 0) {\n          camera.rotateY(THREE.Math.degToRad(-2));\n          localAngle += turnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle === 0) {\n          dispatch(popEvent());\n        }\n        break;\n      case NOTHING:\n        break;\n      default:\n        console.log(\"button error!\");\n    }\n    camera.updateProjectionMatrix();\n    // controls.current.update();\n  });\n\n  return (\n    <trackballControls\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n","export class UnionFind {\n    partsCount;\n    rank;\n    path;\n\n    constructor(elementNum) {\n        this.partsCount = elementNum;\n        this.path = Array.apply(null, { length: elementNum }).map(Number.call, Number)\n        this.rank = Array.apply(0, { length: elementNum });\n    }\n\n    find(index) {\n        while (index !== this.path[index]) {\n            this.path[index] = this.path[this.path[index]];\n            index = this.path[index];\n        }\n        return index;\n    }\n\n    union(left, right) {\n        const leftRoot = this.find(left);\n        const rightRoot = this.find(right);\n        if (leftRoot === rightRoot) {\n            return;\n        }\n        this.partsCount -= 1;\n        if (this.rank[leftRoot] < this.rank[rightRoot]) {\n            this.path[leftRoot] = rightRoot;\n        } else if (this.rank[leftRoot] > this.rank[rightRoot]) {\n            this.path[rightRoot] = leftRoot;\n        } else {\n            this.path[leftRoot] = rightRoot;\n            this.rank[rightRoot] += 1;\n        }\n    }\n}\n\nexport function shuffleArray(targetArray) {\n    // Reference: https://stackoverflow.com/questions/3943772/how-do-i-shuffle-the-characters-in-a-string-in-javascript\n    const length = targetArray.length;\n    for (let i = length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let tmp = targetArray[i];\n        targetArray[i] = targetArray[j];\n        targetArray[j] = tmp;\n    }\n    return targetArray;\n}\n","import * as React from 'react';\nimport { shuffleArray, UnionFind } from \"../Utils/Utils\";\nimport { Box } from '@react-three/drei'\n\n// Wall global index definination example:\n// (The below two pictures are the same 3*3 maze, we separte vertical and horizontal walls to make it looks more clear)\n//\n//   012\n//   ---\n//   345\n//   ---\n//   678\n//\n//  9|10|11|\n// 12|13|14|\n// 15|16|17|\n//\n\n/* Given an wall index, output the neighbour cell index (In x+z*numZ format) */\nfunction getWallNeighbourCells(numX, numCells, wallIndex) {\n  if (wallIndex < numCells) {\n    // wallIndex < numCells, it is a horizontal wall\n    return [wallIndex - numX, wallIndex];\n  } else {\n    return [wallIndex - numCells - 1, wallIndex - numCells];\n  }\n}\n\nexport function initLabyrinthWalls(numX, numZ) {\n  // The algorithm is:\n  // We put all cells of a maze into a disjointed set, and set them as\n  // disjointed. Then we random select a wall. If the two cells separated\n  // by the wall is not connected, we tear down the wall, otherwise we keep\n  // the wall and choose another wall. We do this until there's only only\n  // connecting compoments left.\n  const numCells = numX * numZ;\n  const numCellPlusBorder = (numX+1) * (numZ+1);\n  const unionFind = new UnionFind(numCells);\n  let wallArray = [];\n  let resArray = [];\n  for (let i = numX; i < numCells; i++) {\n    wallArray.push(i);\n  }\n  for (let i = numCells; i < numCells * 2; i++) {\n    if (i % numX !== 0) {\n      wallArray.push(i);\n    }\n  }\n  wallArray = shuffleArray(wallArray);\n  let currentPos = wallArray.length - 1;\n\n  do {\n    const currentWall = wallArray[currentPos];\n    const [neighborA, neighborB] = getWallNeighbourCells(\n      numX,\n      numCells,\n      currentWall\n    );\n    if (unionFind.find(neighborA) === unionFind.find(neighborB)) {\n      resArray.push(currentWall);\n    } else {\n      unionFind.union(neighborA, neighborB);\n    }\n    currentPos -= 1;\n  } while (unionFind.partsCount !== 1);\n  while (currentPos >= 0) {\n    resArray.push(wallArray[currentPos]);\n    currentPos -= 1;\n  }\n\n  const wallLeft = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  const wallTop = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  for (let i = 0; i < numX; i++) {\n    // Make the top border to be true\n    wallTop[i] = true;\n    // Make the bottom border to be true\n    wallTop[i + numZ*(numX+1)] = true;\n  }\n  for (let i = 0; i < numZ; i++) {\n    // Make the left border to be true\n    wallLeft[i * (numX+1)] = true;\n    // Make the right border to be true\n    wallLeft[i * (numX+1) + numX] = true;\n  }\n\n  const convertIndex = val =>((~~(val / numX))*(numX+1) + val%numX);\n  for (let i = 0; i < resArray.length; i++) {\n    if (resArray[i] < numCells) {\n      wallTop[convertIndex(resArray[i])] = true;\n    } else {\n      wallLeft[convertIndex(resArray[i] - numCells)] = true;\n    }\n  }\n\n  wallLeft[0] = false;\n  wallLeft[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-2] = false;\n  console.log(wallLeft, wallTop);\n  return [wallLeft, wallTop];\n}\n\nfunction GenHorizontalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"top\"}\n      args={[width, height, depth]}\n      rotation={[0, 0, 0]}\n      position={[x + width / 2, 0, z]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nfunction GenVerticalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"left\"}\n      args={[width, height, depth]}\n      rotation={[0, Math.PI * 0.5, 0]}\n      position={[x, 0, z + width / 2]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nexport function Walls(\n  { numX,\n    numZ,\n    wallTop,\n    wallLeft,\n    blockWidth,\n    blockHeight,\n    blockDepth,\n    mazeWidth,\n    mazeDepth }\n) {\n  const walls = [];\n  for (let i = 0; i < numX+1; i++) {\n    for (let j = 0; j < numZ+1; j++) {\n      if (wallTop[i + (numX+1) * j]) {\n        walls.push(\n          GenHorizontalWall(\n            -mazeWidth + i * blockWidth - blockDepth / 2,\n            -mazeDepth + j * blockWidth,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n      if (wallLeft[i + (numX+1) * j]) {\n        walls.push(\n          GenVerticalWall(\n            -mazeWidth + i * blockWidth,\n            -mazeDepth + j * blockWidth - blockDepth / 2,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n    }\n  }\n\n  return (\n    <group name=\"walls\">\n      {walls}\n    </group>\n  );\n}\n","import * as React from 'react';\nimport { Canvas, useFrame, useUpdate } from 'react-three-fiber'\nimport { Controls } from './Controls/Controls';\nimport { ReactReduxContext } from 'react-redux';\nimport * as THREE from \"three\";\nimport { Walls, initLabyrinthWalls } from './Walls';\nimport { Sky, Plane, useContextBridge } from '@react-three/drei'\nimport {\n  assignInit,\n  assignNumX,\n  assignNumZ,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  selectIsInit,\n  selectWallLeft,\n  selectWallTop,\n} from './Controls/controlSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Labyrinth.css\"\n\nexport function Labyrinth(props) {\n\n  const numX = props.numX;\n  const numZ = props.numZ;\n  const blockWidth = props.blockWidth;\n  const blockHeight = props.blockHeight;\n  const blockDepth = props.blockDepth;\n  const mazeDepth = props.mazeDepth;\n  const mazeWidth = props.mazeWidth;\n\n  // Direction definination:\n  //\n  //             top\n  //      ^\n  //      |\n  //      | z\n  //      | \n  // left | a             right\n  //      | x\n  //      | i\n  //      | s\n  //      |______________>\n  //            x axis\n  //\n  //            bottom\n\n  // WallLeft and wall top are two conceptual matrix of booleans(they are flattened to arrays for performance), recording\n  // whether a wall exist or not for a certain cell.\n  //\n  // wallTop: whether the wall on the top(in the 2D world) of a cell exists\n  // wallLeft: whether the wall on the left of a cell exists\n  // The isExist information for the wall on the right of the cell is provided by the wallLeft of the cell's right neighbour cell, so as for\n  // the bottom wall.\n  //\n  // To lookup the top wall info cell(x, y), we call wallTop[x + y*numZ]\n  const isInit = useSelector(selectIsInit);\n  const dispatch = useDispatch();\n  if (!isInit) {\n    dispatch(assignPosX(numX-1));\n    dispatch(assignPosZ(numZ-1));\n    const [wallLeft, wallTop] = initLabyrinthWalls(numX, numZ);\n    dispatch(assignWallLeft(wallLeft));\n    dispatch(assignWallTop(wallTop));\n    dispatch(assignNumX(numX));\n    dispatch(assignNumZ(numZ));\n    dispatch(assignInit(true));\n  }\n  // Starting point in the x and z axis(this is coordinate, not index)\n  const startCoordX = -numX * blockWidth / 2;\n  const startCoordZ = -numZ * blockWidth / 2;\n  // Get the current view coordinate\n  const posCoordX = -blockWidth / 2 + numX * blockWidth + startCoordX;\n  const posCoordY = -blockWidth / 2 + numZ * blockWidth + startCoordZ;\n\n  // Needed to use react-redux in react-three-fiber canvas. \n  // For details: https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/\n  const ContextBridge = useContextBridge(ReactReduxContext);\n\n  return (\n    <div className=\"canvas-div\">\n      <Canvas camera={{\n        fov: 80, position: [posCoordX, 0, posCoordY + blockWidth]\n      }}>\n        {/* TODO(weijia): Add params to the controls */}\n        <ContextBridge>\n          <Controls\n            blockWidth={blockWidth}\n            startCoordX={startCoordX}\n            startCoordZ={startCoordZ}\n            moveSpeed={0.5}\n            turnSpeed={2}\n          />\n        </ContextBridge>\n        <ambientLight color=\"#ffffff\" intensity={0.4} />\n        {/* Reference: https://drei.pmnd.rs/?path=/story/shaders-softshadows--soft-shadows-st\n            Make the light the same direction with the sun\n        */}\n        <directionalLight\n          position={[-500, 20, startCoordZ + blockWidth / 2]}\n          intensity={1.5}\n        />\n        <Walls\n          numX={numX}\n          numZ={numZ}\n          wallTop={useSelector(selectWallTop)}\n          wallLeft={useSelector(selectWallLeft)}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeWidth={mazeWidth}\n          mazeDepth={mazeDepth}\n        />\n        <Sky\n          distance={10000} // Camera distance (default=450000)\n          // Sun position normal(Make the exit faces the sun, x should be less than -mazeWidth+blockWidth, \n          // y should be greater than 0, z should be -mazeHeight+blockWidth)\n          sunPosition={[-500, 20, startCoordZ + blockWidth / 2]}\n          inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n          azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        />\n        <Plane rotation-x={-Math.PI / 2} position={[0, -10, 0]} args={[400, 400, 4, 4]}>\n          <meshBasicMaterial attach=\"material\" opacity={0.5} color=\"#405940\" />\n        </Plane>\n        {/* <fog attach=\"fog\" args={['black', 0, 40]} /> */}\n      </Canvas>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { GamePanel } from './Labyrinth/Controls/GamePanel';\nimport { Labyrinth } from './Labyrinth/Labyrinth';\nimport './styles.css';\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"vis-container\">\n        <Labyrinth\n          numX={10}\n          numZ={10}\n          blockWidth={40}\n          blockHeight={20}\n          blockDepth={1}\n          mazeDepth={200}\n          mazeWidth={200}\n        />\n        <GamePanel />\n        <button className=\"button new-game-button\" onClick={() => window.history.go(0)}>\n          New Game\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport controlReducer from './Labyrinth/Controls/controlSlice';\n\nexport default configureStore({\n  reducer: {\n    control: controlReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from './store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}