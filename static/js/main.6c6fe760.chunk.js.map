{"version":3,"sources":["Labyrinth/Controls/controlSlice.js","Labyrinth/Controls/GamePanel.jsx","Labyrinth/elapseTimerSlice.js","Labyrinth/ElapseTimer.jsx","Labyrinth/Controls/Controls.jsx","Utils/Utils.js","Labyrinth/Walls.jsx","Labyrinth/Labyrinth.jsx","Labyrinth/MiniMap/MiniMap.jsx","App.js","store.js","index.js"],"names":["controlSlice","createSlice","name","initialState","direction","posX","posZ","currentAction","isInit","wallTop","wallLeft","numX","numZ","reducers","moveForward","state","console","log","moveBackward","turnLeft","turnRight","popEvent","assignPosX","action","payload","assignPosZ","assignWallTop","assignWallLeft","assignNumX","assignNumZ","assignInit","actions","selectDirection","control","selectPosX","selectPosZ","selectAction","selectIsInit","selectWallTop","selectWallLeft","selectNumX","GamePanel","dispatch","useDispatch","document","addEventListener","event","key","window","history","go","className","onClick","elapseTimerSlice","curNumSeconds","running","countUp","pauseCount","resumeCount","selectCurNumSeconds","elapseTimer","ElapseTimer","handleCountUpDispatch","x","useSelector","elapseTime","Math","floor","setInterval","extend","TrackballControls","DIRECTION_ADJUSTER","Controls","blockWidth","startCoordX","startCoordZ","moveSpeed","turnSpeed","useThree","camera","gl","controls","React","currentAngle","setCurrentAngle","localAngle","coordX","coordZ","useFrame","position","z","lookAt","rotateY","THREE","degToRad","updateProjectionMatrix","ref","args","domElement","dynamicDampingFactor","mouseButtons","LEFT","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","UnionFind","elementNum","this","partsCount","path","Array","apply","length","map","Number","call","rank","index","left","right","leftRoot","find","rightRoot","getWallNeighbourCells","numCells","wallIndex","initLabyrinthWalls","numCellPlusBorder","unionFind","wallArray","resArray","i","push","currentPos","targetArray","j","random","tmp","shuffleArray","currentWall","neighborA","neighborB","union","fill","convertIndex","val","GenVerticalWall","width","height","depth","rotation","PI","color","attach","String","Walls","blockHeight","blockDepth","mazeWidth","mazeDepth","walls","Labyrinth","props","posCoordX","posCoordY","ContextBridge","useContextBridge","ReactReduxContext","fov","intensity","Sky","distance","sunPosition","inclination","azimuth","Stars","radius","count","factor","saturation","fade","rotation-x","opacity","MiniMap","display","discovered","useRef","current","style","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","border","ret","App","configureStore","reducer","controlReducer","elapseTimerReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.6c6fe760.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const MOVE_FORWARD = 0;\nexport const TURN_LEFT = 2;\nexport const TURN_RIGHT = 1;\nexport const MOVE_BACKWARD = 3;\nexport const NOTHING = 4;\nexport const UP = 0;\nexport const RIGHT = 3;\nexport const DOWN = 2;\nexport const LEFT = 1;\n\nexport const controlSlice = createSlice({\n  name: 'control',\n  initialState: {\n    direction: 0,\n    posX: 0,\n    posZ: 0,\n    // Used to block a new action when an action is exectuting\n    currentAction: MOVE_FORWARD,\n    isInit: false,\n    wallTop: [],\n    wallLeft: [],\n    numX: 0,\n    numZ: 0,\n  },\n  reducers: {\n    moveForward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_FORWARD;\n        switch (state.direction) {\n          case UP:\n            // Check if there is a wall\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    moveBackward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_BACKWARD;\n        switch (state.direction) {\n          case UP:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } \n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    turnLeft: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_LEFT;\n        state.direction = (state.direction + 1) % 4;\n      }\n    },\n    turnRight: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_RIGHT;\n        state.direction = ((state.direction - 1) % 4 + 4) % 4;\n      }\n    },\n    popEvent: state => {\n      state.currentAction = NOTHING;\n    },\n    assignPosX: (state, action) => {\n      state.posX = action.payload;\n    },\n    assignPosZ: (state, action) => {\n      state.posZ = action.payload;\n    },\n    assignWallTop: (state, action) => {\n      state.wallTop = action.payload;\n    },\n    assignWallLeft: (state, action) => {\n      state.wallLeft = action.payload;\n    },\n    assignNumX: (state, action) => {\n      state.numX = action.payload;\n    },\n    assignNumZ: (state, action) => {\n      state.numZ = action.payload;\n    },\n    assignInit: (state, action) => {\n      state.isInit = action.payload;\n    }\n  },\n});\n\nexport const {\n  moveForward,\n  moveBackward,\n  turnLeft,\n  turnRight,\n  popEvent,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  assignNumX,\n  assignNumZ,\n  assignInit\n} = controlSlice.actions;\n\nexport const selectDirection = state => state.control.direction;\nexport const selectPosX = state => state.control.posX;\nexport const selectPosZ = state => state.control.posZ;\nexport const selectAction = state => state.control.currentAction;\nexport const selectIsInit = state => state.control.isInit;\nexport const selectWallTop = state => state.control.wallTop;\nexport const selectWallLeft = state => state.control.wallLeft;\nexport const selectNumX = state => state.control.numX;\nexport const selectNumZ = state => state.control.numZ;\n\n\nexport default controlSlice.reducer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  moveBackward,\n  moveForward,\n  turnLeft,\n  turnRight,\n\n} from './controlSlice';\n\n\nexport function GamePanel() {\n\n  const dispatch = useDispatch();\n\n  const handleMoveForward = () => {\n    dispatch(moveForward());\n  };\n  const handleMoveBackward = () => {\n    dispatch(moveBackward());\n  };\n\n  const handleTurnLeft = () => {\n    dispatch(turnLeft());\n  };\n  const handleTurnRight = () => {\n    dispatch(turnRight());\n  };\n\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        window.history.go(0);\n        break;\n      case 'ArrowLeft':\n        handleTurnLeft();\n        break;\n      case 'ArrowRight':\n        handleTurnRight();\n        break;\n      case 'ArrowUp':\n        handleMoveForward();\n        break;\n      case 'ArrowDown' :\n        handleMoveBackward();\n        break;\n      default:\n        break;\n    }\n  }\n\n  document.addEventListener(\"keydown\", handleKeyDown);\n\n\n  return (\n    <div>\n      <button className=\"button forward-button\" onClick={() => dispatch(moveForward())}>\n        Move Forward\n        </button>\n        <button className=\"button backward-button\" onClick={() => dispatch(moveBackward())}>\n        Move Backward\n        </button>\n      <button className=\"button turn-left-button\" onClick={() => dispatch(turnLeft())}>\n        Turn Left\n        </button>\n      <button className=\"button turn-right-button\" onClick={() => dispatch(turnRight())}>\n        Turn Right\n        </button>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const elapseTimerSlice = createSlice({\n    name: 'elapseTimer',\n    initialState: {\n        curNumSeconds: 0,\n        running: null,\n    },\n    reducers: {\n        countUp: state => {\n            if (state.running === null) {\n                state.running = true;\n            }\n\n            if (state.running === true) {\n                state.curNumSeconds += 1;\n            }\n        },\n        pauseCount: state => {\n            state.running = false;\n        },\n        resumeCount: state => {\n            state.running = true;\n        }\n\n    },\n});\n\nexport const {\n    countUp,\n    pauseCount,\n    resumeCount\n} = elapseTimerSlice.actions;\n\nexport const selectCurNumSeconds = state => state.elapseTimer.curNumSeconds;\n\nexport default elapseTimerSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurNumSeconds, countUp, pauseCount, resumeCount } from './elapseTimerSlice'\n\n// A timer recording elapse time.\nexport default function ElapseTimer() {\n    const dispatch = useDispatch();\n    const handleCountUpDispatch = () => {\n        dispatch(countUp());\n    }\n    const handlePauseCountDispatch = () => {\n        dispatch(pauseCount());\n    }\n    const handleResumeCountDispatch = () => {\n        dispatch(resumeCount());\n    }\n    const startCount = () => {\n        setInterval(handleCountUpDispatch, 1000);\n    }\n    const x = useSelector(selectCurNumSeconds);\n    const elapseTime = `Time elapsed: ${Math.floor(x / 3600)} H ${Math.floor(x / 60)} M ${x % 60} S`;\n\n    return (\n        <div className=\"elapse-timer\">\n            <button className=\"button elapse-time-start\" onClick={() => startCount()}\n            >Start count time in seconds</button>\n            <button className=\"button elapse-time-pause\" onClick={() => handlePauseCountDispatch()}\n            >Pause count time in seconds</button>\n            <button className=\"button elapse-time-resume\" onClick={() => handleResumeCountDispatch()}\n            >Resume count time in seconds</button>\n            <p>{elapseTime}</p>\n        </div>\n    );\n}","import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport * as THREE from 'three';\nimport {\n  selectAction,\n  selectPosX,\n  selectPosZ,\n  popEvent,\n  selectDirection,\n  MOVE_FORWARD,\n  MOVE_BACKWARD,\n  TURN_LEFT,\n  TURN_RIGHT,\n  NOTHING,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT\n} from './controlSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// Make the camera look ahead, can be any value greater than 0\nconst DIRECTION_ADJUSTER = 0.1;\n\nexport const Controls = ({\n  blockWidth,\n  startCoordX,\n  startCoordZ,\n  moveSpeed,\n  turnSpeed,\n}) => {\n  const { camera, gl } = useThree();\n  const controls = React.useRef();\n\n  const currentAction = useSelector(selectAction);\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const direction = useSelector(selectDirection);\n  // Current angle is the remaining angle the camera needs to rotate\n  const [currentAngle, setCurrentAngle] = React.useState(0);\n  let localAngle = currentAngle;\n\n  const coordX = (-blockWidth / 2 + (posX+1) * blockWidth + startCoordX);\n  const coordZ = (-blockWidth / 2 + (posZ+1) * blockWidth + startCoordZ);\n\n  const dispatch = useDispatch();\n\n  useFrame(() => {\n    // console.log(posX, coordX, camera.position.x)\n    // update the view as the vis is interacted with\n    //controls.current.update();\n    switch (currentAction) {\n      case MOVE_FORWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n            }\n            break;\n          case LEFT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= moveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z < coordZ) {\n              camera.position.z += moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x < coordX) {\n              camera.position.x += moveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (camera.position.x === coordX) {\n          if (camera.position.z === coordZ) {\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case MOVE_BACKWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z < coordZ) {\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n              camera.position.z += moveSpeed;\n            }\n            break;\n          case LEFT:\n            if (camera.position.x < coordX) {\n              camera.position.x += moveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= moveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= moveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (camera.position.x === coordX) {\n          if (camera.position.z === coordZ) {\n            console.log(\"success\");\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case TURN_LEFT:\n        if (currentAngle === 0) {\n          localAngle = currentAngle + 90;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle > 0) {\n          camera.rotateY(THREE.Math.degToRad(2));\n          localAngle -= turnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle === 0) {\n          dispatch(popEvent());\n        }\n        break;\n      case TURN_RIGHT:\n        if (currentAngle === 0) {\n          setCurrentAngle(currentAngle - 90);\n          localAngle = currentAngle - 90;\n        }\n        if (localAngle < 0) {\n          camera.rotateY(THREE.Math.degToRad(-2));\n          localAngle += turnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle === 0) {\n          dispatch(popEvent());\n        }\n        break;\n      case NOTHING:\n        break;\n      default:\n        console.log(\"button error!\");\n    }\n    camera.updateProjectionMatrix();\n  });\n\n  return (\n    <trackballControls\n      ref = {controls}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n","export class UnionFind {\n    partsCount;\n    rank;\n    path;\n\n    constructor(elementNum) {\n        this.partsCount = elementNum;\n        this.path = Array.apply(null, { length: elementNum }).map(Number.call, Number)\n        this.rank = Array.apply(0, { length: elementNum });\n    }\n\n    find(index) {\n        while (index !== this.path[index]) {\n            this.path[index] = this.path[this.path[index]];\n            index = this.path[index];\n        }\n        return index;\n    }\n\n    union(left, right) {\n        const leftRoot = this.find(left);\n        const rightRoot = this.find(right);\n        if (leftRoot === rightRoot) {\n            return;\n        }\n        this.partsCount -= 1;\n        if (this.rank[leftRoot] < this.rank[rightRoot]) {\n            this.path[leftRoot] = rightRoot;\n        } else if (this.rank[leftRoot] > this.rank[rightRoot]) {\n            this.path[rightRoot] = leftRoot;\n        } else {\n            this.path[leftRoot] = rightRoot;\n            this.rank[rightRoot] += 1;\n        }\n    }\n}\n\nexport function shuffleArray(targetArray) {\n    // Reference: https://stackoverflow.com/questions/3943772/how-do-i-shuffle-the-characters-in-a-string-in-javascript\n    const length = targetArray.length;\n    for (let i = length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let tmp = targetArray[i];\n        targetArray[i] = targetArray[j];\n        targetArray[j] = tmp;\n    }\n    return targetArray;\n}\n","import * as React from 'react';\nimport { shuffleArray, UnionFind } from \"../Utils/Utils\";\nimport { Box } from '@react-three/drei'\n\n// Wall global index definination example:\n// (The below two pictures are the same 3*3 maze, we separte vertical and horizontal walls to make it looks more clear)\n//\n//   012\n//   ---\n//   345\n//   ---\n//   678\n//\n//  9|10|11|\n// 12|13|14|\n// 15|16|17|\n//\n\n/* Given an wall index, output the neighbour cell index (In x+z*numZ format) */\nfunction getWallNeighbourCells(numX, numCells, wallIndex) {\n  if (wallIndex < numCells) {\n    // wallIndex < numCells, it is a horizontal wall\n    return [wallIndex - numX, wallIndex];\n  } else {\n    return [wallIndex - numCells - 1, wallIndex - numCells];\n  }\n}\n\nexport function initLabyrinthWalls(numX, numZ) {\n  // The algorithm is:\n  // We put all cells of a maze into a disjointed set, and set them as\n  // disjointed. Then we random select a wall. If the two cells separated\n  // by the wall is not connected, we tear down the wall, otherwise we keep\n  // the wall and choose another wall. We do this until there's only only\n  // connecting compoments left.\n  const numCells = numX * numZ;\n  const numCellPlusBorder = (numX+1) * (numZ+1);\n  const unionFind = new UnionFind(numCells);\n  let wallArray = [];\n  let resArray = [];\n  for (let i = numX; i < numCells; i++) {\n    wallArray.push(i);\n  }\n  for (let i = numCells; i < numCells * 2; i++) {\n    if (i % numX !== 0) {\n      wallArray.push(i);\n    }\n  }\n  wallArray = shuffleArray(wallArray);\n  let currentPos = wallArray.length - 1;\n\n  do {\n    const currentWall = wallArray[currentPos];\n    const [neighborA, neighborB] = getWallNeighbourCells(\n      numX,\n      numCells,\n      currentWall\n    );\n    if (unionFind.find(neighborA) === unionFind.find(neighborB)) {\n      resArray.push(currentWall);\n    } else {\n      unionFind.union(neighborA, neighborB);\n    }\n    currentPos -= 1;\n  } while (unionFind.partsCount !== 1);\n  while (currentPos >= 0) {\n    resArray.push(wallArray[currentPos]);\n    currentPos -= 1;\n  }\n\n  const wallLeft = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  const wallTop = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  for (let i = 0; i < numX; i++) {\n    // Make the top border to be true\n    wallTop[i] = true;\n    // Make the bottom border to be true\n    wallTop[i + numZ*(numX+1)] = true;\n  }\n  for (let i = 0; i < numZ; i++) {\n    // Make the left border to be true\n    wallLeft[i * (numX+1)] = true;\n    // Make the right border to be true\n    wallLeft[i * (numX+1) + numX] = true;\n  }\n\n  const convertIndex = val =>((~~(val / numX))*(numX+1) + val%numX);\n  for (let i = 0; i < resArray.length; i++) {\n    if (resArray[i] < numCells) {\n      wallTop[convertIndex(resArray[i])] = true;\n    } else {\n      wallLeft[convertIndex(resArray[i] - numCells)] = true;\n    }\n  }\n\n  wallLeft[0] = false;\n  wallLeft[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-2] = false;\n  return [wallLeft, wallTop];\n}\n\nfunction GenHorizontalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"top\"}\n      args={[width, height, depth]}\n      rotation={[0, 0, 0]}\n      position={[x + width / 2, 0, z]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nfunction GenVerticalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"left\"}\n      args={[width, height, depth]}\n      rotation={[0, Math.PI * 0.5, 0]}\n      position={[x, 0, z + width / 2]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nexport function Walls(\n  { numX,\n    numZ,\n    wallTop,\n    wallLeft,\n    blockWidth,\n    blockHeight,\n    blockDepth,\n    mazeWidth,\n    mazeDepth }\n) {\n  const walls = [];\n  for (let i = 0; i < numX+1; i++) {\n    for (let j = 0; j < numZ+1; j++) {\n      if (wallTop[i + (numX+1) * j]) {\n        walls.push(\n          GenHorizontalWall(\n            -mazeWidth/2 + i * blockWidth - blockDepth / 2,\n            -mazeDepth/2 + j * blockWidth,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n      if (wallLeft[i + (numX+1) * j]) {\n        walls.push(\n          GenVerticalWall(\n            -mazeWidth/2 + i * blockWidth,\n            -mazeDepth/2 + j * blockWidth - blockDepth / 2,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n    }\n  }\n\n  return (\n    <group name=\"walls\">\n      {walls}\n    </group>\n  );\n}\n","import * as React from 'react';\nimport { Canvas, useFrame, useUpdate } from 'react-three-fiber'\nimport { Controls } from './Controls/Controls';\nimport { ReactReduxContext } from 'react-redux';\nimport * as THREE from \"three\";\nimport { Walls, initLabyrinthWalls } from './Walls';\nimport { Sky, Stars, Plane, useContextBridge } from '@react-three/drei'\nimport {\n  assignInit,\n  assignNumX,\n  assignNumZ,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  selectIsInit,\n  selectWallLeft,\n  selectWallTop,\n} from './Controls/controlSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Labyrinth.css\"\n\nexport function Labyrinth(props) {\n\n  const numX = props.numX;\n  const numZ = props.numZ;\n  const blockWidth = props.blockWidth;\n  const blockHeight = props.blockHeight;\n  const blockDepth = props.blockDepth;\n  const mazeDepth = props.mazeDepth;\n  const mazeWidth = props.mazeWidth;\n\n  // Direction definination:\n  //\n  //             top\n  //      ^\n  //      |\n  //      | z\n  //      | \n  // left | a             right\n  //      | x\n  //      | i\n  //      | s\n  //      |______________>\n  //            x axis\n  //\n  //            bottom\n\n  // WallLeft and wall top are two conceptual matrix of booleans(they are flattened to arrays for performance), recording\n  // whether a wall exist or not for a certain cell.\n  //\n  // wallTop: whether the wall on the top(in the 2D world) of a cell exists\n  // wallLeft: whether the wall on the left of a cell exists\n  // The isExist information for the wall on the right of the cell is provided by the wallLeft of the cell's right neighbour cell, so as for\n  // the bottom wall.\n  //\n  // To lookup the top wall info cell(x, y), we call wallTop[x + y*numZ]\n  const isInit = useSelector(selectIsInit);\n  const dispatch = useDispatch();\n  if (!isInit) {\n    dispatch(assignPosX(numX - 1));\n    dispatch(assignPosZ(numZ - 1));\n    const [wallLeft, wallTop] = initLabyrinthWalls(numX, numZ);\n    dispatch(assignWallLeft(wallLeft));\n    dispatch(assignWallTop(wallTop));\n    dispatch(assignNumX(numX));\n    dispatch(assignNumZ(numZ));\n    dispatch(assignInit(true));\n  }\n  // Starting point in the x and z axis(this is coordinate, not index)\n  const startCoordX = -numX * blockWidth / 2;\n  const startCoordZ = -numZ * blockWidth / 2;\n  // Get the current view coordinate\n  const posCoordX = -blockWidth / 2 + numX * blockWidth + startCoordX;\n  const posCoordY = -blockWidth / 2 + numZ * blockWidth + startCoordZ;\n\n  // Needed to use react-redux in react-three-fiber canvas. \n  // For details: https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/\n  const ContextBridge = useContextBridge(ReactReduxContext);\n\n  return (\n    <div className=\"canvas-div\">\n      <Canvas camera={{\n        fov: 80, position: [posCoordX, 0, posCoordY + blockWidth]\n      }}>\n        {/* TODO(weijia): Add params to the controls */}\n        <ContextBridge>\n          <Controls\n            blockWidth={blockWidth}\n            startCoordX={startCoordX}\n            startCoordZ={startCoordZ}\n            moveSpeed={0.5}\n            turnSpeed={2}\n          />\n        </ContextBridge>\n        <ambientLight color=\"#ffffff\" intensity={0.4} />\n        {/* Reference: https://drei.pmnd.rs/?path=/story/shaders-softshadows--soft-shadows-st\n            Make the light the same direction with the sun\n        */}\n        <directionalLight\n          position={[-500, 20, startCoordZ + blockWidth / 2]}\n          intensity={1.5}\n        />\n        <Walls\n          numX={numX}\n          numZ={numZ}\n          wallTop={useSelector(selectWallTop)}\n          wallLeft={useSelector(selectWallLeft)}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeWidth={mazeWidth}\n          mazeDepth={mazeDepth}\n        />\n        <Sky\n          distance={10000} // Camera distance (default=450000)\n          // Sun position normal(Make the exit faces the sun, x should be less than -mazeWidth+blockWidth, \n          // y should be greater than 0, z should be -mazeHeight+blockWidth)\n          sunPosition={[-500, blockHeight, startCoordZ + blockWidth / 2]}\n          inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n          azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        />\n        {/* Referenced from https://github.com/pmndrs/drei#stars */}\n        <Stars\n          radius={mazeWidth*2} // Radius of the inner sphere (default=100)\n          depth={50} // Depth of area where stars should fit (default=50)\n          count={5000} // Amount of stars (default=5000)\n          factor={5} // Size factor (default=4)\n          saturation={0} // Saturation 0-1 (default=0)\n          fade // Faded dots (default=false)\n        />\n        <Plane rotation-x={-Math.PI / 2} position={[0, -blockHeight / 2, 0]} args={[mazeWidth, mazeDepth, 4, 4]}>\n          <meshBasicMaterial attach=\"material\" opacity={0.5} color=\"#405940\" />\n        </Plane>\n        {/* <fog attach=\"fog\" args={['black', 0, 40]} /> */}\n      </Canvas>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport './MiniMapStyle.css';\nimport {\n    selectPosX,\n    selectPosZ,\n    selectWallTop,\n    selectWallLeft,\n    selectNumX,\n} from '../Controls/controlSlice';\n\n\n\nexport function MiniMap(props) {\n    const wallTop = useSelector(selectWallTop);\n    const wallLeft = useSelector(selectWallLeft);\n    const numX = useSelector(selectNumX);\n    const numZ = useSelector(selectNumX);\n    const posX = useSelector(selectPosX);\n    const posZ = useSelector(selectPosZ);\n    const display = [];\n    const discovered = useRef(Array(numX * numZ).fill(false));\n    discovered.current[posZ * numX + posX] = true;\n    for (let i = 0; i < numZ; i++) {\n        display.push([])\n        for (let j = 0; j < numX; j++) {\n            if (discovered.current[i * numX + j]) {\n                display[i].push(\n                    <button className=\"square\" key={String(i) + ',' + String(j)}\n                        style={{\n                            borderTop: wallTop[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderLeft: wallLeft[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderBottom: wallTop[(i + 1) * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderRight: wallLeft[i * (numX + 1) + j + 1] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            backgroundColor: (posX === j && posZ === i) ? 'rgb(37, 110, 194)' : 'rgba(240, 248, 255, 0.5)'\n                        }} >\n                    </button>\n                );\n            }\n            else {\n                display[i].push(\n                    <button className=\"square\" key={String(i) + ',' + String(j)}\n                        style={{\n                            border: '0.5px solid rgba(0, 0, 0, 0.1)',\n                            backgroundColor: 'rgba(0, 0, 0, 0.1)'\n                        }} >\n                    </button>);\n\n            }\n        }\n    }\n    let ret = []\n    for (let i = 0; i < numZ; i++) {\n        ret.push(<div className=\"board-row\" key={\"border\" + String(i)}>{display[i]}</div>)\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                {ret}\n            </div>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport { GamePanel } from './Labyrinth/Controls/GamePanel';\nimport ElapseTimer from './Labyrinth/ElapseTimer';\nimport { Labyrinth } from './Labyrinth/Labyrinth';\nimport { MiniMap } from './Labyrinth/MiniMap/MiniMap'\nimport './styles.css';\n\nexport default function App() {\n  const numX = 10;\n  const numZ = 10;\n  const blockWidth = 20;\n  const blockDepth = 0.5;\n  const blockHeight = 10;\n  return (\n    <div className=\"App\">\n      <div className=\"vis-container\">\n        <Labyrinth\n          numX={numX}\n          numZ={numZ}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeDepth={numX * blockWidth}\n          mazeWidth={numZ * blockWidth}\n        />\n        <GamePanel />\n        <MiniMap />\n        <button className=\"button new-game-button\" onClick={() => window.history.go(0)}>\n          New Game\n        </button>\n        <ElapseTimer />\n      </div>\n    </div >\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport controlReducer from './Labyrinth/Controls/controlSlice';\nimport elapseTimerReducer from './Labyrinth/elapseTimerSlice';\n\nexport default configureStore({\n  reducer: {\n    control: controlReducer,\n    elapseTimer: elapseTimerReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from './store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}