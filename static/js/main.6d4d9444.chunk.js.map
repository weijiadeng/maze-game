{"version":3,"sources":["components/guide.module.css","components/welcome.module.css","components/playerStatusPanel.module.css","components/bigPopUpWindow.module.css","components/miniMap.module.css","components/smallPopUpWindow.module.css","components/labyrinthView.module.css","components/labyrinthGame.module.css","components/gamePanel.module.css","reducers/controlSlice.js","music/mixkit-game-level-completed-2059.wav","music/mixkit-video-game-health-recharge-2837.wav","music/mixkit-negative-guitar-tone-2324.wav","music/mixkit-bonus-extra-in-a-video-game-2064.wav","music/mixkit-small-hit-in-a-game-2072.wav","music/mixkit-arcade-retro-jump-223.wav","music/mixkit-player-losing-or-failing-2042.wav","commons/SoundHooks.jsx","components/GamePanel.jsx","reducers/elapseTimerSlice.js","components/ElapseTimer.jsx","reducers/playerStatusSlice.js","components/LabyrinthCamera.jsx","commons/utils.js","components/Walls.jsx","components/LabyrinthView.jsx","reducers/popUpWindowSlice.js","components/BigPopUpWindow.jsx","components/SmallPopUpWindow.jsx","images/bigWindowBackground.png","reducers/leaderboardSlice.js","reducers/gameModeSlice.js","music/mixkit-game-level-music-689.wav","commons/BackgroundMusic.jsx","components/EventManager.jsx","components/MiniMap.jsx","images/heart-icon.png","images/normalclock.png","images/outoftimeclock.png","images/mapicon.png","images/sun.png","images/night.png","images/rocket.png","images/turtleicon.png","components/PlayerStatusPanel.jsx","components/LabyrinthGame.jsx","reducers/programWindowSlice.js","components/Welcome.jsx","components/GameModeDescription.jsx","images/movesGuide.png","components/OperationDescription.jsx","components/Guide.jsx","App.js","reducers/backgroundMusicSlice.js","reducers/helperPageSlice.js","store.js","index.js"],"names":["module","exports","controlSlice","createSlice","name","initialState","direction","posX","posZ","currentAction","isInit","wallTop","wallLeft","numX","numZ","lastMoveHitWall","isResetCamera","resetEvent","reducers","moveForward","state","console","log","moveBackward","resetLastMoveHitWall","turnLeft","turnRight","occurEvent","resetCurrentAction","assignResetEvent","action","payload","popEvent","assignPosX","assignPosZ","assignWallTop","assignWallLeft","assignNumX","assignNumZ","assignInit","assignResetCamera","actions","selectDirection","control","selectPosX","selectPosZ","selectAction","selectIsInit","selectWallTop","selectWallLeft","selectNumX","selectNumZ","selectLastMoveHitWall","selectIsResetCamera","selectResetEvent","useGameCompletionSound","useSound","GameCompletionSound","interrupt","volume","play","stop","usePositiveEffectSound","PositiveEffectSound","useNegativeEffectSound","NegativeEffectSound","useNeutralEffectSound","NeutralEffectSound","useHitWallSound","HitWallSound","GamePanel","dispatch","useDispatch","isPlayHitWall","useSelector","document","addEventListener","event","key","elapseTimerSlice","curNumSeconds","status","intervalHasSet","countUp","pauseCount","resumeCount","readyCount","resetCount","adjustCountByAmount","markIntervalSet","selectCurNumSeconds","elapseTimer","selectStatus","selectIntervalHasSet","ElapseTimer","setInterval","x","elapseTime","Math","floor","className","playerStatusSlice","HP","buff","debuff","speedModifier","decreaseHP","increaseHP","resetBuffAndDebuff","addABuff","removeABuff","addADebuff","removeADebuff","resetPlayerStatus","selectHP","playerStatus","selectBuff","selectDebuff","extend","TrackballControls","DIRECTION_ADJUSTER","LabyrinthCamera","blockWidth","startCoordX","startCoordZ","cameraInitCoordX","cameraInitCoordZ","moveSpeed","turnSpeed","useThree","camera","gl","controls","React","actualMoveSpeed","actualTurnSpeed","currentAngle","setCurrentAngle","localAngle","coordX","coordZ","useFrame","position","z","lookAt","abs","rotateY","THREE","degToRad","updateProjectionMatrix","ref","args","domElement","dynamicDampingFactor","mouseButtons","LEFT","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","UnionFind","elementNum","this","partsCount","path","Array","apply","length","map","Number","call","rank","index","left","right","leftRoot","find","rightRoot","partialApply","fn","bind","genRandomInt","max","random","compareNumbers","a","b","getWallNeighbourCells","numCells","wallIndex","initLabyrinthWalls","numCellPlusBorder","unionFind","wallArray","resArray","i","push","currentPos","targetArray","j","tmp","shuffleArray","currentWall","neighborA","neighborB","union","fill","convertIndex","val","GenVerticalWall","width","height","depth","rotation","PI","color","attach","String","Walls","blockHeight","blockDepth","mazeWidth","mazeDepth","walls","LabyrinthView","darkModeIsOn","posCoordX","posCoordZ","ContextBridge","useContextBridge","ReactReduxContext","styles","canvasDiv","fov","intensity","Sky","distance","sunPosition","inclination","azimuth","Stars","radius","count","factor","saturation","fade","rotation-x","opacity","INITIAL_PRESENSE","popUpWindowSlice","smallPopUpPresense","smallPopIsToOpen","bigPopUpPresense","bigPopUpIsToOpen","enableSmallPopUpPresense","disableSmallPopUpPresense","enableSmallPopUpIsToOpen","disableSmallPopUpIsToOpen","enableBigPopUpPresense","disableBigPopUpPresense","enableBigPopUpIsToOpen","disableBigPopUpIsToOpen","selectSmallPopUpPresense","popUpWindow","selectSmallPopUpIsToOpen","selectBigPopUpPresense","selectBigPopUpIsToOpen","BigPopUpWindow","props","isToOpen","useEffect","isOpen","popup","overlayClassName","overlay","closeTimeoutMS","src","background","backgroundPic","alt","content","children","buttonsection","buttons","SmallPopUpWindow","handlePresenseChange","setTimeout","leaderboardSlice","list","appendToLeaderBoard","sort","pop","gameModeSlice","gameMode","setGameMode","selectGameMode","BackgroundMusic","Fragment","StartEventRender","onClick","startEventCallback","EndEventRender","time","useState","hasAppend","setHasAppend","endEventCallback","strongWindEventCallBack","StrongWindEventRender","smellyWindEventCallBack","debuffId","SmellyWindEventRender","specificEventContent","freshWindEventCallBack","buffId","FreshWindEventRender","Event","toRender","callBack","eventTypeId","initEventMap","eventMap","NUM_DEBUFF_TYPE","NUM_BUFF_TYPE","EventManager","discovered","isResetEvent","setEventMap","currentRender","useRef","currentIndex","playGameCompletionSound","playPositiveEffectSound","playNegativeEffectSound","playNeutralEffectSound","bgm","loop","useBgmPlay","currentCallback","undefined","current","MiniMap","miniMapIsOn","display","currentRow","square","style","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","border","broadRow","container","ProgressBar","progressBar","percentage","Filler","filler","PlayerStatusPanel","hp","clock","progressBarSection","icon","heart","normalclock","outoftimeclock","buffSection","dayIcon","nightIcon","mapicon","rocket","turtleicon","LabyrinthGame","visContainer","programWindowSlice","window","displayWelcome","displayModeSelection","displayGame","displayGuide","selectWindow","programWindow","WelcomeScreens","title","ModeSelection","handleModeSelect","mode","options","footnote","Welcome","GameModeDescription","description","smallHeader","gameModeName","OperationDescription","plainText","transparent","movesGuide","Guide","guide","bigHeader","App","Modal","setAppElement","backgroundMusicSlice","IsMuted","toggleIsMuted","helperPageSlice","shown","toggleShown","configureStore","reducer","controlReducer","elapseTimerReducer","backgroundMusic","backgroundMusicReducer","playerStatusReducer","popUpWindowReducer","programWindowReducer","leaderboard","leaderboardReducer","gameModeReducer","helperPage","helperPageReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.6d4d9444.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide\":\"guide_guide__dA5n0\",\"transparent\":\"guide_transparent__2hHRB\",\"bigHeader\":\"guide_bigHeader__386L4\",\"smallHeader\":\"guide_smallHeader__2L7yM\",\"plainText\":\"guide_plainText__2w_Ub\",\"list\":\"guide_list__36ooW\",\"gameModeName\":\"guide_gameModeName__3j-Cq\",\"description\":\"guide_description__b3T-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"welcome_container__1zouN\",\"title\":\"welcome_title__2C8Sf\",\"options\":\"welcome_options__IosI2\",\"buttons\":\"welcome_buttons__mJTC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerStatusPanel\":\"playerStatusPanel_playerStatusPanel__1cmZa\",\"container\":\"playerStatusPanel_container__3gKUU\",\"progressBar\":\"playerStatusPanel_progressBar__2OczX\",\"icon\":\"playerStatusPanel_icon__LoCU4\",\"progressBarSection\":\"playerStatusPanel_progressBarSection__25ZUm\",\"filler\":\"playerStatusPanel_filler__A1WSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"bigPopUpWindow_popup__3Y6BH\",\"overlay\":\"bigPopUpWindow_overlay__2vXM3\",\"backgroundPic\":\"bigPopUpWindow_backgroundPic__JlTZ5\",\"content\":\"bigPopUpWindow_content__3lEcr\",\"buttonsection\":\"bigPopUpWindow_buttonsection__DsooY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"miniMap_container__203Xp\",\"map\":\"miniMap_map__3sY0k\",\"broadRow\":\"miniMap_broadRow__ccNrJ\",\"square\":\"miniMap_square__z_h7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"smallPopUpWindow_popup__3t9OW\",\"overlay\":\"smallPopUpWindow_overlay__26YFj\",\"backgroundPic\":\"smallPopUpWindow_backgroundPic__g54kS\",\"content\":\"smallPopUpWindow_content__1_Cd_\",\"buttonsection\":\"smallPopUpWindow_buttonsection__1qAGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasDiv\":\"labyrinthView_canvasDiv__1DGyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visContainer\":\"labyrinthGame_visContainer__2ZVSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forwardButton\":\"gamePanel_forwardButton__3wqGa\",\"backwardButton\":\"gamePanel_backwardButton__2mBmK\",\"turnLeftButton\":\"gamePanel_turnLeftButton__1neex\",\"turnRightButton\":\"gamePanel_turnRightButton__8HIPY\",\"toggleMiniMap\":\"gamePanel_toggleMiniMap__3whvi\",\"toggleDarkMode\":\"gamePanel_toggleDarkMode__1DQD6\"};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const MOVE_FORWARD = 0;\nexport const TURN_LEFT = 2;\nexport const TURN_RIGHT = 1;\nexport const MOVE_BACKWARD = 3;\nexport const RANDOM_EVENT = 4;\nexport const NOTHING = 5;\nexport const UP = 0;\nexport const RIGHT = 3;\nexport const DOWN = 2;\nexport const LEFT = 1;\n\nexport const controlSlice = createSlice({\n  name: 'control',\n  initialState: {\n    direction: 0,\n    posX: 0,\n    posZ: 0,\n    // Used to block a new action when an action is exectuting\n    currentAction: MOVE_FORWARD,\n    isInit: false,\n    wallTop: [],\n    wallLeft: [],\n    numX: 20,\n    numZ: 20,\n    lastMoveHitWall: false,\n    isResetCamera: false,\n    resetEvent: true,\n  },\n  reducers: {\n    moveForward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_FORWARD;\n        switch (state.direction) {\n          case UP:\n            // Check if there is a wall\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    moveBackward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_BACKWARD;\n        switch (state.direction) {\n          case UP:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n            console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    resetLastMoveHitWall: state => {\n      state.lastMoveHitWall = false;\n    },\n    turnLeft: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_LEFT;\n        state.direction = (state.direction + 1) % 4;\n      }\n    },\n    turnRight: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_RIGHT;\n        state.direction = ((state.direction - 1) % 4 + 4) % 4;\n      }\n    },\n    occurEvent: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = RANDOM_EVENT;\n      }\n    },\n    resetCurrentAction: state=> {\n      state.currentAction = MOVE_FORWARD;\n    },\n    assignResetEvent: (state, action) => {\n      state.resetEvent = action.payload;\n    },\n    popEvent: state => {\n      state.currentAction = NOTHING;\n    },\n    assignPosX: (state, action) => {\n      state.posX = action.payload;\n    },\n    assignPosZ: (state, action) => {\n      state.posZ = action.payload;\n    },\n    assignWallTop: (state, action) => {\n      state.wallTop = action.payload;\n    },\n    assignWallLeft: (state, action) => {\n      state.wallLeft = action.payload;\n    },\n    assignNumX: (state, action) => {\n      state.numX = action.payload;\n    },\n    assignNumZ: (state, action) => {\n      state.numZ = action.payload;\n    },\n    assignInit: (state, action) => {\n      state.isInit = action.payload;\n    },\n    assignResetCamera: (state, action) => {\n      state.isResetCamera = action.payload;\n      if (!action.payload) {\n        state.direction = UP;\n      }\n    },\n  },\n});\n\nexport const {\n  moveForward,\n  moveBackward,\n  turnLeft,\n  turnRight,\n  resetLastMoveHitWall,\n  occurEvent,\n  popEvent,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  assignNumX,\n  assignNumZ,\n  assignInit,\n  assignResetCamera,\n  resetCurrentAction,\n  assignResetEvent\n} = controlSlice.actions;\n\nexport const selectDirection = state => state.control.direction;\nexport const selectPosX = state => state.control.posX;\nexport const selectPosZ = state => state.control.posZ;\nexport const selectAction = state => state.control.currentAction;\nexport const selectIsInit = state => state.control.isInit;\nexport const selectWallTop = state => state.control.wallTop;\nexport const selectWallLeft = state => state.control.wallLeft;\nexport const selectNumX = state => state.control.numX;\nexport const selectNumZ = state => state.control.numZ;\nexport const selectLastMoveHitWall = state => state.control.lastMoveHitWall;\nexport const selectIsResetCamera = state => state.control.isResetCamera;\nexport const selectResetEvent = state=>state.control.resetEvent;\n\nexport default controlSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/mixkit-game-level-completed-2059.9b5b1a62.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-video-game-health-recharge-2837.1196415e.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-negative-guitar-tone-2324.cab1c2b6.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-bonus-extra-in-a-video-game-2064.fc57cf28.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-small-hit-in-a-game-2072.63f0b124.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-arcade-retro-jump-223.ec530168.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-player-losing-or-failing-2042.183e2b8a.wav\";","import React from 'react';\nimport useSound from 'use-sound';\nimport GameCompletionSound from '../music/mixkit-game-level-completed-2059.wav'\nimport PositiveEffectSound from '../music/mixkit-video-game-health-recharge-2837.wav'\nimport NegativeEffectSound from '../music/mixkit-negative-guitar-tone-2324.wav'\nimport NeutralEffectSound from '../music/mixkit-bonus-extra-in-a-video-game-2064.wav'\nimport ConfrontBattleSound from '../music/mixkit-arcade-retro-jump-223.wav'\nimport HitWallSound from '../music/mixkit-small-hit-in-a-game-2072.wav'\nimport GameOverSound from '../music/mixkit-player-losing-or-failing-2042.wav'\n\nexport function useGameCompletionSound() {\n    const [play, { stop }] = useSound(GameCompletionSound, {\n        interrupt: true,\n        volume: 0.75,\n    });\n    return { play, stop };\n}\n\nexport function usePositiveEffectSound() {\n    const [play, { stop }] = useSound(PositiveEffectSound, {\n        interrupt: true,\n        volume: 0.45,\n    });\n    return { play, stop };\n}\n\nexport function useNegativeEffectSound() {\n    const [play, { stop }] = useSound(NegativeEffectSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\n// Clears all effects, no matter positive or negative.\nexport function useNeutralEffectSound() {\n    const [play, { stop }] = useSound(NeutralEffectSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nexport function useConfrontBattleSound() {\n    const [play, { stop }] = useSound(ConfrontBattleSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\nexport function useGameOverSound() {\n    const [play, { stop }] = useSound(GameOverSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nexport function useHitWallSound() {\n    const [play, { stop }] = useSound(HitWallSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nconst EffectSoundTestContainer = () => {\n    const { play: playGameCompletionSound, stop: stopGameCompletionSound } = useGameCompletionSound();\n    const { play: playPositiveEffectSound, stop: stopPositiveEffectSound } = usePositiveEffectSound();\n    const { play: playNegativeEffectSound, stop: stopNegativeEffectSound } = useNegativeEffectSound();\n    const { play: playNeutralEffectSound, stop: stopNeutralEffectSound } = useNeutralEffectSound();\n    const { play: playConfrontBattleSound, stop: stopConfrontBattleSound } = useConfrontBattleSound();\n    const { play: playGameOverSound, stop: stopGameOverSound } = useGameOverSound();\n    const { play: playHitWallSound, stop: stopHitWallSound } = useHitWallSound();\n\n    return (\n        <div>\n            <button onClick={() => playGameCompletionSound()}>Play Game Compeletion Sound</button>\n            <button onClick={() => stopGameCompletionSound()}>Stop Game Compeletion Sound</button>\n            <button onClick={() => playPositiveEffectSound()}>Play PositiveEffectSound</button>\n            <button onClick={() => stopPositiveEffectSound()}>Stop PositiveEffectSound</button>\n            <button onClick={() => playNegativeEffectSound()}>Play NegativeEffectSound</button>\n            <button onClick={() => stopNegativeEffectSound()}>Stop NegativeEffectSound</button>\n            <button onClick={() => playNeutralEffectSound()}>Play NeutralEffectSound</button>\n            <button onClick={() => stopNeutralEffectSound()}>Stop NeutralEffectSound</button>\n            <button onClick={() => playConfrontBattleSound()}>Play ConfrontBattleSound</button>\n            <button onClick={() => stopConfrontBattleSound()}>Stop ConfrontBattleSound</button>\n            <button onClick={() => playGameOverSound()}>Play GameOverSound</button>\n            <button onClick={() => stopGameOverSound()}>Stop GameOverSound</button>\n            <button onClick={() => playHitWallSound()}>Play HitWallSound</button>\n            <button onClick={() => stopHitWallSound()}>Stop HitWallSound</button>\n        </div>\n\n    );\n}\n\n\nexport default EffectSoundTestContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  moveBackward,\n  moveForward,\n  resetLastMoveHitWall,\n  selectLastMoveHitWall,\n  turnLeft,\n  turnRight,\n} from '../reducers/controlSlice';\nimport styles from \"./gamePanel.module.css\"\nimport { useHitWallSound } from '../commons/SoundHooks';\n\nexport function GamePanel() {\n\n  const dispatch = useDispatch();\n\n  const handleMoveForward = () => {\n    dispatch(moveForward());\n  };\n  const handleMoveBackward = () => {\n    dispatch(moveBackward());\n  };\n\n  const handleTurnLeft = () => {\n    dispatch(turnLeft());\n  };\n  const handleTurnRight = () => {\n    dispatch(turnRight());\n  };\n\n\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'a':\n        handleTurnLeft();\n        break;\n      case 'd':\n        handleTurnRight();\n        break;\n      case 'w':\n        handleMoveForward();\n        break;\n      case 's':\n        handleMoveBackward();\n        break;\n      default:\n        break;\n    }\n  }\n\n  const isPlayHitWall = useSelector(selectLastMoveHitWall);\n  const { play } = useHitWallSound();\n  if (isPlayHitWall) {\n    play();\n    dispatch(resetLastMoveHitWall());\n  }\n\n  document.addEventListener(\"keydown\", handleKeyDown);\n\n\n  return (\n    <div>\n      {/* <button className={styles.forwardButton} onClick={() => handleMoveForward()}>\n        Move Forward\n        </button>\n      <button className={styles.backwardButton} onClick={() => handleMoveBackward()}>\n        Move Backward\n        </button>\n      <button className={styles.turnLeftButton} onClick={() => handleTurnLeft()}>\n        Turn Left\n        </button>\n      <button className={styles.turnRightButton} onClick={() => handleTurnRight()}>\n        Turn Right\n        </button> */}\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const UNINIT = 0;\nexport const READY = 1;\nexport const RUNNING = 2;\nexport const PAUSE = 3;\n\nexport const elapseTimerSlice = createSlice({\n    name: 'elapseTimer',\n    initialState: {\n        curNumSeconds: 0,\n        status: UNINIT,\n        intervalHasSet: false,\n    },\n    reducers: {\n        countUp: state => {\n            if (state.status === RUNNING) {\n                state.curNumSeconds += 1;\n            }\n        },\n        pauseCount: state => {\n            state.status = PAUSE;\n        },\n        resumeCount: state => {\n            state.status = RUNNING;\n        },\n        readyCount: state=>{\n            state.status = READY;\n        },\n        resetCount: state => {\n            state.curNumSeconds = 0;\n        },\n        adjustCountByAmount: (state, action) => {\n            state.curNumSeconds += action.payload;\n        },\n        markIntervalSet: state=>{\n            state.intervalHasSet = true;\n        }\n\n    },\n});\n\nexport const {\n    countUp,\n    pauseCount,\n    resumeCount,\n    resetCount,\n    readyCount,\n    adjustCountByAmount,\n    markIntervalSet\n} = elapseTimerSlice.actions;\n\nexport const selectCurNumSeconds = state => state.elapseTimer.curNumSeconds;\nexport const selectStatus = state => state.elapseTimer.status;\nexport const selectIntervalHasSet = state => state.elapseTimer.intervalHasSet;\n\n\nexport default elapseTimerSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurNumSeconds, selectStatus, countUp, resumeCount, READY, selectIntervalHasSet, markIntervalSet } from '../reducers/elapseTimerSlice'\n\n// A timer recording elapse time.\nexport default function ElapseTimer() {\n    const status = useSelector(selectStatus);\n    const intervalHasSet = useSelector(selectIntervalHasSet);\n    const dispatch = useDispatch();\n    const handleCountUpDispatch = () => {\n        dispatch(countUp());\n    }\n\n    if (status === READY) {\n        dispatch(resumeCount());\n        if (!intervalHasSet) {\n            setInterval(handleCountUpDispatch, 1000);\n            dispatch(markIntervalSet());\n        }\n    }\n\n    const x = useSelector(selectCurNumSeconds);\n    const elapseTime = `Time elapsed: ${Math.floor(x / 3600)} H ${Math.floor(x / 60)} M ${x % 60} S`;\n\n    return (\n        <div className=\"elapse-timer\">\n            <p>{elapseTime}</p>\n        </div>\n    );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_HP = 100;\n\nexport const MINI_MAP_ON = (1 << 0);\nexport const DARK_MODE_ON = (1 << 1);\nexport const SPEED_UP = (1 << 2);\n\nexport const MINI_MAP_OFF = (1 << 0);\nexport const DARK_MODE_OFF = (1 << 1);\nexport const SPEED_DOWN = (1 << 2);\n\nexport const playerStatusSlice = createSlice({\n    name: 'playerStatus',\n    initialState: {\n        HP: INITIAL_HP,\n        buff: 0,\n        debuff: 0,\n        speedModifier: 1\n    },\n    reducers: {\n        decreaseHP: (state, action) => {\n            state.HP -= action.payload;\n            if (state.HP < 0) {\n                state.HP = 0;\n            }\n        },\n        increaseHP: (state, action) => {\n            if (state.HP === INITIAL_HP) {\n                return;\n            }\n            state.HP += action.payload;\n        },\n        resetBuffAndDebuff: state => {\n            state.buff = 0;\n            state.debuff = 0;\n        },\n        addABuff: (state, action) => {\n            state.buff |= action.payload;\n        },\n        removeABuff: (state, action) => {\n            state.buff &= (~action.payload);\n        },\n        addADebuff: (state, action) => {\n            state.debuff |= action.payload;\n        },\n        removeADebuff: (state, action) => {\n            state.debuff &= (~action.payload);\n        },\n        resetPlayerStatus: state => {\n            state.HP = INITIAL_HP;\n            state.buff = 0;\n            state.debuff = 0;\n        }\n    },\n});\n\nexport const {\n    decreaseHP,\n    increaseHP,\n    resetBuffAndDebuff,\n    addABuff,\n    removeABuff,\n    addADebuff,\n    removeADebuff,\n    resetPlayerStatus\n} = playerStatusSlice.actions;\n\nexport const selectHP = state => state.playerStatus.HP;\nexport const selectBuff = state => state.playerStatus.buff;\nexport const selectDebuff = state => state.playerStatus.debuff;\n\nexport default playerStatusSlice.reducer;\n","import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport * as THREE from 'three';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectAction,\n  selectPosX,\n  selectPosZ,\n  popEvent,\n  selectDirection,\n  MOVE_FORWARD,\n  MOVE_BACKWARD,\n  TURN_LEFT,\n  TURN_RIGHT,\n  NOTHING,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  RANDOM_EVENT,\n  selectIsResetCamera,\n  assignResetCamera\n} from '../reducers/controlSlice';\nimport { selectBuff, selectDebuff, SPEED_DOWN, SPEED_UP } from '../reducers/playerStatusSlice';\n\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// Make the camera look ahead, can be any value greater than 0\nconst DIRECTION_ADJUSTER = 0.1;\nconst SPEED_MODIFIER = 2;\n\nexport const LabyrinthCamera = ({\n  blockWidth,\n  startCoordX,\n  startCoordZ,\n  cameraInitCoordX,\n  cameraInitCoordZ,\n  moveSpeed,\n  turnSpeed,\n}) => {\n  const { camera, gl } = useThree();\n  const controls = React.useRef();\n\n  const currentAction = useSelector(selectAction);\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const direction = useSelector(selectDirection);\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  let speedModifier = 1;\n  if (buff & SPEED_UP) {\n    speedModifier = SPEED_MODIFIER;\n  } else if (debuff & SPEED_DOWN) {\n    speedModifier = 1 / SPEED_MODIFIER;\n  }\n  const actualMoveSpeed = moveSpeed * speedModifier;\n  const actualTurnSpeed = turnSpeed * speedModifier;\n  // Current angle is the remaining angle the camera needs to rotate\n  const [currentAngle, setCurrentAngle] = React.useState(0);\n  let localAngle = currentAngle;\n\n  const coordX = (-blockWidth / 2 + (posX + 1) * blockWidth + startCoordX);\n  const coordZ = (-blockWidth / 2 + (posZ + 1) * blockWidth + startCoordZ);\n  const isResetCamera = useSelector(selectIsResetCamera);\n\n  const dispatch = useDispatch();\n\n  useFrame(() => {\n    // console.log(posX, coordX, camera.position.x)\n    // update the view as the vis is interacted with\n    // controls.current.update();\n    // console.log(currentAction);\n    if (!isResetCamera) {\n      camera.position.x = cameraInitCoordX;\n      camera.position.z = cameraInitCoordZ;\n      dispatch(assignResetCamera(true));\n    }\n    switch (currentAction) {\n      case MOVE_FORWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n            }\n            break;\n          case LEFT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z < coordZ) {\n              camera.position.z += actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case MOVE_BACKWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z < coordZ) {\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n              camera.position.z += actualMoveSpeed;\n            }\n            break;\n          case LEFT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n            console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case TURN_LEFT:\n        if (currentAngle === 0) {\n          localAngle = currentAngle + 90;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle > 0) {\n          camera.rotateY(THREE.Math.degToRad(actualTurnSpeed));\n          localAngle -= actualTurnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (Math.abs(localAngle) < actualTurnSpeed) {\n          dispatch(popEvent());\n          setCurrentAngle(0);\n        }\n        break;\n      case TURN_RIGHT:\n        if (currentAngle === 0) {\n          setCurrentAngle(currentAngle - 90);\n          localAngle = currentAngle - 90;\n        }\n        if (localAngle < 0) {\n          camera.rotateY(THREE.Math.degToRad(-actualTurnSpeed));\n          localAngle += actualTurnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (Math.abs(localAngle) < actualTurnSpeed) {\n          dispatch(popEvent());\n          setCurrentAngle(0);\n        }\n        break;\n      case NOTHING:\n        break;\n      case RANDOM_EVENT:\n        break;\n      default:\n        console.log(\"button error!\");\n    }\n    camera.updateProjectionMatrix();\n  });\n\n  return (\n    <trackballControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n\nexport default LabyrinthCamera;\n","export class UnionFind {\n    partsCount;\n    rank;\n    path;\n\n    constructor(elementNum) {\n        this.partsCount = elementNum;\n        this.path = Array.apply(null, { length: elementNum }).map(Number.call, Number)\n        this.rank = Array.apply(0, { length: elementNum });\n    }\n\n    find(index) {\n        while (index !== this.path[index]) {\n            this.path[index] = this.path[this.path[index]];\n            index = this.path[index];\n        }\n        return index;\n    }\n\n    union(left, right) {\n        const leftRoot = this.find(left);\n        const rightRoot = this.find(right);\n        if (leftRoot === rightRoot) {\n            return;\n        }\n        this.partsCount -= 1;\n        if (this.rank[leftRoot] < this.rank[rightRoot]) {\n            this.path[leftRoot] = rightRoot;\n        } else if (this.rank[leftRoot] > this.rank[rightRoot]) {\n            this.path[rightRoot] = leftRoot;\n        } else {\n            this.path[leftRoot] = rightRoot;\n            this.rank[rightRoot] += 1;\n        }\n    }\n}\n\nexport function shuffleArray(targetArray) {\n    // Reference: https://stackoverflow.com/questions/3943772/how-do-i-shuffle-the-characters-in-a-string-in-javascript\n    const length = targetArray.length;\n    for (let i = length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let tmp = targetArray[i];\n        targetArray[i] = targetArray[j];\n        targetArray[j] = tmp;\n    }\n    return targetArray;\n}\n\nexport function partialApply(fn, ...args) {\n    // Reference: https://medium.com/@jnkrtech/partial-function-application-in-javascript-and-flow-7f3ca87074fe\n    return fn.bind(null, ...args);\n}\n\n// Returns random integer smaller than max.\nexport function genRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nexport function compareNumbers(a, b) {\n    return a - b;\n}\n","import * as React from 'react';\nimport { Box } from '@react-three/drei'\nimport { shuffleArray, UnionFind } from \"../commons/utils\";\n\n// Wall global index definination example:\n// (The below two pictures are the same 3*3 maze, we separte vertical and horizontal walls to make it looks more clear)\n//\n//   012\n//   ---\n//   345\n//   ---\n//   678\n//\n//  9|10|11|\n// 12|13|14|\n// 15|16|17|\n//\n\n/* Given an wall index, output the neighbour cell index (In x+z*numZ format) */\nfunction getWallNeighbourCells(numX, numCells, wallIndex) {\n  if (wallIndex < numCells) {\n    // wallIndex < numCells, it is a horizontal wall\n    return [wallIndex - numX, wallIndex];\n  } else {\n    return [wallIndex - numCells - 1, wallIndex - numCells];\n  }\n}\n\nexport function initLabyrinthWalls(numX, numZ) {\n  // The algorithm is:\n  // We put all cells of a maze into a disjointed set, and set them as\n  // disjointed. Then we random select a wall. If the two cells separated\n  // by the wall is not connected, we tear down the wall, otherwise we keep\n  // the wall and choose another wall. We do this until there's only only\n  // connecting compoments left.\n  const numCells = numX * numZ;\n  const numCellPlusBorder = (numX+1) * (numZ+1);\n  const unionFind = new UnionFind(numCells);\n  let wallArray = [];\n  let resArray = [];\n  for (let i = numX; i < numCells; i++) {\n    wallArray.push(i);\n  }\n  for (let i = numCells; i < numCells * 2; i++) {\n    if (i % numX !== 0) {\n      wallArray.push(i);\n    }\n  }\n  wallArray = shuffleArray(wallArray);\n  let currentPos = wallArray.length - 1;\n\n  do {\n    const currentWall = wallArray[currentPos];\n    const [neighborA, neighborB] = getWallNeighbourCells(\n      numX,\n      numCells,\n      currentWall\n    );\n    if (unionFind.find(neighborA) === unionFind.find(neighborB)) {\n      resArray.push(currentWall);\n    } else {\n      unionFind.union(neighborA, neighborB);\n    }\n    currentPos -= 1;\n  } while (unionFind.partsCount !== 1);\n  while (currentPos >= 0) {\n    resArray.push(wallArray[currentPos]);\n    currentPos -= 1;\n  }\n\n  const wallLeft = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  const wallTop = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  for (let i = 0; i < numX; i++) {\n    // Make the top border to be true\n    wallTop[i] = true;\n    // Make the bottom border to be true\n    wallTop[i + numZ*(numX+1)] = true;\n  }\n  for (let i = 0; i < numZ; i++) {\n    // Make the left border to be true\n    wallLeft[i * (numX+1)] = true;\n    // Make the right border to be true\n    wallLeft[i * (numX+1) + numX] = true;\n  }\n\n  const convertIndex = val =>((~~(val / numX))*(numX+1) + val%numX);\n  for (let i = 0; i < resArray.length; i++) {\n    if (resArray[i] < numCells) {\n      wallTop[convertIndex(resArray[i])] = true;\n    } else {\n      wallLeft[convertIndex(resArray[i] - numCells)] = true;\n    }\n  }\n\n  wallLeft[0] = false;\n  wallLeft[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-2] = false;\n  return [wallLeft, wallTop];\n}\n\nfunction GenHorizontalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"top\"}\n      args={[width, height, depth]}\n      rotation={[0, 0, 0]}\n      position={[x + width / 2, 0, z]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nfunction GenVerticalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"left\"}\n      args={[width, height, depth]}\n      rotation={[0, Math.PI * 0.5, 0]}\n      position={[x, 0, z + width / 2]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nexport function Walls(\n  { numX,\n    numZ,\n    wallTop,\n    wallLeft,\n    blockWidth,\n    blockHeight,\n    blockDepth,\n    mazeWidth,\n    mazeDepth }\n) {\n  const walls = [];\n  for (let i = 0; i < numX+1; i++) {\n    for (let j = 0; j < numZ+1; j++) {\n      if (wallTop[i + (numX+1) * j]) {\n        walls.push(\n          GenHorizontalWall(\n            -mazeWidth/2 + i * blockWidth - blockDepth / 2,\n            -mazeDepth/2 + j * blockWidth,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n      if (wallLeft[i + (numX+1) * j]) {\n        walls.push(\n          GenVerticalWall(\n            -mazeWidth/2 + i * blockWidth,\n            -mazeDepth/2 + j * blockWidth - blockDepth / 2,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n    }\n  }\n\n  return (\n    <group name=\"walls\">\n      {walls}\n    </group>\n  );\n}\n","import * as React from 'react';\nimport { useSelector, ReactReduxContext } from 'react-redux';\nimport { Canvas } from 'react-three-fiber'\nimport { Sky, Stars, Plane, useContextBridge } from '@react-three/drei'\nimport { LabyrinthCamera } from './LabyrinthCamera';\nimport { Walls } from './Walls';\nimport styles from \"./labyrinthView.module.css\"\n\nexport function LabyrinthView({\n  numX,\n  numZ,\n  blockWidth,\n  blockHeight,\n  blockDepth,\n  mazeWidth,\n  mazeDepth,\n  wallTop,\n  wallLeft,\n  darkModeIsOn\n}) {\n\n  // Direction definination:\n  //\n  //             top\n  //      ^\n  //      |\n  //      | z\n  //      | \n  // left | a             right\n  //      | x\n  //      | i\n  //      | s\n  //      |______________>\n  //            x axis\n  //\n  //            bottom\n\n  // WallLeft and wall top are two conceptual matrix of booleans(they are flattened to arrays for performance), recording\n  // whether a wall exist or not for a certain cell.\n  //\n  // wallTop: whether the wall on the top(in the 2D world) of a cell exists\n  // wallLeft: whether the wall on the left of a cell exists\n  // The isExist information for the wall on the right of the cell is provided by the wallLeft of the cell's right neighbour cell, so as for\n  // the bottom wall.\n  //\n  // To lookup the top wall info cell(x, y), we call wallTop[x + y*numZ]\n\n  // Starting point in the x and z axis(this is coordinate, not index)\n  const startCoordX = -numX * blockWidth / 2;\n  const startCoordZ = -numZ * blockWidth / 2;\n  // Get the current view coordinate\n  const posCoordX = -blockWidth / 2 + numX * blockWidth + startCoordX;\n  const posCoordZ = -blockWidth / 2 + (numZ + 1) * blockWidth + startCoordZ;\n  // Needed to use react-redux in react-three-fiber canvas. \n  // For details: https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/\n  const ContextBridge = useContextBridge(ReactReduxContext);\n  return (\n    <div className={styles.canvasDiv}>\n      <Canvas camera={{\n        fov: 80, position: [posCoordX, 0, posCoordZ + blockWidth]\n      }}>\n        <ContextBridge>\n          <LabyrinthCamera\n            blockWidth={blockWidth}\n            startCoordX={startCoordX}\n            startCoordZ={startCoordZ}\n            cameraInitCoordX={posCoordX}\n            cameraInitCoordZ={posCoordZ}\n            moveSpeed={0.5}\n            turnSpeed={2}\n          />\n        </ContextBridge>\n        <ambientLight color=\"#ffffff\" intensity={0.4} />\n        {/* Reference: https://drei.pmnd.rs/?path=/story/shaders-softshadows--soft-shadows-st\n            Make the light the same direction with the sun\n        */}\n        {darkModeIsOn ? null : <directionalLight\n          position={[-500, 20, startCoordZ + blockWidth / 2]}\n          intensity={1.5}\n        />}\n        <Walls\n          numX={numX}\n          numZ={numZ}\n          wallTop={wallTop}\n          wallLeft={wallLeft}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeWidth={mazeWidth}\n          mazeDepth={mazeDepth}\n        />\n        {darkModeIsOn ? null : <Sky\n          distance={10000} // Camera distance (default=450000)\n          // Sun position normal(Make the exit faces the sun, x should be less than -mazeWidth+blockWidth, \n          // y should be greater than 0, z should be -mazeHeight+blockWidth)\n          sunPosition={[-500, blockHeight, startCoordZ + blockWidth / 2]}\n          inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n          azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        />}\n        {/* Referenced from https://github.com/pmndrs/drei#stars */}\n        <Stars\n          radius={mazeWidth * 2} // Radius of the inner sphere (default=100)\n          depth={50} // Depth of area where stars should fit (default=50)\n          count={5000} // Amount of stars (default=5000)\n          factor={20 * (numX / 5)} // Size factor (default=4)\n          saturation={0} // Saturation 0-1 (default=0)\n          fade // Faded dots (default=false)\n        />\n        <Plane rotation-x={-Math.PI / 2} position={[0, -blockHeight / 2, 0]} args={[mazeWidth, mazeDepth, 4, 4]}>\n          <meshBasicMaterial attach=\"material\" opacity={0.5} color=\"#405940\" />\n        </Plane>\n        {darkModeIsOn ? <fog attach=\"fog\" args={['black', 0, blockWidth]} /> : null}\n      </Canvas>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_PRESENSE = false;\nexport const popUpWindowSlice = createSlice({\n    name: 'popUpWindow',\n    initialState: {\n        smallPopUpPresense: INITIAL_PRESENSE,\n        smallPopIsToOpen: INITIAL_PRESENSE,\n        bigPopUpPresense: INITIAL_PRESENSE,\n        bigPopUpIsToOpen: INITIAL_PRESENSE\n    },\n    reducers: {\n        enableSmallPopUpPresense: state => {\n            state.smallPopUpPresense = true;\n        },\n        disableSmallPopUpPresense: state => {\n            state.smallPopUpPresense = false;\n        },\n        enableSmallPopUpIsToOpen: state => {\n            state.smallPopIsToOpen = true;\n        },\n        disableSmallPopUpIsToOpen: state => {\n            state.smallPopIsToOpen = false;\n        },\n        enableBigPopUpPresense: state => {\n            state.bigPopUpPresense = true;\n        },\n        disableBigPopUpPresense: state => {\n            state.bigPopUpPresense = false;\n        },\n        enableBigPopUpIsToOpen: state => {\n            state.bigPopUpIsToOpen = true;\n        },\n        disableBigPopUpIsToOpen: state => {\n            state.bigPopUpIsToOpen = false;\n        },\n    },\n});\n\nexport const {\n    enableSmallPopUpPresense,\n    disableSmallPopUpPresense,\n    enableSmallPopUpIsToOpen,\n    disableSmallPopUpIsToOpen,\n    enableBigPopUpPresense,\n    disableBigPopUpPresense,\n    enableBigPopUpIsToOpen,\n    disableBigPopUpIsToOpen\n} = popUpWindowSlice.actions;\n\nexport const selectSmallPopUpPresense = state => state.popUpWindow.smallPopUpPresense;\nexport const selectSmallPopUpIsToOpen = state => state.popUpWindow.smallPopIsToOpen;\nexport const selectBigPopUpPresense = state => state.popUpWindow.bigPopUpPresense;\nexport const selectBigPopUpIsToOpen = state => state.popUpWindow.bigPopUpIsToOpen;\n\n\nexport default popUpWindowSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { enableBigPopUpPresense, selectBigPopUpPresense, selectBigPopUpIsToOpen, disableBigPopUpIsToOpen } from '../reducers/popUpWindowSlice';\nimport styles from './bigPopUpWindow.module.css'\nimport Modal from \"react-modal\"\nimport { pauseCount } from '../reducers/elapseTimerSlice';\nimport { occurEvent } from '../reducers/controlSlice';\n\nconst BigPopUpWindow = (props) => {\n    const dispatch = useDispatch();\n    const isToOpen = useSelector(selectBigPopUpIsToOpen)\n    useEffect(() => {\n        if (isToOpen) {\n            dispatch(enableBigPopUpPresense());\n            dispatch(occurEvent());\n            dispatch(disableBigPopUpIsToOpen());\n        }\n    });\n\n    const isOpen = useSelector(selectBigPopUpPresense);\n    useEffect(() => {\n        if (isOpen) {\n            dispatch(pauseCount());\n        }\n    });\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            className={styles.popup}\n            overlayClassName={styles.overlay}\n            closeTimeoutMS={1000}>\n            <img src={props.background} className={styles.backgroundPic} alt={\"\"} />\n\n            <div className={styles.content}>\n\n                {props.children}\n                <div className={styles.buttonsection}>\n                    {props.buttons}\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default BigPopUpWindow;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { disableSmallPopUpPresense, enableSmallPopUpPresense, selectSmallPopUpPresense, selectSmallPopUpIsToOpen, disableSmallPopUpIsToOpen } from '../reducers/popUpWindowSlice';\nimport styles from './smallPopUpWindow.module.css'\nimport Modal from \"react-modal\"\n\n\nconst SmallPopUpWindow = (props) => {\n    const dispatch = useDispatch();\n    const isToOpen = useSelector(selectSmallPopUpIsToOpen)\n    useEffect(() => {\n        if (isToOpen) {\n            dispatch(enableSmallPopUpPresense());\n            dispatch(disableSmallPopUpIsToOpen());\n        }\n    });\n    const handlePresenseChange = () => {\n        dispatch(disableSmallPopUpPresense());\n    }\n\n    useEffect(() => {\n        setTimeout(handlePresenseChange, 2000);\n    });\n    const isOpen = useSelector(selectSmallPopUpPresense);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            className={styles.popup}\n            overlayClassName={styles.overlay}\n            closeTimeoutMS={1000}>\n            {/* <img src={background} className={styles.backgroundPic} alt={\"\"} /> */}\n\n            <div className={styles.content}>\n\n                {props.children}\n                <div className={styles.buttonsection}>\n                    {props.buttons}\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default SmallPopUpWindow;\n","export default __webpack_public_path__ + \"static/media/bigWindowBackground.851d04fd.png\";","import { createSlice } from '@reduxjs/toolkit';\nimport { compareNumbers } from '../commons/utils'\n\nexport const leaderboardSlice = createSlice({\n    name: 'leaderboard',\n    initialState: {\n        list: []\n    },\n    reducers: {\n        appendToLeaderBoard: (state, action) => {\n            state.list.push(action.payload);\n            state.list.sort(compareNumbers);\n            if (state.list.length > 10) {\n                state.list.pop();\n            }\n        }\n    },\n});\n\nexport const {\n    appendToLeaderBoard\n} = leaderboardSlice.actions;\n\nexport const selectList = state => state.leaderboard.list;\n\n\nexport default leaderboardSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const EASY = 0;\nexport const MEDIUM = 1;\nexport const HARD = 2;\nexport const CUSTOM = 3;\n\nexport const gameModeSlice = createSlice({\n    name: 'gameMode',\n    initialState: {\n        gameMode: 1\n    },\n    reducers: {\n        setGameMode: (state, action) =>{\n            state.gameMode = action.payload\n        }\n    },\n});\n\nexport const {\n    setGameMode,\n} = gameModeSlice.actions;\n\nexport const selectGameMode = state => state.gameMode.gameMode;\n\nexport default gameModeSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/mixkit-game-level-music-689.1410a480.wav\";","import React from 'react';\nimport useSound from 'use-sound';\nimport bgm from '../music/mixkit-game-level-music-689.wav'\n\nexport function useBgmPlay() {\n    const [play, { stop }] = useSound(bgm, {\n        interrupt: true,\n        volume: 0.35,\n        loop: true,\n    });\n    return { play, stop };\n}\n\nexport const BackgroundMusic = () => {\n    return (\n        <React.Fragment>\n        </React.Fragment>\n    );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { assignInit, assignNumX, assignNumZ, assignResetEvent, NOTHING, popEvent, RANDOM_EVENT, selectResetEvent } from \"../reducers/controlSlice\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { readyCount, selectCurNumSeconds, resumeCount, pauseCount, resetCount } from '../reducers/elapseTimerSlice'\nimport { resetPlayerStatus } from \"../reducers/playerStatusSlice\";\nimport BigPopUpWindow from \"./BigPopUpWindow\";\nimport SmallPopUpWindow from \"./SmallPopUpWindow\";\nimport { disableBigPopUpPresense, enableBigPopUpIsToOpen, enableSmallPopUpIsToOpen } from \"../reducers/popUpWindowSlice\";\nimport { partialApply, genRandomInt } from \"../commons/utils\";\nimport background from '../images/bigWindowBackground.png'\nimport { appendToLeaderBoard } from \"../reducers/leaderboardSlice\";\nimport { usePositiveEffectSound, useNegativeEffectSound, useGameCompletionSound, useNeutralEffectSound } from \"../commons/SoundHooks\"\nimport {\n  decreaseHP,\n  increaseHP,\n  removeABuff,\n  removeADebuff,\n  resetBuffAndDebuff,\n  addABuff,\n  addADebuff,\n  DARK_MODE_ON,\n  DARK_MODE_OFF,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  SPEED_UP,\n  SPEED_DOWN\n} from '../reducers/playerStatusSlice';\nimport { EASY, HARD, selectGameMode } from \"../reducers/gameModeSlice\";\nimport { useBgmPlay } from \"../commons/BackgroundMusic\";\n\nconst NUM_DEBUFF_TYPE = 4;\nconst DARK_MODE_ID = 0;\nconst SPEED_DOWN_ID = 1;\nconst HIDE_MINI_MAP = 2;\nconst HP_DOWN_BY_TEN = 3;\n\nconst NUM_BUFF_TYPE = 4;\nconst BRIGHT_MODE_ID = 0;\nconst SPEED_UP_ID = 1;\nconst SHOW_MINI_MAP = 2;\nconst HP_UP_BY_TEN = 3;\n\nconst NUM_EVENT_TYPE = 6;\nconst START_GAME_EVENT = 0;\nconst END_GAME_EVENT = 1;\nconst POSITIVE_EFFECT_EVENT = 2;\nconst NEGATIVE_EFFECT_EVENT = 3;\nconst NEUTRAL_EFFECT_EVENT = 4;\nconst CONFRONT_BATTLE_EVENT = 5;\n\nfunction StartEventRender() {\n  const dispatch = useDispatch();\n  const buttons = (<div onClick={() => {\n    dispatch(resumeCount());\n    dispatch(popEvent());\n    dispatch(disableBigPopUpPresense());\n  }}>Play now!</div>);\n  return (<BigPopUpWindow buttons={buttons} background={background}>\n    <h1>You are in a maze</h1>\n    <div>This is a dangerous maze, good luck!</div>\n  </BigPopUpWindow>);\n}\n\nfunction startEventCallback(dispatch) {\n  dispatch(readyCount());\n}\n\nfunction EndEventRender() {\n  const time = useSelector(selectCurNumSeconds);\n  const [hasAppend, setHasAppend] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!hasAppend) {\n      dispatch(appendToLeaderBoard(time));\n    }\n  });\n  if (!hasAppend) {\n    setHasAppend(true);\n  }\n  const buttons = (\n    <React.Fragment>\n      <div onClick={() => {\n        dispatch(popEvent());\n        dispatch(resetPlayerStatus());\n        dispatch(resetCount());\n        dispatch(assignInit(false));\n        dispatch(disableBigPopUpPresense());\n      }}\n      > Play again </div>\n      <div> See the leaderboard </div>\n    </React.Fragment>\n  );\n\n  return (<BigPopUpWindow buttons={buttons} background={background}>\n    <h1>Congrats!</h1>\n    <div>You've passed the maze within {time} seconds!</div>\n  </BigPopUpWindow>);\n}\n\n// function endEventCallback(dispatch, playGameCompletionSound) {\nfunction endEventCallback(dispatch, play) {\n  play();\n  dispatch(pauseCount);\n  dispatch(popEvent);\n}\n\n// With a Strong wind, all buff and debuff are cleared.\n// function strongWindEventCallBack(dispatch, playNeutralEffectSound) {\nfunction strongWindEventCallBack(dispatch, play, gameMode) {\n  play();\n  dispatch(resetBuffAndDebuff());\n  if (gameMode === EASY) {\n    dispatch(addABuff(DARK_MODE_OFF));\n    dispatch(removeADebuff(DARK_MODE_ON));\n    dispatch(addABuff(MINI_MAP_ON));\n    dispatch(removeADebuff(MINI_MAP_OFF));\n  } else if (gameMode === HARD) {\n    dispatch(addADebuff(DARK_MODE_ON));\n    dispatch(removeABuff(DARK_MODE_OFF));\n    dispatch(addADebuff(MINI_MAP_OFF));\n    dispatch(removeABuff(MINI_MAP_ON));\n  }\n}\n\nfunction StrongWindEventRender() {\n  return (\n    <SmallPopUpWindow>\n      <h1>Wow!</h1>\n      <div>You've been applied A strong wind!</div>\n      <div>All effects are cleared!</div>\n    </SmallPopUpWindow>\n  );\n}\n\n\n// The smelly wind will add debuff: darkmode, minimap off, slowly move.\n// function smellyWindEventCallBack(debuffID, dispatch, playNegativeEffectSound) {\nfunction smellyWindEventCallBack(debuffId, dispatch, play) {\n  play();\n  // Generate a random debuff\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      dispatch(addADebuff(DARK_MODE_ON));\n      dispatch(removeABuff(DARK_MODE_OFF));\n      break;\n    case SPEED_DOWN_ID:\n      dispatch(addADebuff(SPEED_DOWN));\n      dispatch(removeABuff(SPEED_UP));\n      break;\n    case HIDE_MINI_MAP:\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(removeABuff(MINI_MAP_ON));\n      break;\n    case HP_DOWN_BY_TEN:\n      dispatch(decreaseHP(10));\n      break;\n    default:\n      break;\n  }\n}\n\nfunction SmellyWindEventRender({ debuffId }) {\n  let specificEventContent = null;\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      specificEventContent = \"Dark Mode is on!\";\n      break;\n    case SPEED_DOWN_ID:\n      specificEventContent = \"Your speed is slowed down!\";\n      break;\n    case HIDE_MINI_MAP:\n      specificEventContent = \"Mini map is gone!\"\n      break;\n    case HP_DOWN_BY_TEN:\n      specificEventContent = \"Your lost 10 HP!\"\n      break;\n    default:\n      break;\n  }\n  return (<SmallPopUpWindow>\n    <h1>Oh no!</h1>\n    <div>You met a smelly wind...</div>\n    <div>{specificEventContent}</div>\n  </SmallPopUpWindow>);\n}\n\n// With a Fresh wind, one buff is added: brightmode, minimap on, faster move.\n// function freshWindEventCallBack(buffId, dispatch, playPositiveEffectSound) {\nfunction freshWindEventCallBack(buffId, dispatch, play) {\n  play();\n  // Generate a random buff\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(removeADebuff(DARK_MODE_ON));\n      break;\n    case SPEED_UP_ID:\n      dispatch(addABuff(SPEED_UP));\n      dispatch(removeADebuff(SPEED_DOWN));\n      break;\n    case SHOW_MINI_MAP:\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(removeADebuff(MINI_MAP_OFF));\n      break;\n    case HP_UP_BY_TEN:\n      dispatch(increaseHP(10));\n      break;\n    default:\n      break;\n  }\n}\n\nfunction FreshWindEventRender({ buffId }) {\n  let specificEventContent = null;\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      specificEventContent = \"Bright mode is on!\";\n      break;\n    case SPEED_UP_ID:\n      specificEventContent = \"Your speed is up!\";\n      break;\n    case SHOW_MINI_MAP:\n      specificEventContent = \"Mini map is shown for you!\";\n      break;\n    case HP_UP_BY_TEN:\n      specificEventContent = \"Your got 10 HP!\";\n      break;\n    default:\n      break;\n  }\n  return (<SmallPopUpWindow>\n    <h1>Great!</h1>\n    <div>A fresh wind brought you something helpful! </div>\n    <div>{specificEventContent}</div>\n  </SmallPopUpWindow>);\n}\n\nclass Event {\n  constructor(toRender, callBack, eventTypeId) {\n    this.toRender = toRender;\n    this.callBack = callBack;\n    this.eventTypeId = eventTypeId;\n  }\n}\n\nfunction initEventMap(numX, numZ, gameMode) {\n  // console.log(\"game mode is: \" + gameMode);\n  const eventMap = Array(numX * numZ).fill(null);\n  // eventMap[numX * (numZ - 1) + numX - 1] = [<StartEventRender />, startEventCallback];\n  // new Event(<StartEventRender />\n  eventMap[numX * (numZ - 1) + numX - 1] = new Event(<StartEventRender />, startEventCallback, START_GAME_EVENT);\n  // eventMap[0] = [<EndEventRender />, endEventCallback];\n  eventMap[0] = new Event(<EndEventRender />, endEventCallback, END_GAME_EVENT);\n  for (let i = numX * (numZ - 1) + numX - 2; i > 0; i--) {\n    const eventId = genRandomInt(NUM_EVENT_TYPE);\n    switch (eventId) {\n      case NEGATIVE_EFFECT_EVENT:\n        if (gameMode !== EASY) {\n          const debuffId = genRandomInt(NUM_DEBUFF_TYPE + 1);\n          eventMap[i] = new Event(<SmellyWindEventRender debuffId={debuffId} />, partialApply(smellyWindEventCallBack, debuffId), NEGATIVE_EFFECT_EVENT);\n        }\n        break;\n      case POSITIVE_EFFECT_EVENT:\n        if (gameMode !== HARD) {\n          const buffId = genRandomInt(NUM_BUFF_TYPE + 1);\n          eventMap[i] = new Event(<FreshWindEventRender buffId={buffId} />, partialApply(freshWindEventCallBack, buffId), POSITIVE_EFFECT_EVENT);\n        }\n        break;\n      case NEUTRAL_EFFECT_EVENT:\n        eventMap[i] = new Event(<StrongWindEventRender />, strongWindEventCallBack, NEUTRAL_EFFECT_EVENT);\n        break;\n      default:\n        break;\n    }\n  }\n  return eventMap;\n}\n\nexport function EventManager({ discovered, posX, posZ, numX, numZ, currentAction, isResetEvent }) {\n  const gameMode = useSelector(selectGameMode);\n\n  const [eventMap, setEventMap] = useState(initEventMap(numX, numZ, gameMode));\n\n  const currentRender = useRef(null);\n  const currentIndex = posZ * numX + posX;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isResetEvent) {\n      setEventMap(initEventMap(numX, numZ, gameMode));\n      dispatch(assignResetEvent(false));\n    }\n  });\n  const { play: playGameCompletionSound } = useGameCompletionSound();\n  const { play: playPositiveEffectSound } = usePositiveEffectSound();\n  const { play: playNegativeEffectSound } = useNegativeEffectSound();\n  const { play: playNeutralEffectSound } = useNeutralEffectSound();\n  const { play } = useBgmPlay();\n  // TODO: add confront battle event\n  // const { play: playConfrontBattleSound } = useConfrontBattleSound();\n  //TODO: add gameover event\n  // const { play: playGameOverSound } = useGameOverSound();\n  let currentCallback = () => { };\n  if (currentAction === NOTHING || currentAction === RANDOM_EVENT) {\n    if (eventMap[currentIndex] !== null && eventMap[currentIndex] !== undefined) {\n      if (!discovered.current[currentIndex]) {\n        const { toRender, callBack, eventTypeId } = eventMap[currentIndex];\n        // currentRender.current = eventMap[currentIndex];\n        currentRender.current = toRender;\n        //toRender = eventMap[currentIndex][0];\n        // currentCallback = () => { eventMap[currentIndex][1](dispatch, select); dispatch(enableIsToOpen()) };\n        // currentCallback = () => { callback(dispatch, select); dispatch(enableIsToOpen()) };\n\n        switch (eventTypeId) {\n          case START_GAME_EVENT:\n            currentCallback = () => { callBack(dispatch); play(); dispatch(enableBigPopUpIsToOpen()); };\n            break;\n          case END_GAME_EVENT:\n            currentCallback = () => { callBack(dispatch, playGameCompletionSound); dispatch(enableBigPopUpIsToOpen()); dispatch(assignNumX(numX + 2)); dispatch(assignNumZ(numZ+2)) };\n            break;\n          case POSITIVE_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playPositiveEffectSound); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          case NEGATIVE_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playNegativeEffectSound); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          case NEUTRAL_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playNeutralEffectSound, gameMode); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          // TODO: add confront battle event\n          // case CONFRONT_BATTLE_EVENT:\n          //   currentCallback = () => { callBack(dispatch, playConfrontBattleSound); dispatch(enableIsToOpen()) };\n          //   break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n  useEffect(currentCallback);\n  return currentRender.current;\n}\n","import React from 'react';\nimport { NOTHING } from '../reducers/controlSlice';\nimport styles from './miniMap.module.css';\n\n\nexport function MiniMap({\n    discovered,\n    numX,\n    numZ,\n    posX,\n    posZ,\n    wallLeft,\n    wallTop,\n    currentAction,\n    miniMapIsOn\n}) {\n    const display = [];\n    if (currentAction === NOTHING) {\n        discovered.current[posZ * numX + posX] = true;\n    }\n    for (let i = 0; i < numZ; i++) {\n        let currentRow = [];\n        for (let j = 0; j < numX; j++) {\n            if (discovered.current[i * numX + j] || (posX === j && posZ === i)) {\n                currentRow.push(\n                    <button className={styles.square} key={String(i) + ',' + String(j)}\n                        style={{\n                            borderTop: wallTop[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderLeft: wallLeft[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderBottom: wallTop[(i + 1) * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderRight: wallLeft[i * (numX + 1) + j + 1] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            backgroundColor: (posX === j && posZ === i) ? 'rgb(37, 110, 194)' : 'rgba(240, 248, 255, 0.5)'\n                        }} >\n                    </button>\n                );\n            }\n            else {\n                currentRow.push(\n                    <button className={styles.square} key={String(i) + ',' + String(j)}\n                        style={{\n                            border: '0.5px solid rgba(0, 0, 0, 0.1)',\n                            backgroundColor: 'rgba(0, 0, 0, 0.1)'\n                        }} >\n                    </button>);\n\n            }\n        }\n        display.push(<div className={styles.broadRow} key={\"border\" + String(i)}>{currentRow}</div>)\n    }\n\n    return (\n        <div className={styles.container}>\n            <div></div>\n            <div className={styles.map}>\n                {miniMapIsOn ? display : null}\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/heart-icon.5f6c67fd.png\";","export default __webpack_public_path__ + \"static/media/normalclock.bdc92f27.png\";","export default __webpack_public_path__ + \"static/media/outoftimeclock.c12811a4.png\";","export default __webpack_public_path__ + \"static/media/mapicon.376644ec.png\";","export default __webpack_public_path__ + \"static/media/sun.37d40077.png\";","export default __webpack_public_path__ + \"static/media/night.bde826a9.png\";","export default __webpack_public_path__ + \"static/media/rocket.b58a9096.png\";","export default __webpack_public_path__ + \"static/media/turtleicon.fcc4bf50.png\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DARK_MODE_OFF, MINI_MAP_ON, selectBuff, selectDebuff, selectHP, SPEED_DOWN, SPEED_UP } from '../reducers/playerStatusSlice';\nimport styles from './playerStatusPanel.module.css'\n// Ref: https://iconarchive.com/show/love-is-in-the-web-icons-by-succodesign/heart-icon.html\nimport heart from '../images/heart-icon.png'\n// Ref: https://commons.wikimedia.org/wiki/File:Stock_alarm.svg\nimport normalclock from '../images/normalclock.png'\n// Ref: https://en.wikipedia.org/wiki/File:Out_of_date_clock_icon.svg\nimport outoftimeclock from '../images/outoftimeclock.png'\n// Ref: https://www.subpng.com/png-6x43z7/\nimport mapicon from '../images/mapicon.png'\n// Ref: https://www.flaticon.com/free-icon/sun_169367\nimport dayIcon from '../images/sun.png'\n// Ref: https://www.flaticon.com/free-icon/night_208293\nimport nightIcon from '../images/night.png'\n// Ref: https://www.flaticon.com/free-icon/rocket_1356479\nimport rocket from '../images/rocket.png'\n// Ref: https://iconarchive.com/show/noto-emoji-animals-nature-icons-by-google/22283-turtle-icon.html\nimport turtleicon from '../images/turtleicon.png'\nimport { selectCurNumSeconds } from '../reducers/elapseTimerSlice';\n\n// Ref: https://medium.com/@ItsMeDannyZ/how-to-build-a-progress-bar-with-react-8c5e79731d1f\nconst ProgressBar = (props) => {\n    return (\n        <div className={styles.progressBar}>\n            <Filler percentage={props.percentage} color={props.color} />\n        </div>\n    )\n}\n\nconst Filler = (props) => {\n    return <div className={styles.filler} style={{ width: `${props.percentage}%`, background: props.color }} />\n}\n\n\nconst PlayerStatusPanel = ({buff, debuff}) => {\n    const hp = useSelector(selectHP);\n    const clock = 100 - useSelector(selectCurNumSeconds);\n    return (\n        <div className={styles.container}>\n            <div className={styles.progressBarSection}>\n                <img className={styles.icon} src={heart} alt=\"HP\" />\n                <ProgressBar percentage={hp} />\n            </div>\n            <div className={styles.progressBarSection}>\n                <img className={styles.icon} src={clock > 20 ? normalclock : outoftimeclock} alt=\"Remaining Time\" />\n                <ProgressBar percentage={clock} color=\"blue\" />\n            </div>\n            <div className={styles.buffSection}>\n                <img className={styles.icon} src={buff & DARK_MODE_OFF ? dayIcon : nightIcon} alt=\"day mode\" />\n                {buff & MINI_MAP_ON ? <img className={styles.icon} src={mapicon} alt=\"minimap mode\" /> : null}\n                {buff & SPEED_UP ? <img className={styles.icon} src={rocket} alt=\"speed up\" /> : null}\n                {debuff & SPEED_DOWN ? <img className={styles.icon} src={turtleicon} alt=\"speed down\" /> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerStatusPanel;\n","import { useRef } from 'react';\nimport { GamePanel } from './GamePanel';\nimport ElapseTimer from './ElapseTimer';\nimport { LabyrinthView } from './LabyrinthView';\nimport { EventManager } from './EventManager';\nimport { MiniMap } from './MiniMap'\nimport { BackgroundMusic } from '../commons/BackgroundMusic'\nimport PlayerStatusPanel from './PlayerStatusPanel';\nimport { EASY, HARD, MEDIUM, selectGameMode } from '../reducers/gameModeSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { initLabyrinthWalls } from './Walls';\nimport {\n  assignInit,\n  assignNumX,\n  assignNumZ,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  selectIsInit,\n  assignResetCamera,\n  assignResetEvent,\n  resetCurrentAction,\n  selectPosX,\n  selectPosZ,\n  selectWallLeft,\n  selectWallTop,\n  selectAction,\n  selectNumX,\n  selectNumZ,\n  selectResetEvent,\n} from '../reducers/controlSlice';\nimport {\n  addABuff,\n  addADebuff,\n  DARK_MODE_OFF,\n  DARK_MODE_ON,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  selectBuff,\n  selectDebuff,\n} from '../reducers/playerStatusSlice';\nimport styles from \"./labyrinthGame.module.css\"\n\nexport default function LabyrinthGame() {\n  const gameMode = useSelector(selectGameMode);\n  // let numX;\n  // let numZ;\n  // switch (gameMode) {\n  //   case EASY:\n  //     numX = 5;\n  //     numZ = 5;\n  //     break;\n  //   case MEDIUM:\n  //     numX = 10;\n  //     numZ = 10;\n  //     break;\n  //   case HARD:\n  //     numX = 15;\n  //     numZ = 15;\n  //     break;\n  //   default:\n  //     console.log(\"game mode error: \" + gameMode);\n\n  // }\n  const numX = useSelector(selectNumX);\n  const numZ = useSelector(selectNumZ);\n\n  const blockWidth = 20;\n  const blockDepth = 0.5;\n  const blockHeight = 10;\n  const discovered = useRef(Array(numX * numZ).fill(false));\n  const isInit = useSelector(selectIsInit);\n  const dispatch = useDispatch();\n  if (!isInit) {\n    dispatch(assignPosX(numX - 1));\n    dispatch(assignPosZ(numZ - 1));\n    dispatch(assignResetCamera(false));\n    const [wallLeft, wallTop] = initLabyrinthWalls(numX, numZ);\n    dispatch(assignWallLeft(wallLeft));\n    dispatch(assignWallTop(wallTop));\n    dispatch(resetCurrentAction());\n    if (gameMode === EASY) {\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(addABuff(DARK_MODE_OFF));\n    } else if (gameMode === HARD) {\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(addADebuff(DARK_MODE_ON));\n    } else if (gameMode === MEDIUM) {\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(addADebuff(MINI_MAP_OFF));\n    }\n    dispatch(assignInit(true));\n    dispatch(assignResetEvent(true));\n    discovered.current = Array(numX * numZ).fill(false);\n  }\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const wallLeft = useSelector(selectWallLeft);\n  const wallTop = useSelector(selectWallTop);\n  const currentAction = useSelector(selectAction);\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  const isResetEvent = useSelector(selectResetEvent);\n  return (\n    <div className={styles.visContainer}>\n      <LabyrinthView\n        numX={numX}\n        numZ={numZ}\n        blockWidth={blockWidth}\n        blockHeight={blockHeight}\n        blockDepth={blockDepth}\n        mazeDepth={numX * blockWidth}\n        mazeWidth={numZ * blockWidth}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        darkModeIsOn={debuff & DARK_MODE_ON}\n      />\n      <GamePanel />\n      <EventManager\n        discovered={discovered}\n        posX={posX}\n        posZ={posZ}\n        numX={numX}\n        numZ={numZ}\n        currentAction={currentAction}\n        isResetEvent={isResetEvent}\n      />\n      <MiniMap\n        discovered={discovered}\n        posX={posX}\n        posZ={posZ}\n        numX={numX}\n        numZ={numZ}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        currentAction={currentAction}\n        miniMapIsOn={buff & MINI_MAP_ON}\n      />\n      <ElapseTimer />\n      <BackgroundMusic />\n      <PlayerStatusPanel buff={buff} debuff={debuff} />\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const WELCOME = 0;\nexport const MODE_SELECTION = 1;\nexport const GAME = 2;\nexport const GUIDE = 3;\n\nexport const programWindowSlice = createSlice({\n    name: 'programWindow',\n    initialState: {\n        window: WELCOME\n    },\n    reducers: {\n        displayWelcome: state => {\n            state.window = WELCOME;\n        },\n        displayModeSelection: state => {\n            state.window = MODE_SELECTION;\n        },\n        displayGame: state => {\n            state.window = GAME;\n        },\n        displayGuide: state => {\n            state.window = GUIDE;\n        }\n    },\n});\n\nexport const {\n    displayWelcome,\n    displayModeSelection,\n    displayGame,\n    displayGuide,\n} = programWindowSlice.actions;\n\nexport const selectWindow = state => state.programWindow.window;\n\nexport default programWindowSlice.reducer;\n","import React from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./welcome.module.css\"\nimport { displayGame, displayModeSelection, displayWelcome, displayGuide } from '../reducers/programWindowSlice';\nimport { CUSTOM, EASY, HARD, MEDIUM, setGameMode } from \"../reducers/gameModeSlice\";\n\nfunction WelcomeScreens(props) {\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Maze</h1>\n            {props.children}\n        </div>);\n}\n\nexport function ModeSelection() {\n    const dispatch = useDispatch();\n\n    const handleModeSelect = (mode) => {\n        dispatch(setGameMode(mode));\n        dispatch(displayGame());\n    }\n\n    const handleGoBack = () => {\n        dispatch(displayWelcome());\n    }\n\n    return (\n        <WelcomeScreens>\n            <div className={styles.options}>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(EASY)}>Easy</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(MEDIUM)}>Medium</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(HARD)}>Hard</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(CUSTOM)}>Custom</h3>\n                <h3 className={styles.buttons} onClick={() => handleGoBack()}>Go Back</h3>\n            </div>\n            <div className={styles.footnote}></div>\n        </WelcomeScreens>\n    );\n}\n\nexport function Welcome() {\n    const dispatch = useDispatch();\n\n    const handleGameStart = () => {\n        dispatch(displayModeSelection());\n    }\n\n    const handleGuide = () => {\n        dispatch(displayGuide());\n    }\n\n    return (\n        <WelcomeScreens>\n            <div className={styles.options}>\n                <h3 className={styles.buttons} onClick={() => handleGameStart()}>Game Start</h3>\n                <h3 className={styles.buttons} onClick={() => handleGuide()}>Guide</h3>\n                <h3 className={styles.buttons}>About</h3>\n            </div>\n        </ WelcomeScreens>);\n}\n","import React from 'react';\nimport styles from './guide.module.css';\n\nconst GameModeDescription = () => {\n    return (\n        <div className={styles.description}>\n            <h3 className={styles.smallHeader}>Game mode</h3>\n            <ul className={styles.list}>\n                <li><span className={styles.gameModeName}>Easy mode:</span>\n                    <br />\n                Maze size is 5 X 5, while Minimap is always on, slow mode and dark mode is always off.\n            </li>\n                <li><span className={styles.gameModeName} >Medium mode:</span>\n                    <br />\n                Maze size is 10 X 10, and you have chances to meet all kinds of events.\n            </li>\n                <li ><span className={styles.gameModeName}>Hard mode</span>\n                    <br />\n                Maze size is 15 X 15, and dark mode is always on. Strong wind will clear all effects except dark mode.\n            </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default GameModeDescription;","export default __webpack_public_path__ + \"static/media/movesGuide.86a22871.png\";","import React from 'react';\nimport movesGuide from '../images/movesGuide.png';\nimport styles from './guide.module.css'\n\n\nconst OperationDescription = () => {\n    return (\n        <div>\n            <p className={styles.plainText}>Use \"W\", \"A\", \"S\", \"D\" to move forward, left, backward, right.</p>\n            <img className={styles.transparent} src={movesGuide} alt=\"move guide\"/>\n        </div>\n    );\n}\n\nexport default OperationDescription;\n","import React from 'react';\nimport GameModeDescription from './GameModeDescription';\nimport styles from './guide.module.css'\nimport HelperPage from './HelperPage';\nimport OperationDescription from './OperationDescription';\nconst Guide = () => {\n    return (\n        <div className={styles.guide}>\n            <div>\n                <h2 className={styles.bigHeader}>Welcome! You have entered a dangerous maze !</h2>\n                <p className={styles.plainText}>The purpose of the game is to find the exit.</p>\n                <OperationDescription />\n            </div>\n\n            <div className={styles.description}>\n                <h3 className={styles.smallHeader}> Tips:</h3>\n                <ul className={styles.list}>\n                    <li>During your exploration, your moves might invoke different kinds of effects.\n                Some of them are helpful, some of them are not. :)</li>\n                    <li>Keep an eye on your HP! If your HP went to 0, you fail!</li>\n                    <li>Enjoy!</li>\n                    <li>Maybe you already know, but again, trying to go through the walls directly won't work!</li>\n                </ul>\n            </div>\n            <div className={styles.description}>\n                <h3 className={styles.smallHeader}>Effects you might invoke:</h3>\n                <ul className={styles.list}>\n                    <li>Minimap ON/OFF\n                        {/* <img /> */}\n                    </li>\n                    <li>\n                        Dark mode ON/OFF\n                    </li>\n                    <li>\n                        Speed UP/DOWN\n                    </li>\n                    <li>\n                        HP points GAIN/LOSE\n                    </li>\n                </ul>\n            </div >\n            <GameModeDescription />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div >\n    );\n}\n\nexport default Guide;","import LabyrinthGame from './components/LabyrinthGame';\nimport './styles.css';\nimport { useSelector } from 'react-redux';\nimport { selectWindow, WELCOME, GAME, MODE_SELECTION, GUIDE } from './reducers/programWindowSlice';\nimport { ModeSelection, Welcome } from './components/Welcome';\nimport Modal from \"react-modal\"\nimport Guide from './components/Guide';\n\nModal.setAppElement('#root')\n\nexport default function App() {\n  let toRender = null;\n  const currentWindow = useSelector(selectWindow);\n  // console.log(currentWindow);\n  switch (currentWindow) {\n    case WELCOME:\n      toRender = <Welcome />\n      break;\n    case MODE_SELECTION:\n      toRender = <ModeSelection />\n      break;\n    case GAME:\n      toRender = <LabyrinthGame />\n      break;\n    case GUIDE:\n      toRender = <Guide />\n      break;\n    default:\n    // console.log(\"Window mode error:\" + currentWindow);\n  }\n  return toRender;\n}\n","import { createSlice } from '@reduxjs/toolkit';\nconst INITIAL_MUTED_STATUS = false;\n\nexport const backgroundMusicSlice = createSlice({\n    name: 'backgroundMusic',\n    initialState: {\n        IsMuted: INITIAL_MUTED_STATUS,\n    },\n    reducers: {\n        toggleIsMuted: state => {\n            state.IsMuted = !state.IsMuted;\n            // console.log(\"toggleIsMuted is called\")\n        },\n    },\n});\n\nexport const {\n    toggleIsMuted,\n} = backgroundMusicSlice.actions;\n\nexport const selectIsMuted = state => state.backgroundMusic.IsMuted;\n\n\nexport default backgroundMusicSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nconst INITIAL_HELPER_PAGE_SHOWN_STATUS = false;\n\nexport const helperPageSlice = createSlice({\n    name: 'helperPage',\n    initialState: {\n        shown: INITIAL_HELPER_PAGE_SHOWN_STATUS,\n    },\n    reducers: {\n        toggleShown: state => {\n            state.shown = !state.shown;\n        },\n    },\n});\n\nexport const {\n    toggleShown,\n} = helperPageSlice.actions;\n\nexport const selectShown = state => state.helperPage.shown;\n\n\nexport default helperPageSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport controlReducer from './reducers/controlSlice';\nimport elapseTimerReducer from './reducers/elapseTimerSlice';\nimport backgroundMusicReducer from './reducers/backgroundMusicSlice';\nimport playerStatusReducer from './reducers/playerStatusSlice';\nimport popUpWindowReducer from './reducers/popUpWindowSlice';\nimport programWindowReducer from './reducers/programWindowSlice';\nimport leaderboardReducer from './reducers/leaderboardSlice';\nimport gameModeReducer from './reducers/gameModeSlice';\nimport helperPageReducer from './reducers/helperPageSlice';\n\n\nexport default configureStore({\n  reducer: {\n    control: controlReducer,\n    elapseTimer: elapseTimerReducer,\n    backgroundMusic: backgroundMusicReducer,\n    playerStatus: playerStatusReducer,\n    popUpWindow: popUpWindowReducer,\n    programWindow: programWindowReducer,\n    leaderboard: leaderboardReducer,\n    gameMode: gameModeReducer,\n    helperPage: helperPageReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from './store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}