{"version":3,"sources":["containers/guide.module.css","music/mixkit-game-level-music-689.wav","reducers/backgroundMusicSlice.js","commons/BackgroundMusic.jsx","components/Footer.jsx","containers/Welcome.jsx","reducers/controlSlice.js","containers/ModeSelection.jsx","components/GamePanel.jsx","reducers/playerStatusSlice.js","components/LabyrinthCamera.jsx","commons/utils.js","components/Walls.jsx","components/LabyrinthView.jsx","music/mixkit-game-level-completed-2059.wav","music/mixkit-video-game-health-recharge-2837.wav","music/mixkit-negative-guitar-tone-2324.wav","music/mixkit-bonus-extra-in-a-video-game-2064.wav","music/mixkit-arcade-retro-jump-223.wav","music/mixkit-small-hit-in-a-game-2072.wav","music/mixkit-player-losing-or-failing-2042.wav","commons/SoundHooks.jsx","reducers/popUpWindowSlice.js","reducers/elapseTimerSlice.js","components/BigPopUpWindow.jsx","components/SmallPopUpWindow.jsx","images/bigWindowBackground.png","reducers/leaderboardSlice.js","components/Leaderboard.jsx","images/sun.png","images/night.png","images/rocket.png","images/turtleicon.png","images/mapicon.png","images/mapoff.png","images/hpbonus.png","images/battle.png","images/strongwind.png","components/Events.jsx","components/EventManager.jsx","components/MiniMap.jsx","images/heart-icon.png","images/normalclock.png","images/outoftimeclock.png","components/ElapseTimer.jsx","components/PlayerStatusPanel.jsx","components/IconDescription.jsx","images/movesGuide.png","components/OperationDescription.jsx","components/HelperPage.jsx","components/NavPanel.jsx","containers/LabyrinthGame.jsx","components/GameModeDescription.jsx","images/miniMap.png","components/MiniMapEventDescription.jsx","images/darkMode.png","components/DarkModeEventDescription.jsx","components/SpeedChangeEventDescription.jsx","components/HPChangeEventDescription.jsx","containers/Guide.jsx","containers/AboutPage.jsx","Routes.jsx","App.js","reducers/helperPageSlice.js","store.js","index.js","components/helperPage.module.css","containers/welcome.module.css","components/events.module.css","components/playerStatusPanel.module.css","components/navPanel.module.css","components/gamePanel.module.css","components/bigPopUpWindow.module.css","components/miniMap.module.css","components/leaderboard.module.css","components/elapseTimer.module.css","components/smallPopUpWindow.module.css","components/footer.module.css","components/labyrinthView.module.css","containers/labyrinthGame.module.css"],"names":["module","exports","backgroundMusicSlice","createSlice","name","initialState","isPlaying","reducers","playBGM","state","playingBGM","stopBGM","unmuteBGM","muteBGM","mutedBGM","stopedBGM","resetBGM","actions","selectIsPlaying","backgroundMusic","BackgroundMusic","useSound","bgm","interrupt","volume","loop","play","stop","useBgmPlay","useSelector","dispatch","useDispatch","useEffect","Fragment","Footer","className","styles","footer","WelcomeScreens","props","disptach","isPlayBGM","container","title","children","Welcome","options","to","buttons","controlSlice","direction","posX","posZ","currentAction","actionCache","isInit","wallTop","wallLeft","numWalls","numX","numZ","lastMoveHitWall","isResetCamera","resetEvent","moveForward","moveBackward","resetLastMoveHitWall","turnLeft","turnRight","resetCurrentAction","assignResetEvent","action","payload","popEvent","pauseAction","resumeAction","assignPosX","assignPosZ","assignWallTop","assignWallLeft","assignNumX","assignNumZ","assignInit","assignResetCamera","assignNumWalls","selectDirection","control","selectPosX","selectPosZ","selectAction","selectIsInit","selectWallTop","selectWallLeft","selectNumX","selectNumZ","selectLastMoveHitWall","selectIsResetCamera","selectResetEvent","selectNumWalls","ModeSelection","history","useHistory","handleModeSelect","mode","push","onClick","GamePanel","handleMoveForward","handleMoveBackward","handleTurnLeft","handleTurnRight","document","addEventListener","event","key","panelContainer","forwardButton","icon","faChevronCircleUp","backwardButton","faChevronCircleDown","turnLeftButton","faChevronCircleLeft","turnRightButton","faChevronCircleRight","INITIAL_HP","playerStatusSlice","HP","buff","debuff","speedModifier","isTimeUsedUp","decreaseHP","increaseHP","resetBuffAndDebuff","addABuff","removeABuff","addADebuff","removeADebuff","setTimeUsedUp","resetPlayerStatus","selectHP","playerStatus","selectBuff","selectDebuff","selectIsTimeUsedUp","DIRECTION_ADJUSTER","LabyrinthCamera","blockWidth","startCoordX","startCoordZ","cameraInitCoordX","cameraInitCoordZ","moveSpeed","turnSpeed","camera","useThree","actualMoveSpeed","actualTurnSpeed","currentAngle","React","coordX","coordZ","console","log","useFrame","position","x","z","lookAt","Math","abs","current","rotateY","ThreeMath","degToRad","updateProjectionMatrix","UnionFind","elementNum","this","partsCount","parent","Array","apply","length","map","Number","call","rank","index","left","right","leftRoot","find","rightRoot","genRandomInt","max","floor","random","compareNumbers","a","b","getWallNeighbourCells","numCells","wallIndex","initLabyrinthWalls","numCellPlusBorder","unionFind","wallArray","resArray","i","currentPos","targetArray","j","tmp","shuffleArray","currentWall","neighborA","neighborB","union","fill","convertIndex","val","genPositionVertical","width","scratchObject3D","Object3D","Walls","blockHeight","blockDepth","mazeWidth","mazeDepth","endpoints","meshRef","curNumWalls","mesh","posY","set","rotation","updateMatrix","setMatrixAt","matrix","PI","args","color","attach","transparent","opacity","Text","fontSize","maxWidth","lineHeight","letterSpacing","textAlign","font","anchorX","anchorY","depthOffset","instanceMatrix","needsUpdate","ref","frustumCulled","LabyrinthView","darkModeIsOn","posCoordX","posCoordZ","ContextBridge","useContextBridge","ReactReduxContext","canvasDiv","fov","far","intensity","Sky","distance","sunPosition","inclination","azimuth","Stars","radius","depth","count","factor","saturation","fade","rotation-x","useGameCompletionSound","GameCompletionSound","playSound","usePositiveEffectSound","PositiveEffectSound","useNegativeEffectSound","NegativeEffectSound","useNeutralEffectSound","NeutralEffectSound","useConfrontBattleSound","ConfrontBattleSound","useGameOverSound","GameOverSound","useHitWallSound","HitWallSound","SoundEffectManager","isPlayHitWall","popUpWindowSlice","smallPopUpPresense","smallPopIsToOpen","bigPopUpPresense","bigPopUpIsToOpen","enableSmallPopUpPresense","disableSmallPopUpPresense","enableSmallPopUpIsToOpen","disableSmallPopUpIsToOpen","enableBigPopUpPresense","disableBigPopUpPresense","enableBigPopUpIsToOpen","disableBigPopUpIsToOpen","selectSmallPopUpPresense","popUpWindow","selectSmallPopUpIsToOpen","selectBigPopUpPresense","selectBigPopUpIsToOpen","elapseTimerSlice","curNumSeconds","status","intervalHasSet","timeout","countUp","pauseCount","resumeCount","readyCount","resetCount","adjustCountByAmount","markIntervalSet","assignTimeout","selectCurNumSeconds","elapseTimer","selectStatus","selectIntervalHasSet","selectTimeout","BigPopUpWindow","isToOpen","openType","isOpen","popup","overlayClassName","overlay","closeTimeoutMS","src","background","backgroundPic","alt","content","buttonsection","SmallPopUpWindow","handlePresenseChange","setTimeout","leaderboardSlice","list","easy","medium","hard","pure","appendToLeaderBoard","value","sort","pop","selectList","leaderboard","LeaderboardRow","time","leaderRow","order","entry","LearderboardSection","leaderList","leaderSection","StartEventRender","useLeaderBoard","useState","isShowLeaderboard","setIsShowLeaderboard","EndEventRender","handleLeaderboard","hasAppend","setHasAppend","GoHomeButton","FailGameEventRender","endEventCallback","StrongWindEventRender","windIcon","neutralKeywords","SmellyWindEventRender","debuffId","specificEventContent","specificIcon","nightIcon","negativeKeywords","turtleIcon","mapOffIcon","BattleEventRender","battleIcon","FreshWindEventRender","buffId","dayIcon","positiveKeywords","rocket","mapOnIcon","hpBonusIcon","initEventMap","gameMode","eventMap","randomID","NUM_DEBUFF_TYPE","RANDOM_ID_WITHHOLD","EventManager","discovered","isResetEvent","setEventMap","currentRender","useRef","playGameCompletionSound","playPositiveEffectSound","playNegativeEffectSound","playNeutralEffectSound","playConfrontBattleSound","playGameOverSound","currentIndex","currentHP","currentCallback","startEventCallback","freshWindEventCallBack","smellyWindEventCallBack","confrontBattleCallBack","strongWindEventCallBack","MiniMap","miniMapIsOn","display","currentRow","square","style","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","String","broadRow","ElapseTimer","timeOut","handleCountUpDispatch","setInterval","timer","number","ProgressBar","progressBar","percentage","Filler","filler","PlayerStatusPanel","hp","clock","progressBarSection","heart","normalclock","outoftimeclock","buffSection","mapicon","turtleicon","IconDescription","iconDescriptionContainer","plainText","eventIcon","heartIcon","normalClock","outOfTimeClock","miniMapIcon","darkModeIcon","brightModeIcon","speedUpIcon","speedDownIcon","OperationDescription","operationDescription","moveGuide","movesGuide","HelperPage","helperPage","HelperPageWindow","GobackConfirm","NavPanel","isPlayingBGM","navPanelContainer","faHome","faQuestionCircle","toggle","faMoon","faSun","faMap","faVolumeMute","faVolumeUp","LabyrinthGame","useParams","totalWalls","visContainer","GameModeDescription","description","smallHeader","gameModeName","MiniMapEventDescription","liHeaderContainer","liHeader","liHeaderText","eventDetail","eventPicture","mimiMapEventPicture","miniMap","DarkModeEventDescription","darkModePicture","SpeedChangeEventDescription","HPChangeEventDescription","Guide","handleGoBack","goBack","guide","goBackButton","topGoBackButton","bigHeader","bottomGoBackButton","AboutPage","aboutPage","aboutList","authorList","personalWebsite","href","faPaperPlane","size","creditLink","Routes","exact","path","App","Modal","setAppElement","helperPageSlice","shown","toggleShown","configureStore","reducer","controlReducer","elapseTimerReducer","backgroundMusicReducer","playerStatusReducer","popUpWindowReducer","leaderboardReducer","helperPageReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.c2f4b7a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide\":\"guide_guide__2aWi3\",\"moveGuide\":\"guide_moveGuide__V3I7F\",\"eventIcon\":\"guide_eventIcon__2a3RW\",\"eventPicture\":\"guide_eventPicture__3Mf1z\",\"mimiMapEventPicture\":\"guide_mimiMapEventPicture__3lCyW\",\"liHeaderContainer\":\"guide_liHeaderContainer__Z6SBI\",\"eventDetail\":\"guide_eventDetail__m0GkN\",\"bigHeader\":\"guide_bigHeader__2IMBJ\",\"smallHeader\":\"guide_smallHeader__GaiSr\",\"plainText\":\"guide_plainText__3DOqX\",\"list\":\"guide_list__1_KNE\",\"liHeader\":\"guide_liHeader__Gs8PT\",\"liHeaderText\":\"guide_liHeaderText__m4uHA\",\"gameModeName\":\"guide_gameModeName__2bmcY\",\"description\":\"guide_description__fmMtg\",\"topGoBackButton\":\"guide_topGoBackButton__3RSNH\",\"bottomGoBackButton\":\"guide_bottomGoBackButton__1PA6J\",\"goBackButton\":\"guide_goBackButton__15s7P\"};","export default __webpack_public_path__ + \"static/media/mixkit-game-level-music-689.1410a480.wav\";","import { createSlice } from \"@reduxjs/toolkit\";\n\n// The difference between mute and stop is, after muted the BGM cannot be\n// played by calling dispatch(play()), unless dispatch(resumeBGM()) is called,\n// while stopped BGM can be played by calling dispatch(playBGM()).\n// This is to make the muted state preserved even after going back to welcome\n// page and restart the game again.\n\n// START_PLAY, TO_STOP, TO_MUTE: the state of submitted but not executued requests\n// for the BGM.\n// PLAYING, STOPPED, MUTED: the state of executued request for the BGM.\n\nexport const START_PLAY = 0;\nexport const PLAYING = 1;\nexport const TO_STOP = 2;\nexport const STOPPED = 3;\nexport const TO_MUTE = 4;\nexport const MUTED = 4;\n\nexport const backgroundMusicSlice = createSlice({\n  name: \"backgroundMusic\",\n  initialState: {\n    isPlaying: STOPPED,\n  },\n  reducers: {\n    playBGM: (state) => {\n      // When state.isPlaying is muted, it cannot be played again unless\n      // unmute.\n      if (state.isPlaying !== MUTED && state.isPlaying !== TO_MUTE) {\n        state.isPlaying = START_PLAY;\n      }\n    },\n    playingBGM: (state) => {\n      state.isPlaying = PLAYING;\n    },\n    stopBGM: (state) => {\n      // Do not overwrite the mute state, given that mute\n      // state is more powerful.\n      if (state.isPlaying !== MUTED) {\n        state.isPlaying = TO_STOP;\n      }\n    },\n    unmuteBGM: (state) => {\n      state.isPlaying = START_PLAY;\n    },\n    muteBGM: (state) => {\n      state.isPlaying = TO_MUTE;\n    },\n    mutedBGM: (state) => {\n      state.isPlaying = MUTED;\n    },\n    stopedBGM: (state) => {\n      state.isPlaying = STOPPED;\n    },\n    resetBGM: (state) => {\n      state.isPlaying = TO_STOP;\n    },\n  },\n});\n\nexport const {\n  playBGM,\n  stopBGM,\n  playingBGM,\n  stopedBGM,\n  muteBGM,\n  unmuteBGM,\n  mutedBGM,\n} = backgroundMusicSlice.actions;\n\nexport const selectIsPlaying = (state) => state.backgroundMusic.isPlaying;\n\nexport default backgroundMusicSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useSound from \"use-sound\";\n// Music credits to https://mixkit.co/free-sound-effects/game/.\nimport bgm from \"../music/mixkit-game-level-music-689.wav\";\nimport {\n  playingBGM,\n  selectIsPlaying,\n  stopedBGM,\n  START_PLAY,\n  TO_STOP,\n  TO_MUTE,\n  mutedBGM,\n} from \"../reducers/backgroundMusicSlice\";\n\nfunction useBgmPlay() {\n  const [play, { stop }] = useSound(bgm, {\n    interrupt: true,\n    volume: 0.35,\n    loop: true,\n  });\n  return { play, stop };\n}\n\n// Manage whether to play or stop BGM according to the value isPlaying\nconst BackgroundMusic = () => {\n  const { play, stop } = useBgmPlay();\n  const isPlaying = useSelector(selectIsPlaying);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // A request for playing the BGM is sent\n    if (isPlaying === START_PLAY) {\n      play();\n      // playingBGM() change the isPlaying to PLAYING. this is to ensure we\n      // only play the BGM once each time a dispatch(playBGM()) is called\n      dispatch(playingBGM());\n    }\n    // A request for stopping the BGM is sent\n    if (isPlaying === TO_STOP) {\n      stop();\n      // stopedBGM() change the isPlaying to STOPPED. this is to ensure we\n      // only stop the BGM once each time a dispatch(stopBGM()) is called\n      dispatch(stopedBGM());\n    }\n    // A request for muting the BGM is sent.\n    if (isPlaying === TO_MUTE) {\n      stop();\n      // mutedBGM() change the isPlaying to MUTED. this is to ensure we\n      // only mute the BGM once each time a dispatch(stopBGM()) is called\n      dispatch(mutedBGM());\n    }\n  }, [isPlaying, play, stop, dispatch]);\n  return <React.Fragment></React.Fragment>;\n};\n\nexport default BackgroundMusic;\n","import React from \"react\";\nimport styles from \"./footer.module.css\";\n\n// Footer shown on the welcome screen\nconst Footer = () => {\n  return <div className={styles.footer}>Happy game, happy life.</div>;\n};\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Footer from \"../components/Footer\";\nimport styles from \"./welcome.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  selectIsPlaying,\n  stopBGM,\n  STOPPED,\n} from \"../reducers/backgroundMusicSlice\";\n\nexport function WelcomeScreens(props) {\n  const disptach = useDispatch();\n  const isPlayBGM = useSelector(selectIsPlaying);\n  useEffect(() => {\n    if (isPlayBGM !== STOPPED) {\n      disptach(stopBGM());\n    }\n  });\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Maze</h1>\n      {props.children}\n      <Footer />\n    </div>\n  );\n}\n\nexport function Welcome() {\n  return (\n    <WelcomeScreens>\n      <div className={styles.options}>\n        <NavLink to=\"/game\" className={styles.buttons}>\n          Game Start\n        </NavLink>\n        <NavLink to=\"/guide\" className={styles.buttons}>\n          Guide\n        </NavLink>\n        <NavLink to=\"/about\" className={styles.buttons}>\n          About\n        </NavLink>\n      </div>\n    </WelcomeScreens>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const MOVE_FORWARD = 0;\nexport const TURN_LEFT = 2;\nexport const TURN_RIGHT = 1;\nexport const MOVE_BACKWARD = 3;\nexport const NOTHING = 4;\nexport const INTERRUPTED = 6;\nexport const CACHE_UNUSED = 7;\nexport const UP = 0;\nexport const RIGHT = 3;\nexport const DOWN = 2;\nexport const LEFT = 1;\n\nexport const controlSlice = createSlice({\n  name: \"control\",\n  initialState: {\n    direction: 0,\n    posX: 0,\n    posZ: 0,\n    // Used to block a new action when an action is exectuting\n    currentAction: MOVE_FORWARD,\n    actionCache: CACHE_UNUSED,\n    isInit: false,\n    wallTop: [],\n    wallLeft: [],\n    numWalls: 0,\n    numX: 5,\n    numZ: 5,\n    lastMoveHitWall: false,\n    isResetCamera: false,\n    resetEvent: true,\n  },\n  reducers: {\n    moveForward: (state) => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_FORWARD;\n        switch (state.direction) {\n          case UP:\n            // Check if there is a wall\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX <= state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallTop[state.posX + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX < state.numX &&\n                state.posZ >= 0 &&\n                state.posZ < state.numZ &&\n                state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX < state.numX &&\n                state.posZ >= 0 &&\n                state.posZ < state.numZ &&\n                state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)]\n              ) &&\n              !(state.posX === state.numX - 1 && state.posZ === state.numZ - 1)\n            ) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX <= state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallLeft[state.posX + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n          // console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    moveBackward: (state) => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_BACKWARD;\n        switch (state.direction) {\n          case UP:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX <= state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)]\n              ) &&\n              !(state.posX === state.numX - 1 && state.posZ === state.numZ - 1)\n            ) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX < state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallLeft[state.posX + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX < state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallTop[state.posX + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (\n              !(\n                state.posX >= 0 &&\n                state.posX <= state.numX &&\n                state.posZ >= 0 &&\n                state.posZ <= state.numZ &&\n                state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)]\n              )\n            ) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n          // console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    resetLastMoveHitWall: (state) => {\n      state.lastMoveHitWall = false;\n    },\n    turnLeft: (state) => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_LEFT;\n        state.direction = (state.direction + 1) % 4;\n      }\n    },\n    turnRight: (state) => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_RIGHT;\n        state.direction = (((state.direction - 1) % 4) + 4) % 4;\n      }\n    },\n    resetCurrentAction: (state) => {\n      state.currentAction = MOVE_FORWARD;\n      state.actionCache = CACHE_UNUSED;\n    },\n    assignResetEvent: (state, action) => {\n      state.resetEvent = action.payload;\n    },\n    popEvent: (state) => {\n      state.currentAction = NOTHING;\n    },\n    pauseAction: (state) => {\n      if (state.currentAction !== INTERRUPTED) {\n        state.actionCache = state.currentAction;\n        state.currentAction = INTERRUPTED;\n      }\n    },\n    resumeAction: (state) => {\n      if (state.actionCache !== CACHE_UNUSED) {\n        state.currentAction = state.actionCache;\n        state.actionCache = CACHE_UNUSED;\n      }\n    },\n    assignPosX: (state, action) => {\n      state.posX = action.payload;\n    },\n    assignPosZ: (state, action) => {\n      state.posZ = action.payload;\n    },\n    assignWallTop: (state, action) => {\n      state.wallTop = action.payload;\n    },\n    assignWallLeft: (state, action) => {\n      state.wallLeft = action.payload;\n    },\n    assignNumX: (state, action) => {\n      state.numX = action.payload;\n    },\n    assignNumZ: (state, action) => {\n      state.numZ = action.payload;\n    },\n    assignInit: (state, action) => {\n      state.isInit = action.payload;\n    },\n    assignResetCamera: (state, action) => {\n      state.isResetCamera = action.payload;\n      if (!action.payload) {\n        state.direction = UP;\n      }\n    },\n    assignNumWalls: (state, action) => {\n      state.numWalls = action.payload;\n    },\n  },\n});\n\nexport const {\n  moveForward,\n  moveBackward,\n  turnLeft,\n  turnRight,\n  resetLastMoveHitWall,\n  popEvent,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  assignNumX,\n  assignNumZ,\n  assignInit,\n  assignResetCamera,\n  resetCurrentAction,\n  assignResetEvent,\n  pauseAction,\n  resumeAction,\n  assignNumWalls,\n} = controlSlice.actions;\n\nexport const selectDirection = (state) => state.control.direction;\nexport const selectPosX = (state) => state.control.posX;\nexport const selectPosZ = (state) => state.control.posZ;\nexport const selectAction = (state) => state.control.currentAction;\nexport const selectIsInit = (state) => state.control.isInit;\nexport const selectWallTop = (state) => state.control.wallTop;\nexport const selectWallLeft = (state) => state.control.wallLeft;\nexport const selectNumX = (state) => state.control.numX;\nexport const selectNumZ = (state) => state.control.numZ;\nexport const selectLastMoveHitWall = (state) => state.control.lastMoveHitWall;\nexport const selectIsResetCamera = (state) => state.control.isResetCamera;\nexport const selectResetEvent = (state) => state.control.resetEvent;\nexport const selectNumWalls = (state) => state.control.numWalls;\n\nexport default controlSlice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./welcome.module.css\";\nimport { WelcomeScreens } from \"./Welcome\";\nimport { assignInit } from \"../reducers/controlSlice\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nexport function ModeSelection(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleModeSelect = (mode) => {\n    dispatch(assignInit(false));\n    history.push(\"/game/\" + mode);\n  };\n\n  return (\n    <WelcomeScreens>\n      <div className={styles.options}>\n        <h3 className={styles.buttons} onClick={() => handleModeSelect(\"easy\")}>\n          Easy\n        </h3>\n        <h3\n          className={styles.buttons}\n          onClick={() => handleModeSelect(\"medium\")}\n        >\n          Medium\n        </h3>\n        <h3 className={styles.buttons} onClick={() => handleModeSelect(\"hard\")}>\n          Hard\n        </h3>\n        <h3 className={styles.buttons} onClick={() => handleModeSelect(\"pure\")}>\n          Pure Maze\n        </h3>\n        <NavLink to=\"/\" className={styles.buttons}>\n          Go back\n        </NavLink>\n      </div>\n    </WelcomeScreens>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  moveBackward,\n  moveForward,\n  turnLeft,\n  turnRight,\n} from \"../reducers/controlSlice\";\nimport styles from \"./gamePanel.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  faChevronCircleLeft,\n  faChevronCircleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Game control panel\nexport default function GamePanel() {\n  const dispatch = useDispatch();\n\n  const handleMoveForward = () => {\n    dispatch(moveForward());\n  };\n  const handleMoveBackward = () => {\n    dispatch(moveBackward());\n  };\n\n  const handleTurnLeft = () => {\n    dispatch(turnLeft());\n  };\n  const handleTurnRight = () => {\n    dispatch(turnRight());\n  };\n\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case \"a\":\n        handleTurnLeft();\n        break;\n      case \"d\":\n        handleTurnRight();\n        break;\n      case \"w\":\n        handleMoveForward();\n        break;\n      case \"s\":\n        handleMoveBackward();\n        break;\n      default:\n        break;\n    }\n  };\n\n  document.addEventListener(\"keydown\", handleKeyDown);\n\n  return (\n    <div className={styles.panelContainer}>\n      <FontAwesomeIcon\n        className={styles.forwardButton}\n        icon={faChevronCircleUp}\n        onClick={() => handleMoveForward()}\n      />\n      <FontAwesomeIcon\n        className={styles.backwardButton}\n        icon={faChevronCircleDown}\n        onClick={() => handleMoveBackward()}\n      />\n      <FontAwesomeIcon\n        className={styles.turnLeftButton}\n        icon={faChevronCircleLeft}\n        onClick={() => handleTurnLeft()}\n      />\n      <FontAwesomeIcon\n        className={styles.turnRightButton}\n        icon={faChevronCircleRight}\n        onClick={() => handleTurnRight()}\n      />\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst INITIAL_HP = 100;\n\nexport const MINI_MAP_ON = 1 << 0;\nexport const DARK_MODE_ON = 1 << 1;\nexport const SPEED_UP = 1 << 2;\n\nexport const MINI_MAP_OFF = 1 << 0;\nexport const DARK_MODE_OFF = 1 << 1;\nexport const SPEED_DOWN = 1 << 2;\n\nexport const playerStatusSlice = createSlice({\n  name: \"playerStatus\",\n  initialState: {\n    HP: INITIAL_HP,\n    buff: 0,\n    debuff: 0,\n    speedModifier: 1,\n    isTimeUsedUp: false\n  },\n  reducers: {\n    decreaseHP: (state, action) => {\n      state.HP -= action.payload;\n      if (state.HP < 0) {\n        state.HP = 0;\n      }\n    },\n    increaseHP: (state, action) => {\n      state.HP += action.payload;\n      if (state.HP > INITIAL_HP) {\n        state.HP = INITIAL_HP;\n      }\n    },\n    resetBuffAndDebuff: (state) => {\n      state.buff = 0;\n      state.debuff = 0;\n    },\n    addABuff: (state, action) => {\n      state.buff |= action.payload;\n    },\n    removeABuff: (state, action) => {\n      state.buff &= ~action.payload;\n    },\n    addADebuff: (state, action) => {\n      state.debuff |= action.payload;\n    },\n    removeADebuff: (state, action) => {\n      state.debuff &= ~action.payload;\n    },\n    setTimeUsedUp: state=> {\n      state.isTimeUsedUp = true;\n    },\n    resetPlayerStatus: (state) => {\n      state.HP = INITIAL_HP;\n      state.buff = 0;\n      state.debuff = 0;\n      state.isTimeUsedUp = false;\n    },\n  },\n});\n\nexport const {\n  decreaseHP,\n  increaseHP,\n  resetBuffAndDebuff,\n  addABuff,\n  removeABuff,\n  addADebuff,\n  removeADebuff,\n  resetPlayerStatus,\n  setTimeUsedUp\n} = playerStatusSlice.actions;\n\nexport const selectHP = (state) => state.playerStatus.HP;\nexport const selectBuff = (state) => state.playerStatus.buff;\nexport const selectDebuff = (state) => state.playerStatus.debuff;\nexport const selectIsTimeUsedUp = (state) => state.playerStatus.isTimeUsedUp;\n\nexport default playerStatusSlice.reducer;\n","import * as React from \"react\";\nimport { useThree, useFrame } from \"react-three-fiber\";\n// import {extend} from \"react-three-fiber\";\n// import { TrackballControls } from \"three/examples/jsm/controls/TrackballControls\";\nimport { Math as ThreeMath } from \"three\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectAction,\n  selectPosX,\n  selectPosZ,\n  popEvent,\n  selectDirection,\n  MOVE_FORWARD,\n  MOVE_BACKWARD,\n  TURN_LEFT,\n  TURN_RIGHT,\n  NOTHING,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  selectIsResetCamera,\n  assignResetCamera,\n  INTERRUPTED,\n} from \"../reducers/controlSlice\";\nimport {\n  selectBuff,\n  selectDebuff,\n  SPEED_DOWN,\n  SPEED_UP,\n} from \"../reducers/playerStatusSlice\";\n\n// // extend THREE to include TrackballControls\n// extend({ TrackballControls });\n\n// Make the camera look ahead, can be any value greater than 0\nconst DIRECTION_ADJUSTER = 0.1;\n// The speed modifier multiplier if a buff/debuff is applied\nconst SPEED_MODIFIER = 2;\n\n// Handle the change of the camera during player movement\nexport default function LabyrinthCamera({\n  blockWidth,\n  startCoordX,\n  startCoordZ,\n  cameraInitCoordX,\n  cameraInitCoordZ,\n  moveSpeed,\n  turnSpeed,\n}) {\n  const { camera } = useThree();\n  // const { gl } = useThree();\n  // const controls = React.useRef();\n\n  // currentAction marks whether the move animation is ongoing or finished\n  const currentAction = useSelector(selectAction);\n\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n\n  // The move direction\n  const direction = useSelector(selectDirection);\n\n  // Buff and debuff affects the move speed\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  let speedModifier = 1;\n  if (buff & SPEED_UP) {\n    speedModifier = SPEED_MODIFIER;\n  } else if (debuff & SPEED_DOWN) {\n    speedModifier = 1 / SPEED_MODIFIER;\n  }\n  const actualMoveSpeed = moveSpeed * speedModifier;\n  const actualTurnSpeed = turnSpeed * speedModifier;\n\n  // Current angle is the remaining angle the camera needs to rotate\n  // Set it as a ref because this value changes consistantly each frame,\n  // it is mutable in nature.\n  const currentAngle = React.useRef(0);\n\n  // calculate the current coordinate based on the position index.\n  // coordinate is the position info in the 3D world, they are continuous values.\n  // We only use them when rendering 3D objects.\n  // Position index is the discreted index in the game logic, we use this when\n  // handling the game logic, like the start point, occur an event or go to the\n  // finish line.\n  const coordX = -blockWidth / 2 + (posX + 1) * blockWidth + startCoordX;\n  const coordZ = -blockWidth / 2 + (posZ + 1) * blockWidth + startCoordZ;\n\n  const isResetCamera = useSelector(selectIsResetCamera);\n  const dispatch = useDispatch();\n  console.log(\"rerender\");\n  // useFrame function is called in each frame, it handles the animation of the threejs 3D world\n  useFrame(() => {\n    // controls.current.update();\n    // When game is restarted, camera needs to be reset as well.\n    if (!isResetCamera) {\n      camera.position.x = cameraInitCoordX;\n      camera.position.z = cameraInitCoordZ;\n      dispatch(assignResetCamera(true));\n      console.log(\"rerendser\");\n\n    }\n\n    switch (currentAction) {\n      case MOVE_FORWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x,\n                0,\n                camera.position.z - DIRECTION_ADJUSTER\n              );\n            }\n            break;\n          case LEFT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x - DIRECTION_ADJUSTER,\n                0,\n                camera.position.z\n              );\n            }\n            break;\n          case DOWN:\n            if (camera.position.z < coordZ) {\n              camera.position.z += actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x,\n                0,\n                camera.position.z + DIRECTION_ADJUSTER\n              );\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x + DIRECTION_ADJUSTER,\n                0,\n                camera.position.z\n              );\n            }\n            break;\n          default:\n          // console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case MOVE_BACKWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z < coordZ) {\n              camera.lookAt(\n                camera.position.x,\n                0,\n                camera.position.z - DIRECTION_ADJUSTER\n              );\n              camera.position.z += actualMoveSpeed;\n            }\n            break;\n          case LEFT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x - DIRECTION_ADJUSTER,\n                0,\n                camera.position.z\n              );\n            }\n            break;\n          case DOWN:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x,\n                0,\n                camera.position.z + DIRECTION_ADJUSTER\n              );\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(\n                camera.position.x + DIRECTION_ADJUSTER,\n                0,\n                camera.position.z\n              );\n            }\n            break;\n          default:\n          // console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case TURN_LEFT:\n        if (currentAngle.current === 0) {\n          currentAngle.current += 90;\n        }\n        if (currentAngle.current > 0) {\n          camera.rotateY(ThreeMath.degToRad(actualTurnSpeed));\n          currentAngle.current -= actualTurnSpeed;\n        }\n        if (Math.abs(currentAngle.current) < actualTurnSpeed) {\n          dispatch(popEvent());\n          currentAngle.current = 0;\n        }\n        break;\n      case TURN_RIGHT:\n        if (currentAngle.current === 0) {\n          currentAngle.current -= 90;\n        }\n        if (currentAngle.current < 0) {\n          camera.rotateY(ThreeMath.degToRad(-actualTurnSpeed));\n          currentAngle.current += actualTurnSpeed;\n        }\n        if (Math.abs(currentAngle.current) < actualTurnSpeed) {\n          dispatch(popEvent());\n          currentAngle.current = 0;\n        }\n        break;\n      case NOTHING:\n        break;\n      case INTERRUPTED:\n        break;\n      default:\n      // console.log(\"button error!\");\n    }\n    camera.updateProjectionMatrix();\n  });\n\n  return (\n    // Used for debug, can add trackbacll control to the camera\n    // Ref: https://codesandbox.io/s/r3f-demo-1-ljh5l?from-embed\n    <group name=\"walls\">\n    </group>\n  );\n}\n","// An implementation of the UnionFind data structure, using path splitting\n// and union by rank optimization.\n// This is a classic data structure, for more details: https://en.wikipedia.org/wiki/Disjoint-set_data_structure\n// Only supports consecutive integers starting from 0 as the elements\nexport class UnionFind {\n  // Number of disjointed sets\n  partsCount;\n  // rank array, used for union by rank optimization\n  rank;\n  // parent array, store the disjointed sets information, if two elements shares\n  // the same parent, they are connected.\n  parent;\n  // Initialize the UnionFind structure, all elements are disjoined.\n  // Input is the number of elements, only support elements that are consecutive integers\n  // starting from 0, so only the number of elements is needed.\n  constructor(elementNum) {\n    this.partsCount = elementNum;\n    // This is to make the parent array a list of consecutive integers starting from 0.\n    // i.e., if the elementNum is 5, the parent array will be [0,1,2,3,4]\n    this.parent = Array.apply(null, { length: elementNum }).map(\n      Number.call,\n      Number\n    );\n    this.rank = Array.apply(0, { length: elementNum });\n  }\n\n  // Find the parent of the given element, use path splitting\n  // Input: element, must be a integer in the range [0, elementNum]\n  // Output: the parent element of the input element\n  find(index) {\n    while (index !== this.parent[index]) {\n      this.parent[index] = this.parent[this.parent[index]];\n      index = this.parent[index];\n    }\n    return index;\n  }\n\n  // Union the left element and right element, so that they become connected\n  // Input: two elements that are going to be connected, must be\n  // integers in the range [0, elementNum]\n  // Output: Nothing\n  // State change: the two input elements become connected.\n  union(left, right) {\n    const leftRoot = this.find(left);\n    const rightRoot = this.find(right);\n    if (leftRoot === rightRoot) {\n      return;\n    }\n    this.partsCount -= 1;\n    if (this.rank[leftRoot] < this.rank[rightRoot]) {\n      this.parent[leftRoot] = rightRoot;\n    } else if (this.rank[leftRoot] > this.rank[rightRoot]) {\n      this.parent[rightRoot] = leftRoot;\n    } else {\n      this.parent[leftRoot] = rightRoot;\n      this.rank[rightRoot] += 1;\n    }\n  }\n}\n\n// Random shuffle an array, the input array will be muted.\n// Input: an array\n// Output: the shuffled array\nexport function shuffleArray(targetArray) {\n  // Reference: https://stackoverflow.com/questions/3943772/how-do-i-shuffle-the-characters-in-a-string-in-javascript\n  const length = targetArray.length;\n  for (let i = length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let tmp = targetArray[i];\n    targetArray[i] = targetArray[j];\n    targetArray[j] = tmp;\n  }\n  return targetArray;\n}\n\n// Partial apply a function\n// Input: a function and the default arguments. The default parameters must be the first n arguments.\n// Output: a new function with the default arguments inputted.\nexport function partialApply(fn, ...args) {\n  // Reference: https://medium.com/@jnkrtech/partial-function-application-in-javascript-and-flow-7f3ca87074fe\n  return fn.bind(null, ...args);\n}\n\n// Returns random integer smaller than max.\n// Input: the upper bound\n// Output: a random integer within the range [0, max)\nexport function genRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function compareNumbers(a, b) {\n  return a - b;\n}\n","import * as React from \"react\";\nimport {Object3D} from \"three\";\nimport { Box, Text } from \"@react-three/drei\";\nimport { shuffleArray, UnionFind } from \"../commons/utils\";\n\n// Wall global index definination example:\n// (The below two pictures are the same 3*3 maze, we separte vertical and horizontal walls to make it looks more clear)\n//\n//   012\n//   ---\n//   345\n//   ---\n//   678\n//\n//  9|10|11|\n// 12|13|14|\n// 15|16|17|\n//\n\n/* Given an wall index, output the neighbour cell index (In x+z*numZ format) */\nfunction getWallNeighbourCells(numX, numCells, wallIndex) {\n  if (wallIndex < numCells) {\n    // wallIndex < numCells, it is a horizontal wall\n    return [wallIndex - numX, wallIndex];\n  } else {\n    return [wallIndex - numCells - 1, wallIndex - numCells];\n  }\n}\n\nexport function initLabyrinthWalls(numX, numZ) {\n  // The algorithm is:\n  // We put all cells of a maze into a disjointed set, and set them as\n  // disjointed. Then we random select a wall. If the two cells separated\n  // by the wall is not connected, we tear down the wall, otherwise we keep\n  // the wall and choose another wall. We do this until there's only only\n  // connecting compoments left.\n  const numCells = numX * numZ;\n  const numCellPlusBorder = (numX + 1) * (numZ + 1);\n  const unionFind = new UnionFind(numCells);\n  let wallArray = [];\n  let resArray = [];\n  for (let i = numX; i < numCells; i++) {\n    wallArray.push(i);\n  }\n  for (let i = numCells; i < numCells * 2; i++) {\n    if (i % numX !== 0) {\n      wallArray.push(i);\n    }\n  }\n  wallArray = shuffleArray(wallArray);\n  let currentPos = wallArray.length - 1;\n\n  do {\n    const currentWall = wallArray[currentPos];\n    const [neighborA, neighborB] = getWallNeighbourCells(\n      numX,\n      numCells,\n      currentWall\n    );\n    if (unionFind.find(neighborA) === unionFind.find(neighborB)) {\n      resArray.push(currentWall);\n    } else {\n      unionFind.union(neighborA, neighborB);\n    }\n    currentPos -= 1;\n  } while (unionFind.partsCount !== 1);\n  while (currentPos >= 0) {\n    resArray.push(wallArray[currentPos]);\n    currentPos -= 1;\n  }\n  let numWalls = 0;\n  const wallLeft = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  const wallTop = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  for (let i = 0; i < numX; i++) {\n    // Make the top border to be true\n    wallTop[i] = true;\n    // Make the bottom border to be true\n    wallTop[i + numZ * (numX + 1)] = true;\n    numWalls += 2;\n  }\n  for (let i = 0; i < numZ; i++) {\n    // Make the left border to be true\n    wallLeft[i * (numX + 1)] = true;\n    // Make the right border to be true\n    wallLeft[i * (numX + 1) + numX] = true;\n    numWalls += 2;\n  }\n\n  const convertIndex = (val) => ~~(val / numX) * (numX + 1) + (val % numX);\n  for (let i = 0; i < resArray.length; i++) {\n    if (resArray[i] < numCells) {\n      wallTop[convertIndex(resArray[i])] = true;\n    } else {\n      wallLeft[convertIndex(resArray[i] - numCells)] = true;\n    }\n    numWalls += 1;\n  }\n\n  wallLeft[0] = false;\n  wallLeft[numCellPlusBorder - 1] = false;\n  wallTop[numCellPlusBorder - 1] = false;\n  wallTop[numCellPlusBorder - 2] = false;\n  numWalls -= 2;\n  return [wallLeft, wallTop, numWalls];\n}\n\nfunction genPositionHorizontal(x, z, width) {\n  return [x + width / 2, 0, z];\n}\nfunction genPositionVertical(x, z, width) {\n  return [x, 0, z + width / 2];\n}\n\n// To reuse this object creating new walls\nconst scratchObject3D = new Object3D();\n\nexport function Walls({\n  numX,\n  numZ,\n  wallTop,\n  wallLeft,\n  numWalls,\n  blockWidth,\n  blockHeight,\n  blockDepth,\n  mazeWidth,\n  mazeDepth,\n}) {\n  const endpoints = React.useRef();\n  const meshRef = React.useRef();\n\n  const initWalls = () => {\n    let curNumWalls = 0;\n    endpoints.current = [];\n    const mesh = meshRef.current;\n    for (let i = 0; i < numX + 1; i++) {\n      for (let j = 0; j < numZ + 1; j++) {\n        if (wallTop[i + (numX + 1) * j]) {\n          const [posX, posY, posZ] = genPositionHorizontal(\n            -mazeWidth / 2 + i * blockWidth - blockDepth / 2,\n            -mazeDepth / 2 + j * blockWidth,\n            blockWidth + blockDepth\n          );\n          // Ref: https://codesandbox.io/s/r3f-demo-3-es4ru?from-embed\n          scratchObject3D.position.set(posX, posY, posZ);\n          scratchObject3D.rotation.set(0, 0, 0);\n          scratchObject3D.updateMatrix();\n          mesh.setMatrixAt(curNumWalls, scratchObject3D.matrix);\n          curNumWalls += 1;\n        }\n        if (wallLeft[i + (numX + 1) * j]) {\n          const [posX, posY, posZ] = genPositionVertical(\n            -mazeWidth / 2 + i * blockWidth,\n            -mazeDepth / 2 + j * blockWidth - blockDepth / 2,\n            blockWidth + blockDepth\n          );\n          scratchObject3D.position.set(posX, posY, posZ);\n          scratchObject3D.rotation.set(0, Math.PI * 0.5, 0);\n          scratchObject3D.updateMatrix();\n          mesh.setMatrixAt(curNumWalls, scratchObject3D.matrix);\n          curNumWalls += 1;\n        }\n      }\n    }\n    endpoints.current.push(\n      <Box\n        key={\"entrance\"}\n        args={[blockWidth + blockDepth, blockHeight, blockDepth]}\n        rotation={[0, 0, 0]}\n        position={[\n          -mazeWidth / 2 + (numX - 0.5) * blockWidth - blockDepth / 2,\n          0,\n          -mazeDepth / 2 + numZ * blockWidth,\n        ]}\n      >\n        <meshPhongMaterial\n          color=\"blue\"\n          attach=\"material\"\n          transparent\n          opacity={0.2}\n        />\n        <Text\n          color={\"#db5c27\"}\n          fontSize={2}\n          maxWidth={200}\n          lineHeight={1}\n          letterSpacing={0.02}\n          textAlign={\"left\"}\n          font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n          anchorX={blockWidth / 5}\n          anchorY=\"100%\"\n          depthOffset={10}\n        >\n          Entrance\n        </Text>\n      </Box>\n    );\n    endpoints.current.push(\n      <Box\n        key={\"exit\"}\n        args={[blockWidth + blockDepth, blockHeight, blockDepth]}\n        rotation={[0, Math.PI * 0.5, 0]}\n        position={[\n          -mazeWidth / 2,\n          0,\n          -mazeDepth / 2 - blockDepth / 2 + blockWidth / 2,\n        ]}\n      >\n        <meshPhongMaterial\n          color=\"green\"\n          attach=\"material\"\n          transparent\n          opacity={0.2}\n        />\n        <Text\n          color={\"#db5c27\"}\n          fontSize={2}\n          maxWidth={200}\n          lineHeight={1}\n          letterSpacing={0.02}\n          textAlign={\"left\"}\n          font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n          anchorX={blockWidth / 8}\n          anchorY=\"100%\"\n          depthOffset={10}\n        >\n          Exit\n        </Text>\n      </Box>\n    );\n    mesh.instanceMatrix.needsUpdate = true;\n  };\n  React.useEffect(initWalls, [\n    numX,\n    numZ,\n    wallTop,\n    wallLeft,\n    blockWidth,\n    blockHeight,\n    blockDepth,\n    mazeWidth,\n    mazeDepth,\n  ]);\n  return (\n    <group name=\"walls\">\n      <instancedMesh\n        ref={meshRef}\n        args={[null, null, numWalls]}\n        frustumCulled={false}\n      >\n        <boxBufferGeometry\n          attach=\"geometry\"\n          args={[blockWidth + blockDepth, blockHeight, blockDepth]}\n        />\n        <meshPhongMaterial color=\"orange\" attach=\"material\" />\n      </instancedMesh>\n\n      {endpoints.current}\n    </group>\n  );\n}\n","import * as React from \"react\";\nimport { ReactReduxContext } from \"react-redux\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Sky, Stars, Plane, useContextBridge } from \"@react-three/drei\";\nimport LabyrinthCamera from \"./LabyrinthCamera\";\nimport { Walls } from \"./Walls\";\nimport styles from \"./labyrinthView.module.css\";\n\nexport function LabyrinthView({\n  numX,\n  numZ,\n  blockWidth,\n  blockHeight,\n  blockDepth,\n  mazeWidth,\n  mazeDepth,\n  wallTop,\n  wallLeft,\n  numWalls,\n  darkModeIsOn,\n}) {\n  // Direction definination:\n  //\n  //             top\n  //      ^\n  //      |\n  //      | z\n  //      |\n  // left | a             right\n  //      | x\n  //      | i\n  //      | s\n  //      |______________>\n  //            x axis\n  //\n  //            bottom\n\n  // WallLeft and wall top are two conceptual matrix of booleans(they are flattened to arrays for performance), recording\n  // whether a wall exist or not for a certain cell.\n  //\n  // wallTop: whether the wall on the top(in the 2D world) of a cell exists\n  // wallLeft: whether the wall on the left of a cell exists\n  // The isExist information for the wall on the right of the cell is provided by the wallLeft of the cell's right neighbour cell, so as for\n  // the bottom wall.\n  //\n  // To lookup the top wall info cell(x, y), we call wallTop[x + y*numZ]\n\n  // Starting point in the x and z axis(this is coordinate, not index)\n  const startCoordX = (-numX * blockWidth) / 2;\n  const startCoordZ = (-numZ * blockWidth) / 2;\n  // Get the current view coordinate\n  const posCoordX = -blockWidth / 2 + numX * blockWidth + startCoordX;\n  const posCoordZ = -blockWidth / 2 + (numZ + 1) * blockWidth + startCoordZ;\n  // Needed to use react-redux in react-three-fiber canvas.\n  // For details: https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/\n  const ContextBridge = useContextBridge(ReactReduxContext);\n  return (\n    <div className={styles.canvasDiv}>\n      <Canvas\n        camera={{\n          fov: 80,\n          position: [posCoordX, 0, posCoordZ + blockWidth],\n          far: 20000,\n        }}\n      >\n        <ContextBridge>\n          <LabyrinthCamera\n            blockWidth={blockWidth}\n            startCoordX={startCoordX}\n            startCoordZ={startCoordZ}\n            cameraInitCoordX={posCoordX}\n            cameraInitCoordZ={posCoordZ}\n            moveSpeed={0.5}\n            turnSpeed={2}\n          />\n        </ContextBridge>\n        <ambientLight color=\"#ffffff\" intensity={0.4} />\n        {/* Reference: https://drei.pmnd.rs/?path=/story/shaders-softshadows--soft-shadows-st\n            Make the light the same direction with the sun\n        */}\n        {darkModeIsOn ? null : (\n          <directionalLight\n            position={[-500, 20, startCoordZ + blockWidth / 2]}\n            intensity={1.5}\n          />\n        )}\n        <Walls\n          numX={numX}\n          numZ={numZ}\n          wallTop={wallTop}\n          wallLeft={wallLeft}\n          numWalls={numWalls}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeWidth={mazeWidth}\n          mazeDepth={mazeDepth}\n        />\n        {darkModeIsOn ? null : (\n          <Sky\n            distance={10000} // Camera distance (default=450000)\n            // Sun position normal(Make the exit faces the sun, x should be less than -mazeWidth+blockWidth,\n            // y should be greater than 0, z should be -mazeHeight+blockWidth)\n            sunPosition={[-500, blockHeight, startCoordZ + blockWidth / 2]}\n            inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n            azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n          />\n        )}\n        {/* Referenced from https://github.com/pmndrs/drei#stars */}\n        <Stars\n          radius={mazeWidth * 2} // Radius of the inner sphere (default=100)\n          depth={50} // Depth of area where stars should fit (default=50)\n          count={5000} // Amount of stars (default=5000)\n          factor={20 * (numX / 5)} // Size factor (default=4)\n          saturation={0} // Saturation 0-1 (default=0)\n          fade // Faded dots (default=false)\n        />\n        <Plane\n          rotation-x={-Math.PI / 2}\n          position={[0, -blockHeight / 2, 0]}\n          args={[mazeWidth, mazeDepth, 4, 4]}\n        >\n          <meshBasicMaterial attach=\"material\" opacity={0.5} color=\"#405940\" />\n        </Plane>\n        {darkModeIsOn ? (\n          <fog attach=\"fog\" args={[\"black\", 0, blockWidth]} />\n        ) : null}\n      </Canvas>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/mixkit-game-level-completed-2059.9b5b1a62.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-video-game-health-recharge-2837.1196415e.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-negative-guitar-tone-2324.cab1c2b6.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-bonus-extra-in-a-video-game-2064.fc57cf28.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-arcade-retro-jump-223.ec530168.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-small-hit-in-a-game-2072.63f0b124.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-player-losing-or-failing-2042.183e2b8a.wav\";","import React from \"react\";\nimport useSound from \"use-sound\";\n// The following 7 music pieces credit to https://mixkit.co/free-sound-effects/game/.\nimport GameCompletionSound from \"../music/mixkit-game-level-completed-2059.wav\";\nimport PositiveEffectSound from \"../music/mixkit-video-game-health-recharge-2837.wav\";\nimport NegativeEffectSound from \"../music/mixkit-negative-guitar-tone-2324.wav\";\nimport NeutralEffectSound from \"../music/mixkit-bonus-extra-in-a-video-game-2064.wav\";\nimport ConfrontBattleSound from \"../music/mixkit-arcade-retro-jump-223.wav\";\nimport HitWallSound from \"../music/mixkit-small-hit-in-a-game-2072.wav\";\nimport GameOverSound from \"../music/mixkit-player-losing-or-failing-2042.wav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  MUTED,\n  selectIsPlaying,\n  TO_MUTE,\n} from \"../reducers/backgroundMusicSlice\";\nimport { resetLastMoveHitWall, selectLastMoveHitWall } from \"../reducers/controlSlice\";\n\nexport function useGameCompletionSound() {\n  const [playSound, { stop }] = useSound(GameCompletionSound, {\n    interrupt: true,\n    volume: 0.75,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  // When the muted is set, do not play any sound effect.\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport function usePositiveEffectSound() {\n  const [playSound, { stop }] = useSound(PositiveEffectSound, {\n    interrupt: true,\n    volume: 0.45,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport function useNegativeEffectSound() {\n  const [playSound, { stop }] = useSound(NegativeEffectSound, {\n    interrupt: true,\n    volume: 0.65,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\n// Clears all effects, no matter positive or negative.\nexport function useNeutralEffectSound() {\n  const [playSound, { stop }] = useSound(NeutralEffectSound, {\n    interrupt: true,\n    volume: 0.65,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport function useConfrontBattleSound() {\n  const [playSound, { stop }] = useSound(ConfrontBattleSound, {\n    interrupt: true,\n    volume: 0.65,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport function useGameOverSound() {\n  const [playSound, { stop }] = useSound(GameOverSound, {\n    interrupt: true,\n    volume: 0.65,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport function useHitWallSound() {\n  const [playSound, { stop }] = useSound(HitWallSound, {\n    interrupt: true,\n    volume: 0.65,\n  });\n  const isPlaying = useSelector(selectIsPlaying);\n  const play = () => {\n    if (isPlaying !== MUTED || isPlaying !== TO_MUTE) {\n      playSound();\n    }\n  };\n  return { play, stop };\n}\n\nexport const EffectSoundTestContainer = () => {\n  const {\n    play: playGameCompletionSound,\n    stop: stopGameCompletionSound,\n  } = useGameCompletionSound();\n  const {\n    play: playPositiveEffectSound,\n    stop: stopPositiveEffectSound,\n  } = usePositiveEffectSound();\n  const {\n    play: playNegativeEffectSound,\n    stop: stopNegativeEffectSound,\n  } = useNegativeEffectSound();\n  const {\n    play: playNeutralEffectSound,\n    stop: stopNeutralEffectSound,\n  } = useNeutralEffectSound();\n  const {\n    play: playConfrontBattleSound,\n    stop: stopConfrontBattleSound,\n  } = useConfrontBattleSound();\n  const {\n    play: playGameOverSound,\n    stop: stopGameOverSound,\n  } = useGameOverSound();\n  const { play: playHitWallSound, stop: stopHitWallSound } = useHitWallSound();\n\n  return (\n    <div>\n      <button onClick={() => playGameCompletionSound()}>\n        Play Game Compeletion Sound\n      </button>\n      <button onClick={() => stopGameCompletionSound()}>\n        Stop Game Compeletion Sound\n      </button>\n      <button onClick={() => playPositiveEffectSound()}>\n        Play PositiveEffectSound\n      </button>\n      <button onClick={() => stopPositiveEffectSound()}>\n        Stop PositiveEffectSound\n      </button>\n      <button onClick={() => playNegativeEffectSound()}>\n        Play NegativeEffectSound\n      </button>\n      <button onClick={() => stopNegativeEffectSound()}>\n        Stop NegativeEffectSound\n      </button>\n      <button onClick={() => playNeutralEffectSound()}>\n        Play NeutralEffectSound\n      </button>\n      <button onClick={() => stopNeutralEffectSound()}>\n        Stop NeutralEffectSound\n      </button>\n      <button onClick={() => playConfrontBattleSound()}>\n        Play ConfrontBattleSound\n      </button>\n      <button onClick={() => stopConfrontBattleSound()}>\n        Stop ConfrontBattleSound\n      </button>\n      <button onClick={() => playGameOverSound()}>Play GameOverSound</button>\n      <button onClick={() => stopGameOverSound()}>Stop GameOverSound</button>\n      <button onClick={() => playHitWallSound()}>Play HitWallSound</button>\n      <button onClick={() => stopHitWallSound()}>Stop HitWallSound</button>\n    </div>\n  );\n};\n\n// Manage play sound effects\nexport function SoundEffectManager() {\n  const dispatch = useDispatch();\n  const isPlayHitWall = useSelector(selectLastMoveHitWall);\n  const { play } = useHitWallSound();\n  if (isPlayHitWall) {\n    play();\n    dispatch(resetLastMoveHitWall());\n  }\n  return <></>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst INITIAL_PRESENSE = false;\nexport const NOT_PRESENT = 0;\nexport const EVENT_WINDOW = 1;\nexport const HELPER_WINDOW = 2;\nexport const CONFIRM_WINDOW = 3;\n\nexport const popUpWindowSlice = createSlice({\n  name: \"popUpWindow\",\n  initialState: {\n    smallPopUpPresense: INITIAL_PRESENSE,\n    smallPopIsToOpen: INITIAL_PRESENSE,\n    bigPopUpPresense: NOT_PRESENT,\n    bigPopUpIsToOpen: NOT_PRESENT,\n  },\n  reducers: {\n    enableSmallPopUpPresense: (state) => {\n      state.smallPopUpPresense = true;\n    },\n    disableSmallPopUpPresense: (state) => {\n      state.smallPopUpPresense = false;\n    },\n    enableSmallPopUpIsToOpen: (state) => {\n      state.smallPopIsToOpen = true;\n    },\n    disableSmallPopUpIsToOpen: (state) => {\n      state.smallPopIsToOpen = false;\n    },\n    enableBigPopUpPresense: (state, action) => {\n      state.bigPopUpPresense = action.payload;\n    },\n    disableBigPopUpPresense: (state) => {\n      state.bigPopUpPresense = false;\n    },\n    enableBigPopUpIsToOpen: (state, action) => {\n      state.bigPopUpIsToOpen = action.payload;\n    },\n    disableBigPopUpIsToOpen: (state) => {\n      state.bigPopUpIsToOpen = NOT_PRESENT;\n    },\n  },\n});\n\nexport const {\n  enableSmallPopUpPresense,\n  disableSmallPopUpPresense,\n  enableSmallPopUpIsToOpen,\n  disableSmallPopUpIsToOpen,\n  enableBigPopUpPresense,\n  disableBigPopUpPresense,\n  enableBigPopUpIsToOpen,\n  disableBigPopUpIsToOpen,\n} = popUpWindowSlice.actions;\n\nexport const selectSmallPopUpPresense = (state) =>\n  state.popUpWindow.smallPopUpPresense;\nexport const selectSmallPopUpIsToOpen = (state) =>\n  state.popUpWindow.smallPopIsToOpen;\nexport const selectBigPopUpPresense = (state) =>\n  state.popUpWindow.bigPopUpPresense;\nexport const selectBigPopUpIsToOpen = (state) =>\n  state.popUpWindow.bigPopUpIsToOpen;\n\nexport default popUpWindowSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const UNINIT = 0;\nexport const READY = 1;\nexport const RUNNING = 2;\nexport const PAUSE = 3;\n\nexport const elapseTimerSlice = createSlice({\n  name: \"elapseTimer\",\n  initialState: {\n    curNumSeconds: 0,\n    status: UNINIT,\n    intervalHasSet: false,\n    timeout: 0,\n  },\n  reducers: {\n    countUp: (state) => {\n      if (state.status === RUNNING) {\n        state.curNumSeconds += 1;\n      }\n    },\n    pauseCount: (state) => {\n      state.status = PAUSE;\n    },\n    resumeCount: (state) => {\n      state.status = RUNNING;\n    },\n    readyCount: (state) => {\n      state.status = READY;\n    },\n    resetCount: (state) => {\n      state.curNumSeconds = 0;\n    },\n    adjustCountByAmount: (state, action) => {\n      state.curNumSeconds += action.payload;\n    },\n    markIntervalSet: (state) => {\n      state.intervalHasSet = true;\n    },\n    assignTimeout: (state, action) => {\n      state.timeout = action.payload;\n    }\n  },\n});\n\nexport const {\n  countUp,\n  pauseCount,\n  resumeCount,\n  resetCount,\n  readyCount,\n  adjustCountByAmount,\n  markIntervalSet,\n  assignTimeout,\n} = elapseTimerSlice.actions;\n\nexport const selectCurNumSeconds = (state) => state.elapseTimer.curNumSeconds;\nexport const selectStatus = (state) => state.elapseTimer.status;\nexport const selectIntervalHasSet = (state) => state.elapseTimer.intervalHasSet;\nexport const selectTimeout = (state) => state.elapseTimer.timeout;\n\nexport default elapseTimerSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  enableBigPopUpPresense,\n  selectBigPopUpPresense,\n  selectBigPopUpIsToOpen,\n  disableBigPopUpIsToOpen,\n} from \"../reducers/popUpWindowSlice\";\nimport styles from \"./bigPopUpWindow.module.css\";\nimport Modal from \"react-modal\";\nimport { pauseCount } from \"../reducers/elapseTimerSlice\";\nimport { pauseAction } from \"../reducers/controlSlice\";\n\n// Base componments for all the big pop up window in the game view.\n// Will pause the game and block all input.\nconst BigPopUpWindow = (props) => {\n  const dispatch = useDispatch();\n  // isToOpen is to denote the request of openning a new popup window,\n  // does not redener the pop up window immediately once the request is sent\n  // to delay the render time and prevent too many rerenders.\n  const isToOpen = useSelector(selectBigPopUpIsToOpen);\n  useEffect(() => {\n    // There are many kinds of pop up window in this game, this is to test\n    // whether the requested kind is the same with the current popup window componment.\n    // For example, if the popup window is used for showing helper message,\n    // it should be only open when a request for openning helper message is sent.\n    if (isToOpen === props.openType) {\n      dispatch(enableBigPopUpPresense(props.openType));\n      dispatch(pauseAction());\n      dispatch(disableBigPopUpIsToOpen());\n    }\n  }, [isToOpen, props.openType, dispatch]);\n\n  const isOpen = useSelector(selectBigPopUpPresense) === props.openType;\n  useEffect(() => {\n    if (isOpen) {\n      // Pause the clock counting\n      dispatch(pauseCount());\n    }\n  }, [isOpen, dispatch]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.popup}\n      overlayClassName={styles.overlay}\n      // animation time\n      closeTimeoutMS={300}\n    >\n      <img src={props.background} className={styles.backgroundPic} alt={\"\"} />\n\n      <div className={styles.content}>\n        {props.children}\n        <div className={styles.buttonsection}>{props.buttons}</div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default BigPopUpWindow;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  disableSmallPopUpPresense,\n  enableSmallPopUpPresense,\n  selectSmallPopUpPresense,\n  selectSmallPopUpIsToOpen,\n  disableSmallPopUpIsToOpen,\n} from \"../reducers/popUpWindowSlice\";\nimport styles from \"./smallPopUpWindow.module.css\";\n\nconst SmallPopUpWindow = (props) => {\n  const dispatch = useDispatch();\n  const isToOpen = useSelector(selectSmallPopUpIsToOpen);\n  useEffect(() => {\n    if (isToOpen) {\n      dispatch(enableSmallPopUpPresense());\n      dispatch(disableSmallPopUpIsToOpen());\n    }\n  });\n  const handlePresenseChange = () => {\n    dispatch(disableSmallPopUpPresense());\n  };\n\n  useEffect(() => {\n    setTimeout(handlePresenseChange, 2000);\n  });\n  const isOpen = useSelector(selectSmallPopUpPresense);\n\n  return (\n    isOpen && (\n      <div className={styles.content}>\n        {props.children}\n        <div className={styles.buttonsection}>{props.buttons}</div>\n      </div>\n    )\n  );\n};\n\nexport default SmallPopUpWindow;\n","export default __webpack_public_path__ + \"static/media/bigWindowBackground.851d04fd.png\";","import { createSlice } from \"@reduxjs/toolkit\";\nimport { compareNumbers } from \"../commons/utils\";\n\nexport const leaderboardSlice = createSlice({\n  name: \"leaderboard\",\n  initialState: {\n    list: {easy:[],medium:[],hard:[],pure:[]},\n  },\n  reducers: {\n    appendToLeaderBoard: (state, action) => {\n      const [mode, value] = [action.payload.mode, action.payload.value];\n      state.list[mode].push(value);\n      state.list[mode].sort(compareNumbers);\n      if (state.list[mode].length > 10) {\n        state.list[mode].pop();\n      }\n    },\n  },\n});\n\nexport const { appendToLeaderBoard } = leaderboardSlice.actions;\n\nexport const selectList = (state) => state.leaderboard.list;\n\nexport default leaderboardSlice.reducer;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectList } from \"../reducers/leaderboardSlice\";\nimport styles from \"./leaderboard.module.css\";\n\nexport function LeaderboardRow({ time, index}) {\n  return (\n    <div className={styles.leaderRow}>\n      <span className={styles.order}>{index + 1}.</span>\n      <span key={index} className={styles.entry}>\n        {Math.floor(time / 3600)} H {Math.floor(time / 60)} M {time % 60} S\n      </span>\n    </div>\n  );\n}\n\nexport function LearderboardSection({mode}) {\n  const leaderList = useSelector(selectList);\n  return (\n    <React.Fragment>\n      <h1>Leaderboard for {mode} mode</h1>\n      <div className={styles.leaderSection}>\n        {leaderList[mode].map((x, index) => (\n          <LeaderboardRow key={index} index={index} time={x} />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sun.37d40077.png\";","export default __webpack_public_path__ + \"static/media/night.bde826a9.png\";","export default __webpack_public_path__ + \"static/media/rocket.b58a9096.png\";","export default __webpack_public_path__ + \"static/media/turtleicon.fcc4bf50.png\";","export default __webpack_public_path__ + \"static/media/mapicon.376644ec.png\";","export default __webpack_public_path__ + \"static/media/mapoff.c19d97f2.png\";","export default __webpack_public_path__ + \"static/media/hpbonus.8a59cfa8.png\";","export default __webpack_public_path__ + \"static/media/battle.8585994a.png\";","export default __webpack_public_path__ + \"static/media/strongwind.51820bf0.png\";","import React, { useEffect, useState } from \"react\";\nimport { assignInit, resumeAction } from \"../reducers/controlSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport {\n  readyCount,\n  selectCurNumSeconds,\n  resumeCount,\n  resetCount,\n} from \"../reducers/elapseTimerSlice\";\nimport { resetPlayerStatus } from \"../reducers/playerStatusSlice\";\nimport BigPopUpWindow from \"./BigPopUpWindow\";\nimport SmallPopUpWindow from \"./SmallPopUpWindow\";\nimport {\n  EVENT_WINDOW,\n  disableBigPopUpPresense,\n} from \"../reducers/popUpWindowSlice\";\nimport { genRandomInt } from \"../commons/utils\";\nimport background from \"../images/bigWindowBackground.png\";\nimport { appendToLeaderBoard } from \"../reducers/leaderboardSlice\";\nimport {\n  decreaseHP,\n  increaseHP,\n  removeABuff,\n  removeADebuff,\n  resetBuffAndDebuff,\n  addABuff,\n  addADebuff,\n  DARK_MODE_ON,\n  DARK_MODE_OFF,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  SPEED_UP,\n  SPEED_DOWN,\n} from \"../reducers/playerStatusSlice\";\nimport { LearderboardSection } from \"./Leaderboard\";\n\nimport styles from \"./events.module.css\";\n\nimport dayIcon from \"../images/sun.png\";\nimport nightIcon from \"../images/night.png\";\nimport rocket from \"../images/rocket.png\";\nimport turtleIcon from \"../images/turtleicon.png\";\nimport mapOnIcon from \"../images/mapicon.png\";\nimport mapOffIcon from \"../images/mapoff.png\";\nimport hpBonusIcon from \"../images/hpbonus.png\";\n// Ref:https://www.flaticon.com/free-icon/battle_1732452\nimport battleIcon from \"../images/battle.png\";\n// Ref:http://www.clker.com/clipart-wind-icon.html\nimport windIcon from \"../images/strongwind.png\";\n\nexport const NUM_DEBUFF_TYPE = 3;\nconst DARK_MODE_ID = 0;\nconst SPEED_DOWN_ID = 1;\nconst HIDE_MINI_MAP = 2;\n\nexport const NUM_BUFF_TYPE = 4;\nconst BRIGHT_MODE_ID = 0;\nconst SPEED_UP_ID = 1;\nconst SHOW_MINI_MAP = 2;\nconst HP_UP_BY_TEN = 3;\n\nconst RANDOM_ID_MAX = 100;\nconst RANDOM_ID_WITHHOLD = 33;\n\n// NUM_DEBUFF_TYPE + NUM_BUFF_TYPE + netural event + battle event\nconst NUM_RANDOM_EVENT_TYPE = NUM_DEBUFF_TYPE + NUM_BUFF_TYPE + 2;\n\nexport const POSITIVE_EFFECT_EVENT = 0;\nexport const NEGATIVE_EFFECT_EVENT = 1;\nexport const NEUTRAL_EFFECT_EVENT = 2;\nexport const CONFRONT_BATTLE_EVENT = 3;\n\nexport const START_GAME_EVENT = 4;\nexport const END_GAME_EVENT = 5;\nexport const GAME_FAIL_EVENT = 6;\nexport const NOTHING_HAPPENS = 7;\n\n// Render the game start window\nexport function StartEventRender() {\n  const dispatch = useDispatch();\n  const buttons = (\n    <div\n      onClick={() => {\n        // Start time count\n        dispatch(resumeCount());\n        // Unblock player inputs\n        dispatch(resumeAction());\n        dispatch(disableBigPopUpPresense());\n      }}\n    >\n      Play now!\n    </div>\n  );\n  return (\n    <BigPopUpWindow\n      buttons={buttons}\n      background={background}\n      openType={EVENT_WINDOW}\n    >\n      <h1>You are in a maze</h1>\n      <div>This is a dangerous maze, good luck!</div>\n    </BigPopUpWindow>\n  );\n}\n\n// The callbacks needed to be executed when game starts\nexport function startEventCallback(dispatch) {\n  dispatch(readyCount());\n}\n\n// Handle whether show leaderboard logic\nfunction useLeaderBoard() {\n  const [isShowLeaderboard, setIsShowLeaderboard] = useState(false);\n  const handleLeaderboard = () => {\n    if (isShowLeaderboard) {\n      setIsShowLeaderboard(false);\n    } else {\n      setIsShowLeaderboard(true);\n    }\n  };\n  return [isShowLeaderboard, handleLeaderboard];\n}\n\n// Render the game successfully finish window\nexport function EndEventRender({ mode }) {\n  const time = useSelector(selectCurNumSeconds);\n  const [isShowLeaderboard, handleLeaderboard] = useLeaderBoard();\n  const [hasAppend, setHasAppend] = useState(false);\n  const dispatch = useDispatch();\n  // Add player time spent to leader board only once\n  useEffect(() => {\n    if (!hasAppend) {\n      dispatch(appendToLeaderBoard({ mode: mode, value: time }));\n      setHasAppend(true);\n    }\n  }, [hasAppend, dispatch, mode, time]);\n\n  const buttons = (\n    <React.Fragment>\n      <div\n        onClick={() => {\n          // Unblock player inputs\n          dispatch(resumeAction());\n          // Reset player status\n          dispatch(resetPlayerStatus());\n          // Reset time count\n          dispatch(resetCount());\n          // Reinitialize the maze, including\n          // the maze layout and random events\n          dispatch(assignInit(false));\n          dispatch(disableBigPopUpPresense());\n        }}\n      >\n        Play Again\n      </div>\n      <GoHomeButton />\n      <div onClick={() => handleLeaderboard()}>\n        {isShowLeaderboard ? \"Go back\" : \"Check leaderboard\"}\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <BigPopUpWindow\n      buttons={buttons}\n      background={background}\n      openType={EVENT_WINDOW}\n    >\n      {isShowLeaderboard ? (\n        <LearderboardSection mode={mode} />\n      ) : (\n        <>\n          <h1>Congrats!</h1>\n          <div>You've passed the maze within {time} seconds!</div>\n        </>\n      )}\n    </BigPopUpWindow>\n  );\n}\n\nconst GoHomeButton = () => {\n  const history = useHistory();\n\n  return <div onClick={() => history.push(\"/\")}>Home</div>;\n};\n\n// Render the game fail window\nexport function FailGameEventRender({ mode }) {\n  const dispatch = useDispatch();\n  const [isShowLeaderboard, handleLeaderboard] = useLeaderBoard();\n\n  const buttons = (\n    <React.Fragment>\n      <div\n        onClick={() => {\n          dispatch(resumeAction());\n          dispatch(resetPlayerStatus());\n          dispatch(resetCount());\n          dispatch(assignInit(false));\n          dispatch(disableBigPopUpPresense());\n        }}\n      >\n        Try again\n      </div>\n      <GoHomeButton />\n      <div onClick={() => handleLeaderboard()}>\n        {isShowLeaderboard ? \"Go back\" : \"Check leaderboard\"}\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <BigPopUpWindow\n      buttons={buttons}\n      background={background}\n      openType={EVENT_WINDOW}\n    >\n      {isShowLeaderboard ? (\n        <LearderboardSection mode={mode} />\n      ) : (\n        <>\n          <h1>Oops!</h1>\n          <div>You've failed the game (▰˘︹˘▰)!</div>\n        </>\n      )}\n    </BigPopUpWindow>\n  );\n}\n\nexport function endEventCallback(play) {\n  play();\n}\n\n// With a Strong wind, all buff and debuff are cleared.\nexport function strongWindEventCallBack(dispatch, play, gameMode) {\n  play();\n  dispatch(resetBuffAndDebuff());\n  if (gameMode === \"hard\") {\n    dispatch(addADebuff(DARK_MODE_ON));\n    dispatch(removeABuff(DARK_MODE_OFF));\n  } else {\n    dispatch(addABuff(DARK_MODE_OFF));\n    dispatch(removeADebuff(DARK_MODE_ON));\n  }\n  dispatch(addADebuff(MINI_MAP_OFF));\n  dispatch(removeABuff(MINI_MAP_ON));\n}\n\nexport function StrongWindEventRender() {\n  return (\n    <SmallPopUpWindow>\n      <img className={styles.icon} src={windIcon} alt=\"Strong wind\" />\n      <h1>Wow!</h1>\n      <div>You've been applied A strong wind!</div>\n      <div>\n        <span className={styles.neutralKeywords}>All effects are cleared!</span>\n      </div>\n    </SmallPopUpWindow>\n  );\n}\n\n// The smelly wind will add debuff: darkmode, minimap off, slowly move.\n// function smellyWindEventCallBack(debuffID, dispatch, playNegativeEffectSound) {\nexport function smellyWindEventCallBack(debuffId, dispatch, play) {\n  play();\n  // Generate a random debuff\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      dispatch(addADebuff(DARK_MODE_ON));\n      dispatch(removeABuff(DARK_MODE_OFF));\n      break;\n    case SPEED_DOWN_ID:\n      dispatch(addADebuff(SPEED_DOWN));\n      dispatch(removeABuff(SPEED_UP));\n      break;\n    case HIDE_MINI_MAP:\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(removeABuff(MINI_MAP_ON));\n      break;\n    default:\n      break;\n  }\n}\n\nexport function confrontBattleCallBack(HP, dispatch, play) {\n  play();\n  dispatch(decreaseHP(HP));\n}\n\n// Render the negative event window\nexport function SmellyWindEventRender({ debuffId }) {\n  let specificEventContent = <></>;\n  let specificIcon = <></>;\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      specificIcon = (\n        <img className={styles.icon} src={nightIcon} alt=\"Dark mode\" />\n      );\n      specificEventContent = (\n        <div>\n          <span className={styles.negativeKeywords}>Dark Mode</span> is on!\n        </div>\n      );\n      break;\n    case SPEED_DOWN_ID:\n      specificIcon = (\n        <img className={styles.icon} src={turtleIcon} alt=\"Slow down\" />\n      );\n      specificEventContent = (\n        <div>\n          Your speed is{\" \"}\n          <span className={styles.negativeKeywords}>slowed down</span>!\n        </div>\n      );\n      break;\n    case HIDE_MINI_MAP:\n      specificIcon = (\n        <img className={styles.icon} src={mapOffIcon} alt=\"Mini map off\" />\n      );\n      specificEventContent = (\n        <div>\n          <span className={styles.negativeKeywords}>Mini map</span> is gone!\n        </div>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <SmallPopUpWindow>\n      {specificIcon}\n      <h1>Oh no!</h1>\n      <div>You met a smelly wind...</div>\n      {specificEventContent}\n    </SmallPopUpWindow>\n  );\n}\n\n// Render the battle event window\nexport function BattleEventRender({ HP }) {\n  return (\n    <SmallPopUpWindow>\n      <img className={styles.icon} src={battleIcon} alt=\"Battle Event\" />{\" \"}\n      <h1>Oh no!</h1>\n      <div>You fought with an monster...</div>\n      <div>\n        Your lost <span className={styles.negativeKeywords}>{HP} HP</span>!\n      </div>\n    </SmallPopUpWindow>\n  );\n}\n\n// Render the positive event window\nexport function FreshWindEventRender({ buffId }) {\n  let specificEventContent = <></>;\n  let specificIcon = <></>;\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      specificIcon = (\n        <img className={styles.icon} src={dayIcon} alt=\"Day mode\" />\n      );\n\n      specificEventContent = (\n        <div>\n          <span className={styles.positiveKeywords}>Bright mode</span> is on!\n        </div>\n      );\n      break;\n    case SPEED_UP_ID:\n      specificIcon = (\n        <img className={styles.icon} src={rocket} alt=\"Speed up\" />\n      );\n      specificEventContent = (\n        <div>\n          <span className={styles.positiveKeywords}>Speed up</span> is applied\n          to you!\n        </div>\n      );\n      break;\n    case SHOW_MINI_MAP:\n      specificIcon = (\n        <img className={styles.icon} src={mapOnIcon} alt=\"Minimap on\" />\n      );\n      specificEventContent = (\n        <div>\n          <span className={styles.positiveKeywords}>Mini map</span> is shown for\n          you!\n        </div>\n      );\n      break;\n    case HP_UP_BY_TEN:\n      specificIcon = (\n        <img className={styles.icon} src={hpBonusIcon} alt=\"HP bouns\" />\n      );\n      specificEventContent = (\n        <div>\n          Your got <span className={styles.positiveKeywords}>10 HP</span>!\n        </div>\n      );\n      break;\n    default:\n      break;\n  }\n  return (\n    <SmallPopUpWindow>\n      {specificIcon}\n      <h1>Great!</h1>\n      <div>A fresh wind brought you something helpful! </div>\n      {specificEventContent}\n    </SmallPopUpWindow>\n  );\n}\n\n// With a Fresh wind, one buff is added: brightmode, minimap on, faster move.\n// function freshWindEventCallBack(buffId, dispatch, playPositiveEffectSound) {\nexport function freshWindEventCallBack(buffId, dispatch, play) {\n  play();\n  // Generate a random buff\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(removeADebuff(DARK_MODE_ON));\n      break;\n    case SPEED_UP_ID:\n      dispatch(addABuff(SPEED_UP));\n      dispatch(removeADebuff(SPEED_DOWN));\n      break;\n    case SHOW_MINI_MAP:\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(removeADebuff(MINI_MAP_OFF));\n      break;\n    case HP_UP_BY_TEN:\n      dispatch(increaseHP(10));\n      break;\n    default:\n      break;\n  }\n}\n\n// Initialize the eventMap according to the maze size and gameMode\nexport function initEventMap(numX, numZ, gameMode) {\n  const eventMap = Array(numX * numZ + 1).fill(NOTHING_HAPPENS);\n\n  // The start point is always (numX-1, numZ-1)\n  eventMap[numX * (numZ - 1) + numX - 1] = START_GAME_EVENT;\n  // The end point is always (0, 0)\n  eventMap[0] = END_GAME_EVENT;\n  // The fail point is a specaial index, it does match any map position\n  eventMap[numX * numZ + 1] = GAME_FAIL_EVENT;\n\n  // Pure mode does not have any random events, so skip this part.\n  if (gameMode !== \"pure\") {\n    for (let i = numX * (numZ - 1) + numX - 2; i > 0; i--) {\n      const randomID = genRandomInt(RANDOM_ID_MAX);\n      // Make only about RANDOM_ID_WITHHOLD/RANDOM_ID_MAX cells have events\n      if (randomID < RANDOM_ID_WITHHOLD) {\n        // Among all the events, 1/(NUM_BUFF_TYPE + NUM_DEBUFF_TYPE + 1) event is netural\n        if (randomID < RANDOM_ID_WITHHOLD / NUM_RANDOM_EVENT_TYPE) {\n          eventMap[i] = NEUTRAL_EFFECT_EVENT;\n        } else if (\n          // Among all the events, 2/(NUM_BUFF_TYPE + NUM_DEBUFF_TYPE + 1) event will be battles\n          randomID <\n          (RANDOM_ID_WITHHOLD / NUM_RANDOM_EVENT_TYPE) * 3\n        ) {\n          eventMap[i] = CONFRONT_BATTLE_EVENT;\n        } else if (\n          // Among all the events, (NUM_BUFF_TYPE+1)/(NUM_BUFF_TYPE + NUM_DEBUFF_TYPE + 1) event will be positive\n          randomID <\n          (RANDOM_ID_WITHHOLD / NUM_RANDOM_EVENT_TYPE) * (4 + NUM_BUFF_TYPE)\n        ) {\n          eventMap[i] = POSITIVE_EFFECT_EVENT;\n        } else {\n          // The rest are negative\n          eventMap[i] = NEGATIVE_EFFECT_EVENT;\n        }\n      }\n    }\n  }\n  return eventMap;\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport {\n  usePositiveEffectSound,\n  useNegativeEffectSound,\n  useGameCompletionSound,\n  useConfrontBattleSound,\n  useNeutralEffectSound,\n  useGameOverSound,\n} from \"../commons/SoundHooks\";\n\nimport {\n  EVENT_WINDOW,\n  enableBigPopUpIsToOpen,\n  enableSmallPopUpIsToOpen,\n} from \"../reducers/popUpWindowSlice\";\n\nimport { playBGM, stopBGM } from \"../reducers/backgroundMusicSlice\";\nimport { assignResetEvent, NOTHING, selectAction, selectPosX, selectPosZ } from \"../reducers/controlSlice\";\nimport {\n  initEventMap,\n  START_GAME_EVENT,\n  END_GAME_EVENT,\n  POSITIVE_EFFECT_EVENT,\n  NEGATIVE_EFFECT_EVENT,\n  CONFRONT_BATTLE_EVENT,\n  NEUTRAL_EFFECT_EVENT,\n  GAME_FAIL_EVENT,\n  NUM_BUFF_TYPE,\n  NUM_DEBUFF_TYPE,\n  startEventCallback,\n  endEventCallback,\n  FailGameEventRender,\n  StrongWindEventRender,\n  BattleEventRender,\n  SmellyWindEventRender,\n  StartEventRender,\n  EndEventRender,\n  FreshWindEventRender,\n  freshWindEventCallBack,\n  smellyWindEventCallBack,\n  strongWindEventCallBack,\n  confrontBattleCallBack,\n} from \"./Events\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { genRandomInt } from \"../commons/utils\";\nimport { selectHP, selectIsTimeUsedUp } from \"../reducers/playerStatusSlice\";\n\n// The componments responsible for incurring events according to game state and\n// position, including render the event pop up window and execute the event callback.\nexport default function EventManager({\n  discovered,\n  numX,\n  numZ,\n  isResetEvent,\n  gameMode,\n}) {\n  // eventMap stores which event should occur at which position\n  const [eventMap, setEventMap] = useState(initEventMap(numX, numZ, gameMode));\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const currentAction = useSelector(selectAction);\n  // The current rendering event, use ref to preserve the rendered window when go\n  // to another blank cell. Do not use state because we only want to rerender based\n  // on the position change and isGameFail change.\n  const currentRender = useRef(<></>);\n  // If we need to restart the game, we need to reset all the events again.\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isResetEvent) {\n      setEventMap(initEventMap(numX, numZ, gameMode));\n      dispatch(assignResetEvent(false));\n    }\n  }, [isResetEvent, numX, numZ, gameMode, dispatch]);\n\n  const { play: playGameCompletionSound } = useGameCompletionSound();\n  const { play: playPositiveEffectSound } = usePositiveEffectSound();\n  const { play: playNegativeEffectSound } = useNegativeEffectSound();\n  const { play: playNeutralEffectSound } = useNeutralEffectSound();\n  const { play: playConfrontBattleSound } = useConfrontBattleSound();\n  const { play: playGameOverSound } = useGameOverSound();\n\n  // Convert the two dimension position index to one dimension index in the array\n  let currentIndex = posZ * numX + posX;\n  const isTimeUsedUp = useSelector(selectIsTimeUsedUp);\n  const currentHP = useSelector(selectHP);\n  const isGameFail =\n    gameMode === \"pure\" ? false : currentHP <= 0 || isTimeUsedUp;\n\n  // GameFail event is treated as a special event within the eventmap, it's the last\n  // element of the map.\n  if (isGameFail) {\n    currentIndex = numX * numZ + 1;\n  }\n  // The event callbacks\n  let currentCallback = () => {};\n  // This is called after the event callback is executed.\n  const callBackCommonTail = () => {\n    if (currentAction === NOTHING) {\n      // Mark the position discovered at the end of each callback\n      discovered.current[currentIndex] = true;\n    }\n  };\n  // Only call events when the moving animation is finished, and the\n  // game is not paused.\n  if (currentAction === NOTHING) {\n    if (!discovered.current[currentIndex]) {\n      switch (eventMap[currentIndex]) {\n        case START_GAME_EVENT:\n          currentRender.current = <StartEventRender />;\n          currentCallback = () => {\n            startEventCallback(dispatch);\n            dispatch(playBGM());\n            dispatch(enableBigPopUpIsToOpen(EVENT_WINDOW));\n          };\n          break;\n        case END_GAME_EVENT:\n          currentRender.current = <EndEventRender mode={gameMode} />;\n          currentCallback = () => {\n            endEventCallback(playGameCompletionSound);\n            dispatch(stopBGM());\n            dispatch(enableBigPopUpIsToOpen(EVENT_WINDOW));\n          };\n          break;\n        case POSITIVE_EFFECT_EVENT:\n          const buffId = genRandomInt(NUM_BUFF_TYPE);\n          currentRender.current = <FreshWindEventRender buffId={buffId} />;\n          currentCallback = () => {\n            freshWindEventCallBack(buffId, dispatch, playPositiveEffectSound);\n            dispatch(enableSmallPopUpIsToOpen());\n          };\n          break;\n        case NEGATIVE_EFFECT_EVENT:\n          const debuffId = genRandomInt(NUM_DEBUFF_TYPE);\n          currentRender.current = <SmellyWindEventRender debuffId={debuffId} />;\n          currentCallback = () => {\n            smellyWindEventCallBack(\n              debuffId,\n              dispatch,\n              playNegativeEffectSound\n            );\n            dispatch(enableSmallPopUpIsToOpen());\n          };\n          break;\n        case CONFRONT_BATTLE_EVENT:\n          const HP = genRandomInt(40) + 1;\n          currentRender.current = <BattleEventRender HP={HP} />;\n          currentCallback = () => {\n            confrontBattleCallBack(HP, dispatch, playConfrontBattleSound);\n            dispatch(enableSmallPopUpIsToOpen());\n          };\n          break;\n        case NEUTRAL_EFFECT_EVENT:\n          currentRender.current = <StrongWindEventRender mode={gameMode} />;\n          currentCallback = () => {\n            strongWindEventCallBack(dispatch, playNeutralEffectSound, gameMode);\n            dispatch(enableSmallPopUpIsToOpen());\n          };\n\n          break;\n        case GAME_FAIL_EVENT:\n          currentCallback = () => {\n            currentRender.current = <FailGameEventRender mode={gameMode} />;\n            endEventCallback(playGameOverSound);\n            dispatch(stopBGM());\n            dispatch(enableBigPopUpIsToOpen(EVENT_WINDOW));\n          };\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  useEffect(() => {\n    currentCallback();\n    callBackCommonTail();\n  });\n  return currentRender.current;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectPosX, selectPosZ } from \"../reducers/controlSlice\";\nimport styles from \"./miniMap.module.css\";\n\nexport function MiniMap({\n  discovered,\n  numX,\n  numZ,\n  wallLeft,\n  wallTop,\n  miniMapIsOn,\n}) {\n  const display = [];\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n\n  for (let i = 0; i < numZ; i++) {\n    let currentRow = [];\n    for (let j = 0; j < numX; j++) {\n      if (discovered.current[i * numX + j] || (posX === j && posZ === i)) {\n        currentRow.push(\n          <div\n            className={styles.square}\n            key={String(i) + \",\" + String(j)}\n            style={{\n              borderTop: wallTop[i * (numX + 1) + j]\n                ? \"0.5px solid white\"\n                : \"0.5px solid rgba(240, 248, 255, 0.25)\",\n              borderLeft: wallLeft[i * (numX + 1) + j]\n                ? \"0.5px solid white\"\n                : \"0.5px solid rgba(240, 248, 255, 0.25)\",\n              borderBottom: wallTop[(i + 1) * (numX + 1) + j]\n                ? \"0.5px solid white\"\n                : \"0.5px solid rgba(240, 248, 255, 0.25)\",\n              borderRight: wallLeft[i * (numX + 1) + j + 1]\n                ? \"0.5px solid white\"\n                : \"0.5px solid rgba(240, 248, 255, 0.25)\",\n              backgroundColor:\n                posX === j && posZ === i\n                  ? \"rgb(37, 110, 194)\"\n                  : \"rgba(240, 248, 255, 0.5)\",\n            }}\n          ></div>\n        );\n      } else {\n        currentRow.push(\n          <div\n            className={styles.square}\n            key={String(i) + \",\" + String(j)}\n            style={{\n              borderTop: \"0.5px solid rgba(0, 0, 0, 0.1)\",\n              borderLeft: \"0.5px solid rgba(0, 0, 0, 0.1)\",\n              borderBottom: \"0.5px solid rgba(0, 0, 0, 0.1)\",\n              borderRight: \"0.5px solid rgba(0, 0, 0, 0.1)\",\n              backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n            }}\n          ></div>\n        );\n      }\n    }\n    display.push(\n      <div className={styles.broadRow} key={\"border\" + String(i)}>\n        {currentRow}\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div></div>\n      <div className={styles.map}>{miniMapIsOn ? display : null}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/heart-icon.5f6c67fd.png\";","export default __webpack_public_path__ + \"static/media/normalclock.bdc92f27.png\";","export default __webpack_public_path__ + \"static/media/outoftimeclock.c12811a4.png\";","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectStatus,\n  countUp,\n  resumeCount,\n  READY,\n  selectIntervalHasSet,\n  markIntervalSet,\n  selectCurNumSeconds,\n  selectTimeout,\n} from \"../reducers/elapseTimerSlice\";\nimport { setTimeUsedUp } from \"../reducers/playerStatusSlice\";\nimport styles from \"./elapseTimer.module.css\";\n\n// A timer recording elapse time.\nexport default function ElapseTimer({ mode }) {\n  const status = useSelector(selectStatus);\n  const intervalHasSet = useSelector(selectIntervalHasSet);\n  const dispatch = useDispatch();\n  const timeOut = useSelector(selectTimeout);\n  const x = useSelector(selectCurNumSeconds);\n\n  const handleCountUpDispatch = () => {\n    dispatch(countUp());\n    if (x > timeOut) {\n      dispatch(setTimeUsedUp());\n    }\n  };\n  useEffect(() => {\n    if (status === READY) {\n      dispatch(resumeCount());\n      if (!intervalHasSet) {\n        setInterval(handleCountUpDispatch, 1000);\n        dispatch(markIntervalSet());\n      }\n    }\n  });\n\n  // Only show detailed time count in pure mode\n  return mode === \"pure\" ? (\n    <div className={styles.timer}>\n      Time elapsed:{\" \"}\n      <span className={styles.number}>{Math.floor(x / 3600)}</span> H{\" \"}\n      <span className={styles.number}>{Math.floor(x / 60)} </span> M{\" \"}\n      <span className={styles.number}>{x % 60} </span> S{\" \"}\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  DARK_MODE_OFF,\n  MINI_MAP_ON,\n  selectHP,\n  SPEED_DOWN,\n  SPEED_UP,\n} from \"../reducers/playerStatusSlice\";\nimport styles from \"./playerStatusPanel.module.css\";\n// Ref: https://iconarchive.com/show/love-is-in-the-web-icons-by-succodesign/heart-icon.html\nimport heart from \"../images/heart-icon.png\";\n// Ref: https://commons.wikimedia.org/wiki/File:Stock_alarm.svg\nimport normalclock from \"../images/normalclock.png\";\n// Ref: https://en.wikipedia.org/wiki/File:Out_of_date_clock_icon.svg\nimport outoftimeclock from \"../images/outoftimeclock.png\";\n// Ref: https://www.subpng.com/png-6x43z7/\nimport mapicon from \"../images/mapicon.png\";\n// Ref: https://www.flaticon.com/free-icon/sun_169367\nimport dayIcon from \"../images/sun.png\";\n// Ref: https://www.flaticon.com/free-icon/night_208293\nimport nightIcon from \"../images/night.png\";\n// Ref: https://www.flaticon.com/free-icon/rocket_1356479\nimport rocket from \"../images/rocket.png\";\n// Ref: https://iconarchive.com/show/noto-emoji-animals-nature-icons-by-google/22283-turtle-icon.html\nimport turtleicon from \"../images/turtleicon.png\";\nimport { selectCurNumSeconds } from \"../reducers/elapseTimerSlice\";\nimport ElapseTimer from \"./ElapseTimer\";\n\n// Ref: https://medium.com/@ItsMeDannyZ/how-to-build-a-progress-bar-with-react-8c5e79731d1f\nconst ProgressBar = (props) => {\n  return (\n    <div className={styles.progressBar}>\n      <Filler percentage={props.percentage} color={props.color} />\n    </div>\n  );\n};\n\nconst Filler = (props) => {\n  return (\n    <div\n      className={styles.filler}\n      style={{ width: `${props.percentage}%`, background: props.color }}\n    />\n  );\n};\n\nconst PlayerStatusPanel = ({ buff, debuff, timeout, mode }) => {\n  const hp = useSelector(selectHP);\n  const clock = (timeout - useSelector(selectCurNumSeconds)) / timeout * 100;\n  return (\n    <div className={styles.container}>\n      {mode !== \"pure\" ? (\n        <div className={styles.progressBarSection}>\n          <img className={styles.icon} src={heart} alt=\"HP\" />\n          <ProgressBar percentage={hp} />{\" \"}\n        </div>\n      ) : (\n        <></>\n      )}\n      {mode !== \"pure\" ? (\n        <div className={styles.progressBarSection}>\n          <img\n            className={styles.icon}\n            src={clock > 30 ? normalclock : outoftimeclock}\n            alt=\"Remaining Time\"\n          />\n          <ProgressBar percentage={clock} color=\"blue\" />\n        </div>\n      ) : (\n        <></>\n      )}\n      <ElapseTimer mode={mode} />\n      <div className={styles.buffSection}>\n        <img\n          className={styles.icon}\n          src={buff & DARK_MODE_OFF ? dayIcon : nightIcon}\n          alt=\"day mode\"\n        />\n        {buff & MINI_MAP_ON ? (\n          <img className={styles.icon} src={mapicon} alt=\"minimap mode\" />\n        ) : null}\n        {buff & SPEED_UP ? (\n          <img className={styles.icon} src={rocket} alt=\"speed up\" />\n        ) : null}\n        {debuff & SPEED_DOWN ? (\n          <img className={styles.icon} src={turtleicon} alt=\"speed down\" />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerStatusPanel;\n","import React from \"react\";\nimport speedUpIcon from \"../images/rocket.png\";\nimport speedDownIcon from \"../images/turtleicon.png\";\nimport miniMapIcon from \"../images/mapicon.png\";\nimport heartIcon from \"../images/heart-icon.png\";\nimport darkModeIcon from \"../images/night.png\";\nimport brightModeIcon from \"../images/sun.png\";\nimport normalClock from \"../images/normalclock.png\";\nimport outOfTimeClock from \"../images/outoftimeclock.png\";\nimport styles from \"./helperPage.module.css\";\n\n// Help info in the guide page about the game status icons\nconst IconDescription = () => {\n  return (\n    <div className={styles.iconDescriptionContainer}>\n      <div>\n        <span className={styles.plainText}>\n          <img className={styles.eventIcon} src={heartIcon} alt=\"heart Icon\" />\n          HP\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={normalClock}\n            alt=\"normal clock Icon\"\n          />\n          Clock\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={outOfTimeClock}\n            alt=\"out of time clock Icon\"\n          />\n          Hurry clock\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={miniMapIcon}\n            alt=\"mini map Icon\"\n          />\n          Mini Map\n        </span>\n      </div>\n\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={darkModeIcon}\n            alt=\"dark mode Icon\"\n          />\n          Dark Mode\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={brightModeIcon}\n            alt=\"bright mode Icon\"\n          />\n          Bright Mode\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={speedUpIcon}\n            alt=\"speed up Icon\"\n          />\n          Speed Up\n        </span>\n      </div>\n      <div>\n        <span className={styles.plainText}>\n          <img\n            className={styles.eventIcon}\n            src={speedDownIcon}\n            alt=\"speed down Icon\"\n          />\n          Speed Down\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default IconDescription;\n","export default __webpack_public_path__ + \"static/media/movesGuide.dcee7320.png\";","import React from \"react\";\nimport movesGuide from \"../images/movesGuide.png\";\nimport styles from \"./helperPage.module.css\";\n\nconst OperationDescription = () => {\n  return (\n    <div className={styles.operationDescription}>\n      <p className={styles.plainText}>\n        Use \"W\", \"A\", \"S\", \"D\" to move forward, left, backward, right.\n      </p>\n      <img className={styles.moveGuide} src={movesGuide} alt=\"move guide\" />\n    </div>\n  );\n};\n\nexport default OperationDescription;\n","import React from \"react\";\nimport IconDescription from \"./IconDescription\";\nimport OperationDescription from \"./OperationDescription\";\nimport styles from \"./helperPage.module.css\";\n\n// Helper page shown within the game view\nconst HelperPage = () => {\n  return (\n    <div className={styles.helperPage}>\n      <OperationDescription />\n      <IconDescription />\n    </div>\n  );\n};\n\nexport default HelperPage;\n","import styles from \"./navPanel.module.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faQuestionCircle,\n  faVolumeMute,\n  faVolumeUp,\n  faSun,\n  faMoon,\n  faMap,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resumeAction } from \"../reducers/controlSlice\";\nimport { useHistory } from \"react-router\";\nimport {\n  muteBGM,\n  MUTED,\n  selectIsPlaying,\n  stopBGM,\n  TO_MUTE,\n  unmuteBGM,\n} from \"../reducers/backgroundMusicSlice\";\nimport {\n  CONFIRM_WINDOW,\n  disableBigPopUpPresense,\n  enableBigPopUpIsToOpen,\n  HELPER_WINDOW,\n} from \"../reducers/popUpWindowSlice\";\nimport BigPopUpWindow from \"./BigPopUpWindow\";\nimport background from \"../images/bigWindowBackground.png\";\nimport HelperPage from \"./HelperPage\";\nimport {\n  addABuff,\n  addADebuff,\n  DARK_MODE_OFF,\n  DARK_MODE_ON,\n  MINI_MAP_OFF,\n  MINI_MAP_ON,\n  removeABuff,\n  removeADebuff,\n} from \"../reducers/playerStatusSlice\";\n\nfunction HelperPageWindow() {\n  const dispatch = useDispatch();\n  const buttons = (\n    <div\n      onClick={() => {\n        dispatch(disableBigPopUpPresense());\n        dispatch(resumeAction());\n      }}\n    >\n      I see!\n    </div>\n  );\n  return (\n    <BigPopUpWindow\n      buttons={buttons}\n      background={background}\n      openType={HELPER_WINDOW}\n    >\n      <HelperPage />\n    </BigPopUpWindow>\n  );\n}\n\nfunction GobackConfirm() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const buttons = (\n    <>\n      <div\n        onClick={() => {\n          dispatch(stopBGM());\n          dispatch(disableBigPopUpPresense());\n          dispatch(resumeAction());\n          history.push(\"\");\n        }}\n      >\n        Yes\n      </div>\n      <div\n        onClick={() => {\n          dispatch(disableBigPopUpPresense());\n          dispatch(resumeAction());\n        }}\n      >\n        No\n      </div>\n    </>\n  );\n  return (\n    <BigPopUpWindow\n      buttons={buttons}\n      background={background}\n      openType={CONFIRM_WINDOW}\n    >\n      <h1>Are you sure?</h1>\n      <div>\n        You are going back to the welcome page, all your current game progess\n        will be lost, are you sure?\n      </div>\n    </BigPopUpWindow>\n  );\n}\n\nexport function NavPanel({ mode, buff }) {\n  const isPlayingBGM = useSelector(selectIsPlaying);\n  const dispatch = useDispatch();\n  const handleGoHome = () => {\n    dispatch(enableBigPopUpIsToOpen(CONFIRM_WINDOW));\n  };\n  const handleHelperPage = () => {\n    dispatch(enableBigPopUpIsToOpen(HELPER_WINDOW));\n  };\n  const handleMute = () => {\n    if (isPlayingBGM === MUTED || isPlayingBGM === TO_MUTE) {\n      dispatch(unmuteBGM());\n    } else {\n      dispatch(muteBGM());\n    }\n  };\n  const handleSwitchDayNight = () => {\n    if (buff & DARK_MODE_OFF) {\n      dispatch(removeABuff(DARK_MODE_OFF));\n      dispatch(addADebuff(DARK_MODE_ON));\n    } else {\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(removeADebuff(DARK_MODE_ON));\n    }\n  };\n  const handleSwitchMinimap = () => {\n    if (buff & MINI_MAP_ON) {\n      dispatch(removeABuff(MINI_MAP_ON));\n      dispatch(addADebuff(MINI_MAP_OFF));\n    } else {\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(removeADebuff(MINI_MAP_OFF));\n    }\n  };\n  return (\n    <>\n      <HelperPageWindow />\n      <GobackConfirm />\n      <div className={styles.navPanelContainer}>\n        <FontAwesomeIcon\n          className={styles.icon}\n          icon={faHome}\n          onClick={() => {\n            handleGoHome();\n          }}\n        />\n        <FontAwesomeIcon\n          className={styles.icon}\n          icon={faQuestionCircle}\n          onClick={() => {\n            handleHelperPage();\n          }}\n        />\n\n        <span className={styles.toggle}>\n          {mode === \"pure\" ? (\n            <FontAwesomeIcon\n              className={styles.icon}\n              icon={buff & DARK_MODE_OFF ? faMoon : faSun}\n              onClick={() => {\n                handleSwitchDayNight();\n              }}\n            />\n          ) : (\n            <></>\n          )}\n          {mode === \"pure\" ? (\n            <FontAwesomeIcon\n              className={styles.icon}\n              icon={faMap}\n              onClick={() => {\n                handleSwitchMinimap();\n              }}\n            />\n          ) : (\n            <></>\n          )}\n          <FontAwesomeIcon\n            className={styles.icon}\n            icon={\n              isPlayingBGM === MUTED || isPlayingBGM === TO_MUTE\n                ? faVolumeMute\n                : faVolumeUp\n            }\n            onClick={() => {\n              handleMute();\n            }}\n          />\n        </span>\n      </div>\n    </>\n  );\n}\n","import { useRef } from \"react\";\nimport GamePanel from \"../components/GamePanel\";\nimport { LabyrinthView } from \"../components/LabyrinthView\";\nimport EventManager from \"../components/EventManager\";\nimport { MiniMap } from \"../components/MiniMap\";\nimport PlayerStatusPanel from \"../components/PlayerStatusPanel\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { initLabyrinthWalls } from \"../components/Walls\";\nimport {\n  assignInit,\n  assignNumX,\n  assignNumZ,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  selectIsInit,\n  assignResetCamera,\n  assignResetEvent,\n  resetCurrentAction,\n  selectWallLeft,\n  selectWallTop,\n  selectResetEvent,\n  selectNumX,\n  selectNumZ,\n  assignNumWalls,\n  selectNumWalls,\n} from \"../reducers/controlSlice\";\nimport {\n  addABuff,\n  addADebuff,\n  DARK_MODE_OFF,\n  DARK_MODE_ON,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  selectBuff,\n  selectDebuff,\n  resetPlayerStatus,\n} from \"../reducers/playerStatusSlice\";\nimport {\n  assignTimeout,\n  resetCount,\n  selectTimeout,\n} from \"../reducers/elapseTimerSlice\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { NavPanel } from \"../components/NavPanel\";\nimport styles from \"./labyrinthGame.module.css\";\nimport { SoundEffectManager } from \"../commons/SoundHooks\";\n\nexport default function LabyrinthGame() {\n  const { gameMode } = useParams();\n  let numX = useSelector(selectNumX);\n  let numZ = useSelector(selectNumZ);\n  let timeout = useSelector(selectTimeout);\n  const blockWidth = 20;\n  const blockDepth = 0.5;\n  const blockHeight = 10;\n  const discovered = useRef(Array(numX * numZ + 1).fill(false));\n  const isInit = useSelector(selectIsInit);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // const [gameRoundID, setGameRoundID] = useState(0);\n  // Reset the game when initialization\n  if (!isInit) {\n    switch (gameMode) {\n      case \"easy\":\n        numX = 5;\n        numZ = 5;\n        timeout = 100;\n        break;\n      case \"medium\":\n        numX = 10;\n        numZ = 10;\n        timeout = 200;\n        break;\n      case \"hard\":\n        numX = 15;\n        numZ = 15;\n        timeout = 600;\n        break;\n      case \"pure\":\n        numX = 20;\n        numZ = 20;\n        timeout = 0;\n        break;\n      default:\n        history.push(\"/\");\n    }\n    dispatch(assignNumX(numX));\n    dispatch(assignNumZ(numZ));\n    dispatch(assignTimeout(timeout));\n    dispatch(assignPosX(numX - 1));\n    dispatch(assignPosZ(numZ - 1));\n    dispatch(assignResetCamera(false));\n    const [wallLeft, wallTop, totalWalls] = initLabyrinthWalls(numX, numZ);\n    dispatch(assignWallLeft(wallLeft));\n    dispatch(assignWallTop(wallTop));\n    dispatch(assignNumWalls(totalWalls));\n    dispatch(resetCurrentAction());\n    dispatch(resetCount());\n    dispatch(resetPlayerStatus());\n    if (gameMode === \"easy\") {\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(addABuff(DARK_MODE_OFF));\n    } else if (gameMode === \"hard\") {\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(addADebuff(DARK_MODE_ON));\n    } else if (gameMode === \"medium\" || gameMode === \"pure\") {\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(addADebuff(MINI_MAP_OFF));\n    }\n    dispatch(assignInit(true));\n    dispatch(assignResetEvent(true));\n    discovered.current = Array(numX * numZ + 1).fill(false);\n  }\n  const wallLeft = useSelector(selectWallLeft);\n  const wallTop = useSelector(selectWallTop);\n  const numWalls = useSelector(selectNumWalls);\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  const isResetEvent = useSelector(selectResetEvent);\n  return (\n    <div className={styles.visContainer}>\n      <LabyrinthView\n        numX={numX}\n        numZ={numZ}\n        blockWidth={blockWidth}\n        blockHeight={blockHeight}\n        blockDepth={blockDepth}\n        mazeDepth={numX * blockWidth}\n        mazeWidth={numZ * blockWidth}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        numWalls={numWalls}\n        darkModeIsOn={debuff & DARK_MODE_ON}\n      />\n      <GamePanel />\n      <NavPanel mode={gameMode} buff={buff} />\n      <EventManager\n        discovered={discovered}\n        numX={numX}\n        numZ={numZ}\n        isResetEvent={isResetEvent}\n        gameMode={gameMode}\n      />\n      <MiniMap\n        discovered={discovered}\n        numX={numX}\n        numZ={numZ}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        miniMapIsOn={buff & MINI_MAP_ON}\n      />\n      <PlayerStatusPanel\n        buff={buff}\n        debuff={debuff}\n        timeout={timeout}\n        mode={gameMode}\n      />\n      <SoundEffectManager />\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"../containers/guide.module.css\";\n\n// GameModeDescription shown on the guide\nconst GameModeDescription = () => {\n  return (\n    <div className={styles.description}>\n      <h3 className={styles.smallHeader}>Game mode</h3>\n      <ul className={styles.list}>\n        <li>\n          <span className={styles.gameModeName}>Easy mode:</span>\n          <br />\n          Maze size is 5 X 5.\n        </li>\n        <li>\n          <span className={styles.gameModeName}>Medium mode:</span>\n          <br />\n          Maze size is 10 X 10.\n        </li>\n        <li>\n          <span className={styles.gameModeName}>Hard mode</span>\n          <br />\n          Maze size is 15 X 15. You will enter the maze in Dark mode.\n        </li>\n        <li>\n          <span className={styles.gameModeName}>Pure Maze mode</span>\n          <br />\n          Maze size is 20 X 20, no random events, no time limits and hp limits,\n          you can toggle on/off dark mode and minimap at any time. This is to\n          offer a pure maze wondering pleasure.\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default GameModeDescription;\n","export default __webpack_public_path__ + \"static/media/miniMap.763b6727.png\";","import React from \"react\";\nimport miniMapIcon from \"../images/mapicon.png\";\nimport miniMap from \"../images/miniMap.png\";\nimport styles from \"../containers/guide.module.css\";\n\nconst MiniMapEventDescription = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.liHeaderContainer}>\n        <p className={styles.liHeader}>\n          <span className={styles.liHeaderText}> Minimap ON/OFF </span>{\" \"}\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <img\n            className={styles.eventIcon}\n            src={miniMapIcon}\n            alt=\"miniMap Icon\"\n          />\n          <br />\n        </p>\n      </div>\n      <p className={styles.eventDetail}>\n        When you see this icon, It means the Mini Map has been shown for you.\n        You can see the map of the maze on the top left. Like this:\n        <br />\n        <span>\n          <img\n            className={`${styles.eventPicture} ${styles.mimiMapEventPicture}`}\n            src={miniMap}\n            alt=\"MiniMap\"\n          />\n        </span>\n      </p>\n    </React.Fragment>\n  );\n};\n\nexport default MiniMapEventDescription;\n","export default __webpack_public_path__ + \"static/media/darkMode.d01dbca6.png\";","import React from \"react\";\nimport darkModeIcon from \"../images/night.png\";\nimport brightModeIcon from \"../images/sun.png\";\nimport darkModePicture from \"../images/darkMode.png\";\nimport styles from \"../containers/guide.module.css\";\n\nconst DarkModeEventDescription = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.liHeaderContainer}>\n        <p className={styles.liHeader}>\n          <span className={styles.liHeaderText}>Dark/Bright Mode ON/OFF</span>{\" \"}\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <img\n            className={styles.eventIcon}\n            src={darkModeIcon}\n            alt=\"dark mode Icon\"\n          />\n          <img\n            className={styles.eventIcon}\n            src={brightModeIcon}\n            alt=\"bright mode Icon\"\n          />\n          <br />\n        </p>\n      </div>\n      <p className={styles.eventDetail}>\n        When you see these icon, It means the dark mode or bright mode has been\n        enabled. These effects will immediately apply. For example, when you\n        invoke the dark mode, your game view will be like this:\n        <br />\n        <span>\n          <img\n            className={styles.eventPicture}\n            src={darkModePicture}\n            alt=\"MiniMap\"\n          />\n        </span>\n      </p>\n    </React.Fragment>\n  );\n};\n\nexport default DarkModeEventDescription;\n","import React from \"react\";\nimport speedUpIcon from \"../images/rocket.png\";\nimport speedDownIcon from \"../images/turtleicon.png\";\nimport styles from \"../containers/guide.module.css\";\n\nconst SpeedChangeEventDescription = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.liHeaderContainer}>\n        <p className={styles.liHeader}>\n          <span className={styles.liHeaderText}> Speed Up/Down ON/OFF </span>{\" \"}\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <img\n            className={styles.eventIcon}\n            src={speedUpIcon}\n            alt=\"speed up Icon\"\n          />\n          <img\n            className={styles.eventIcon}\n            src={speedDownIcon}\n            alt=\"speed down Icon\"\n          />\n          <br />\n        </p>\n      </div>\n      <p className={styles.eventDetail}>\n        When you see these icon, It means the some change have been applied to\n        your moving speed. These effects will immediately apply.\n      </p>\n    </React.Fragment>\n  );\n};\n\nexport default SpeedChangeEventDescription;\n","import React from \"react\";\nimport heartIcon from \"../images/heart-icon.png\";\nimport styles from \"../containers/guide.module.css\";\n\n// Help info in the guide page about the HP change\nconst HPChangeEventDescription = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.liHeaderContainer}>\n        <p className={styles.liHeader}>\n          <span className={styles.liHeaderText}>HP Gain/Lose</span>\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <img className={styles.eventIcon} src={heartIcon} alt=\"heart Icon\" />\n          <br />\n        </p>\n      </div>\n      <p className={styles.eventDetail}>\n        You might also invoke some events related to the change of your HP. Some\n        of them will be positive, however, some won't. Keep an eye on the your\n        health during the game!\n      </p>\n    </React.Fragment>\n  );\n};\n\nexport default HPChangeEventDescription;\n","import React from \"react\";\nimport GameModeDescription from \"../components/GameModeDescription\";\nimport styles from \"./guide.module.css\";\nimport movesGuide from \"../images/movesGuide.png\";\nimport MiniMapEventDescription from \"../components/MiniMapEventDescription\";\nimport DarkModeEventDescription from \"../components/DarkModeEventDescription\";\nimport SpeedChangeEventDescription from \"../components/SpeedChangeEventDescription\";\nimport HPChangeEventDescription from \"../components/HPChangeEventDescription\";\nimport { useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\n\nconst Guide = () => {\n  const history = useHistory();\n  const handleGoBack = () => {\n    history.push(\"\");\n  };\n  const goBack = \"< Go Back\";\n\n  return (\n    <div className={styles.guide}>\n      <span\n        className={`${styles.goBackButton} ${styles.topGoBackButton}`}\n        onClick={() => handleGoBack()}\n      >\n        {goBack}\n      </span>\n\n      <div>\n        <h2 className={styles.bigHeader}>\n          Welcome! You have entered a dangerous maze !\n        </h2>\n        <span className={styles.plainText}>\n          The purpose of the game is to find the exit.\n        </span>\n      </div>\n      <div className={styles.description}>\n        <h3 className={styles.smallHeader}> How to play:</h3>\n        <ul className={styles.list}>\n          <li>\n            Use \"W\", \"A\", \"S\", \"D\" to move forward, left, backward, right.\n          </li>\n          <img className={styles.moveGuide} src={movesGuide} alt=\"move guide\" />\n        </ul>\n      </div>\n\n      <div className={styles.description}>\n        <h3 className={styles.smallHeader}> Tips:</h3>\n        <ul className={styles.list}>\n          <li>\n            During your exploration, your moves might invoke different kinds of\n            effects. Some of them are helpful, some of them are not. :)\n          </li>\n          <li>Keep an eye on your HP! If your HP went to 0, you fail!</li>\n          <li>Enjoy!</li>\n          <li>\n            Maybe you already know, but again, trying to go through the walls\n            directly won't work!\n          </li>\n        </ul>\n      </div>\n      <div className={styles.description}>\n        <h3 className={styles.smallHeader}>Effects you might invoke:</h3>\n        <ul className={styles.list}>\n          <li>\n            <MiniMapEventDescription />\n          </li>\n          <li>\n            <DarkModeEventDescription />\n          </li>\n          <li>\n            <SpeedChangeEventDescription />\n          </li>\n          <li>\n            <HPChangeEventDescription />\n          </li>\n        </ul>\n      </div>\n      <GameModeDescription />\n      <span\n        className={`${styles.goBackButton} ${styles.bottomGoBackButton}`}\n        onClick={() => handleGoBack()}\n      >\n        {goBack}\n      </span>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Guide;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { WelcomeScreens } from \"./Welcome\";\nimport styles from \"./welcome.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\n\nconst AboutPage = () => {\n  return (\n    <WelcomeScreens>\n      <div className={`${styles.options} ${styles.aboutPage}`}>\n        <ul className={styles.aboutList}>\n          <li>Author:</li>\n          <ul className={styles.authorList}>\n            <li>\n              Weijia Deng\n              <a\n                className={styles.personalWebsite}\n                href=\"https://weijiadeng.github.io/\"\n              >\n                <FontAwesomeIcon icon={faPaperPlane} size=\"xs\" />\n              </a>\n            </li>\n            <li>\n              Wenhua Yao\n              <a\n                className={styles.personalWebsite}\n                href=\"https://www.linkedin.com/in/wenhua-yao-569013189/\"\n              >\n                <FontAwesomeIcon icon={faPaperPlane} size=\"xs\" />\n              </a>\n            </li>\n          </ul>\n          <li>\n            Music used comes from{\" \"}\n            <a\n              className={styles.creditLink}\n              href=\"https://mixkit.co/free-sound-effects/game/\"\n            >\n              Mixkit\n            </a>\n          </li>\n          <li>Thank you for playing!</li>\n        </ul>\n        <NavLink to=\"/\" className={styles.buttons}>\n          Go back\n        </NavLink>\n      </div>\n    </WelcomeScreens>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Welcome } from \"./containers/Welcome\";\nimport { ModeSelection } from \"./containers/ModeSelection\";\nimport LabyrinthGame from \"./containers/LabyrinthGame\";\nimport Guide from \"./containers/Guide\";\nimport AboutPage from \"./containers/AboutPage\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Welcome />\n      </Route>\n      <Route exact path=\"/game\">\n        <ModeSelection />\n      </Route>\n      <Route exact path=\"/game/:gameMode\">\n        <LabyrinthGame />\n      </Route>\n      <Route exact path=\"/guide\">\n        <Guide />\n      </Route>\n      <Route exact path=\"/about\">\n        <AboutPage />\n      </Route>\n      ;{/* Finally, catch all unmatched routes */}\n      <Route>\n        <Welcome />\n      </Route>\n    </Switch>\n  );\n}\n","import Modal from \"react-modal\";\nimport BackgroundMusic from \"./commons/BackgroundMusic\";\nimport Routes from \"./Routes\";\n\nimport \"./styles.css\";\n\nModal.setAppElement(\"#root\");\n\nexport default function App() {\n  return (\n    <>\n      <BackgroundMusic />\n      <Routes />\n    </>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst INITIAL_HELPER_PAGE_SHOWN_STATUS = false;\n\nexport const helperPageSlice = createSlice({\n  name: \"helperPage\",\n  initialState: {\n    shown: INITIAL_HELPER_PAGE_SHOWN_STATUS,\n  },\n  reducers: {\n    toggleShown: (state) => {\n      state.shown = !state.shown;\n    },\n  },\n});\n\nexport const { toggleShown } = helperPageSlice.actions;\n\nexport const selectShown = (state) => state.helperPage.shown;\n\nexport default helperPageSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport controlReducer from \"./reducers/controlSlice\";\nimport elapseTimerReducer from \"./reducers/elapseTimerSlice\";\nimport backgroundMusicReducer from \"./reducers/backgroundMusicSlice\";\nimport playerStatusReducer from \"./reducers/playerStatusSlice\";\nimport popUpWindowReducer from \"./reducers/popUpWindowSlice\";\nimport leaderboardReducer from \"./reducers/leaderboardSlice\";\nimport helperPageReducer from \"./reducers/helperPageSlice\";\n\nexport default configureStore({\n  reducer: {\n    control: controlReducer,\n    elapseTimer: elapseTimerReducer,\n    backgroundMusic: backgroundMusicReducer,\n    playerStatus: playerStatusReducer,\n    popUpWindow: popUpWindowReducer,\n    leaderboard: leaderboardReducer,\n    helperPage: helperPageReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helperPage\":\"helperPage_helperPage__3CVt5\",\"moveGuide\":\"helperPage_moveGuide__30Pob\",\"operationDescription\":\"helperPage_operationDescription__nn3h2\",\"iconDescriptionContainer\":\"helperPage_iconDescriptionContainer__3KEOE\",\"eventIcon\":\"helperPage_eventIcon__2huNr\",\"plainText\":\"helperPage_plainText__DKd71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"welcome_container__p4cQA\",\"title\":\"welcome_title__1dzLW\",\"options\":\"welcome_options__3AWfN\",\"buttons\":\"welcome_buttons__kcjFU\",\"aboutPage\":\"welcome_aboutPage__nFBMW\",\"personalWebsite\":\"welcome_personalWebsite__3Ye7x\",\"aboutList\":\"welcome_aboutList__35xbZ\",\"authorList\":\"welcome_authorList__T8DOB\",\"creditLink\":\"welcome_creditLink__LkJfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"events_icon__1Sv9d\",\"negativeKeywords\":\"events_negativeKeywords__26kV5\",\"positiveKeywords\":\"events_positiveKeywords__3_vxF\",\"neutralKeywords\":\"events_neutralKeywords__j9eUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"playerStatusPanel_container__3gKUU\",\"progressBar\":\"playerStatusPanel_progressBar__2OczX\",\"icon\":\"playerStatusPanel_icon__LoCU4\",\"progressBarSection\":\"playerStatusPanel_progressBarSection__25ZUm\",\"filler\":\"playerStatusPanel_filler__A1WSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navPanelContainer\":\"navPanel_navPanelContainer__1vfli\",\"icon\":\"navPanel_icon__3X4Ey\",\"toggle\":\"navPanel_toggle__2X23e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelContainer\":\"gamePanel_panelContainer__2I-11\",\"forwardButton\":\"gamePanel_forwardButton__3wqGa\",\"backwardButton\":\"gamePanel_backwardButton__2mBmK\",\"turnLeftButton\":\"gamePanel_turnLeftButton__1neex\",\"turnRightButton\":\"gamePanel_turnRightButton__8HIPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"bigPopUpWindow_popup__3Y6BH\",\"overlay\":\"bigPopUpWindow_overlay__2vXM3\",\"backgroundPic\":\"bigPopUpWindow_backgroundPic__JlTZ5\",\"content\":\"bigPopUpWindow_content__3lEcr\",\"buttonsection\":\"bigPopUpWindow_buttonsection__DsooY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"miniMap_container__203Xp\",\"map\":\"miniMap_map__3sY0k\",\"broadRow\":\"miniMap_broadRow__ccNrJ\",\"square\":\"miniMap_square__z_h7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaderSection\":\"leaderboard_leaderSection__2u1-4\",\"leaderRow\":\"leaderboard_leaderRow__1Xvnk\",\"entry\":\"leaderboard_entry__3ArCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"elapseTimer_timer__3BFpc\",\"number\":\"elapseTimer_number__36Aia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"smallPopUpWindow_content__1_Cd_\",\"buttonsection\":\"smallPopUpWindow_buttonsection__1qAGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__13GXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasDiv\":\"labyrinthView_canvasDiv__1DGyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visContainer\":\"labyrinthGame_visContainer__Vqj_T\"};"],"sourceRoot":""}