{"version":3,"sources":["components/guide.module.css","components/Footer.jsx","reducers/backgroundMusicSlice.js","components/Welcome.jsx","reducers/controlSlice.js","components/ModeSelection.jsx","music/mixkit-game-level-completed-2059.wav","music/mixkit-video-game-health-recharge-2837.wav","music/mixkit-negative-guitar-tone-2324.wav","music/mixkit-bonus-extra-in-a-video-game-2064.wav","music/mixkit-small-hit-in-a-game-2072.wav","music/mixkit-arcade-retro-jump-223.wav","music/mixkit-player-losing-or-failing-2042.wav","commons/SoundHooks.jsx","components/GamePanel.jsx","reducers/elapseTimerSlice.js","components/ElapseTimer.jsx","reducers/playerStatusSlice.js","components/LabyrinthCamera.jsx","commons/utils.js","components/Walls.jsx","components/LabyrinthView.jsx","reducers/popUpWindowSlice.js","components/BigPopUpWindow.jsx","components/SmallPopUpWindow.jsx","images/bigWindowBackground.png","reducers/leaderboardSlice.js","music/mixkit-game-level-music-689.wav","commons/BackgroundMusic.jsx","components/Leaderboard.jsx","components/EventManager.jsx","components/MiniMap.jsx","images/heart-icon.png","images/normalclock.png","images/outoftimeclock.png","images/mapicon.png","images/sun.png","images/night.png","images/rocket.png","images/turtleicon.png","components/PlayerStatusPanel.jsx","components/LabyrinthGame.jsx","components/GameModeDescription.jsx","images/movesGuide.png","images/miniMap.png","components/MiniMapEventDescription.jsx","images/darkMode.png","components/DarkModeEventDescription.jsx","components/SpeedChangeEventDescription.jsx","components/HPChangeEventDescription.jsx","components/Guide.jsx","Routes.jsx","App.js","reducers/helperPageSlice.js","store.js","index.js","components/helperPage.module.css","components/welcome.module.css","components/playerStatusPanel.module.css","components/gamePanel.module.css","components/bigPopUpWindow.module.css","components/miniMap.module.css","components/smallPopUpWindow.module.css","components/footer.module.css","components/labyrinthView.module.css","components/labyrinthGame.module.css"],"names":["module","exports","Footer","className","styles","footer","backgroundMusicSlice","createSlice","name","initialState","isPlaying","reducers","playBGM","state","playingBGM","stopBGM","stopedBGM","actions","selectIsPlaying","backgroundMusic","WelcomeScreens","props","disptach","useDispatch","isPlayBGM","useSelector","useEffect","container","title","children","Welcome","options","to","buttons","controlSlice","direction","posX","posZ","currentAction","isInit","wallTop","wallLeft","numX","numZ","lastMoveHitWall","isResetCamera","resetEvent","moveForward","moveBackward","resetLastMoveHitWall","turnLeft","turnRight","occurEvent","resetCurrentAction","assignResetEvent","action","payload","popEvent","assignPosX","assignPosZ","assignWallTop","assignWallLeft","assignNumX","assignNumZ","assignInit","assignResetCamera","selectDirection","control","selectPosX","selectPosZ","selectAction","selectIsInit","selectWallTop","selectWallLeft","selectLastMoveHitWall","selectIsResetCamera","selectResetEvent","ModeSelection","dispatch","history","useHistory","handleModeSelect","mode","push","onClick","useGameCompletionSound","useSound","GameCompletionSound","interrupt","volume","play","stop","usePositiveEffectSound","PositiveEffectSound","useNegativeEffectSound","NegativeEffectSound","useNeutralEffectSound","NeutralEffectSound","useGameOverSound","GameOverSound","useHitWallSound","HitWallSound","GamePanel","handleMoveForward","handleMoveBackward","handleTurnLeft","handleTurnRight","isPlayHitWall","document","addEventListener","event","key","panelContainer","forwardButton","icon","faChevronCircleUp","backwardButton","faChevronCircleDown","turnLeftButton","faChevronCircleLeft","turnRightButton","faChevronCircleRight","elapseTimerSlice","curNumSeconds","status","intervalHasSet","countUp","pauseCount","resumeCount","readyCount","resetCount","adjustCountByAmount","markIntervalSet","selectCurNumSeconds","elapseTimer","selectStatus","selectIntervalHasSet","ElapseTimer","setInterval","playerStatusSlice","HP","buff","debuff","speedModifier","decreaseHP","increaseHP","resetBuffAndDebuff","addABuff","removeABuff","addADebuff","removeADebuff","resetPlayerStatus","selectHP","playerStatus","selectBuff","selectDebuff","extend","TrackballControls","DIRECTION_ADJUSTER","LabyrinthCamera","blockWidth","startCoordX","startCoordZ","cameraInitCoordX","cameraInitCoordZ","moveSpeed","turnSpeed","useThree","camera","gl","controls","React","actualMoveSpeed","actualTurnSpeed","currentAngle","setCurrentAngle","localAngle","coordX","coordZ","useFrame","position","x","z","lookAt","Math","abs","rotateY","THREE","degToRad","updateProjectionMatrix","ref","args","domElement","dynamicDampingFactor","mouseButtons","LEFT","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","UnionFind","elementNum","this","partsCount","parent","Array","apply","length","map","Number","call","rank","index","left","right","leftRoot","find","rightRoot","partialApply","fn","bind","genRandomInt","max","floor","random","compareNumbers","a","b","getWallNeighbourCells","numCells","wallIndex","initLabyrinthWalls","numCellPlusBorder","unionFind","wallArray","resArray","i","currentPos","targetArray","j","tmp","shuffleArray","currentWall","neighborA","neighborB","union","fill","convertIndex","val","GenVerticalWall","width","height","depth","rotation","PI","color","attach","String","Walls","blockHeight","blockDepth","mazeWidth","mazeDepth","walls","LabyrinthView","darkModeIsOn","posCoordX","posCoordZ","ContextBridge","useContextBridge","ReactReduxContext","canvasDiv","fov","intensity","Sky","distance","sunPosition","inclination","azimuth","Stars","radius","count","factor","saturation","fade","rotation-x","opacity","INITIAL_PRESENSE","popUpWindowSlice","smallPopUpPresense","smallPopIsToOpen","bigPopUpPresense","bigPopUpIsToOpen","enableSmallPopUpPresense","disableSmallPopUpPresense","enableSmallPopUpIsToOpen","disableSmallPopUpIsToOpen","enableBigPopUpPresense","disableBigPopUpPresense","enableBigPopUpIsToOpen","disableBigPopUpIsToOpen","selectSmallPopUpPresense","popUpWindow","selectSmallPopUpIsToOpen","selectBigPopUpPresense","selectBigPopUpIsToOpen","BigPopUpWindow","isToOpen","isOpen","popup","overlayClassName","overlay","closeTimeoutMS","src","background","backgroundPic","alt","content","buttonsection","SmallPopUpWindow","handlePresenseChange","setTimeout","leaderboardSlice","list","appendToLeaderBoard","sort","pop","selectList","leaderboard","useBgmPlay","bgm","loop","BackgroundMusic","Fragment","LearderboardSection","leaderList","item","StartEventRender","startEventCallback","EndEventRender","time","hasAppend","useRef","console","log","current","FailGameEventRender","endEventCallback","strongWindEventCallBack","gameMode","StrongWindEventRender","smellyWindEventCallBack","debuffId","SmellyWindEventRender","specificEventContent","freshWindEventCallBack","buffId","FreshWindEventRender","Event","toRender","callBack","eventTypeId","initEventMap","eventMap","NUM_DEBUFF_TYPE","NUM_BUFF_TYPE","EventManager","discovered","isResetEvent","isGameFail","useState","setEventMap","currentRender","playGameCompletionSound","playPositiveEffectSound","playNegativeEffectSound","playNeutralEffectSound","playGameOverSound","currentIndex","currentCallback","MiniMap","miniMapIsOn","display","currentRow","square","style","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","border","broadRow","ProgressBar","progressBar","percentage","Filler","filler","PlayerStatusPanel","hp","clock","progressBarSection","heart","normalclock","outoftimeclock","buffSection","dayIcon","nightIcon","mapicon","rocket","turtleicon","LabyrinthGame","useParams","currentHP","currentCurNumSeconds","visContainer","GameModeDescription","description","smallHeader","gameModeName","MiniMapEventDescription","liHeaderContainer","liHeader","liHeaderText","eventIcon","miniMapIcon","eventDetail","eventPicture","mimiMapEventPicture","miniMap","DarkModeEventDescription","darkModeIcon","brightModeIcon","darkModePicture","SpeedChangeEventDescription","speedUpIcon","speedDownIcon","HPChangeEventDescription","heartIcon","Guide","handleGoBack","goBack","guide","goBackButton","topGoBackButton","bigHeader","plainText","moveGuide","movesGuide","Routes","exact","path","App","Modal","setAppElement","helperPageSlice","shown","toggleShown","configureStore","reducer","controlReducer","elapseTimerReducer","backgroundMusicReducer","playerStatusReducer","popUpWindowReducer","leaderboardReducer","helperPage","helperPageReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,UAAY,yBAAyB,aAAe,4BAA4B,oBAAsB,mCAAmC,kBAAoB,iCAAiC,YAAc,2BAA2B,UAAY,yBAAyB,YAAc,2BAA2B,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,aAAe,4BAA4B,aAAe,4BAA4B,YAAc,2BAA2B,gBAAkB,+BAA+B,aAAe,8B,2JCU5pBC,EARA,WACX,OACI,qBAAKC,UAAWC,IAAOC,OAAvB,sC,iCCEKC,EAAuBC,YAAY,CAC5CC,KAAM,kBACNC,aAAc,CACVC,UALe,GAOnBC,SAAU,CACNC,QAAS,SAAAC,GACLA,EAAMH,UAZQ,GAclBI,WAAY,SAAAD,GACRA,EAAMH,UAdK,GAgBfK,QAAS,SAAAF,GACLA,EAAMH,UAhBK,GAkBfM,UAAW,SAAAH,GACPA,EAAMH,UAlBK,M,EAyBnBJ,EAAqBW,QADrBL,E,EAAAA,QAASG,E,EAAAA,QAASD,E,EAAAA,WAAYE,E,EAAAA,UAGrBE,EAAkB,SAAAL,GAAK,OAAIA,EAAMM,gBAAgBT,WAG/CJ,IAAf,QC3BO,SAASc,EAAeC,GAC3B,IAAMC,EAAWC,cACXC,EAAYC,YAAYP,GAM9B,OALAQ,qBAAU,WDRS,ICSXF,GACAF,EAASP,QAIb,sBAAKZ,UAAWC,IAAOuB,UAAvB,UACI,oBAAIxB,UAAWC,IAAOwB,MAAtB,kBACCP,EAAMQ,SACP,cAAC,EAAD,OAIL,SAASC,IACZ,OACI,cAACV,EAAD,UACI,sBAAKjB,UAAWC,IAAO2B,QAAvB,UACI,cAAC,IAAD,CAASC,GAAG,QAAQ7B,UAAWC,IAAO6B,QAAtC,wBACA,cAAC,IAAD,CAASD,GAAG,SAAS7B,UAAWC,IAAO6B,QAAvC,mBACA,cAAC,IAAD,CAASD,GAAG,SAAS7B,UAAWC,IAAO6B,QAAvC,wBC5BT,IAWMC,EAAe3B,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZ0B,UAAW,EACXC,KAAM,EACNC,KAAM,EAENC,cAlBwB,EAmBxBC,QAAQ,EACRC,QAAS,GACTC,SAAU,GACVC,KAAM,EACNC,KAAM,EACNC,iBAAiB,EACjBC,eAAe,EACfC,YAAY,GAEdnC,SAAU,CACRoC,YAAa,SAAAlC,GACX,GAzBiB,IAyBbA,EAAMyB,cAER,OADAzB,EAAMyB,cA/Bc,EAgCZzB,EAAMsB,WACZ,KA3BQ,EA6BAtB,EAAMuB,MAAQ,GAAKvB,EAAMuB,MAAQvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM2B,QAAQ3B,EAAMuB,KAAOvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAGxJ7B,EAAM+B,iBAAkB,EAFxB/B,EAAMwB,MAAQ,EAIhB,MACF,KAlCW,EAmCHxB,EAAMuB,MAAQ,GAAKvB,EAAMuB,KAAOvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,KAAOxB,EAAM8B,MAAQ9B,EAAM4B,SAAS5B,EAAMuB,KAAO,EAAIvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAG3J7B,EAAM+B,iBAAkB,EAFxB/B,EAAMuB,MAAQ,EAIhB,MACF,KAxCU,EAyCFvB,EAAMuB,MAAQ,GAAKvB,EAAMuB,KAAOvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,KAAOxB,EAAM8B,MAAQ9B,EAAM2B,QAAQ3B,EAAMuB,MAAQvB,EAAMwB,KAAO,IAAMxB,EAAM6B,KAAO,IAG5J7B,EAAM+B,iBAAkB,EAFxB/B,EAAMwB,MAAQ,EAIhB,MACF,KA9CU,EA+CFxB,EAAMuB,MAAQ,GAAKvB,EAAMuB,MAAQvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM4B,SAAS5B,EAAMuB,KAAOvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAGzJ7B,EAAM+B,iBAAkB,EAFxB/B,EAAMuB,MAAQ,IAUxBY,aAAc,SAAAnC,GACZ,GA/DiB,IA+DbA,EAAMyB,cAER,OADAzB,EAAMyB,cAlEe,EAmEbzB,EAAMsB,WACZ,KAjEQ,EAkEAtB,EAAMuB,MAAQ,GAAKvB,EAAMuB,MAAQvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM2B,QAAQ3B,EAAMuB,MAAQvB,EAAMwB,KAAO,IAAMxB,EAAM6B,KAAO,IAG9J7B,EAAM+B,iBAAkB,EAFxB/B,EAAMwB,MAAQ,EAIhB,MACF,KAvEW,EAwEHxB,EAAMuB,MAAQ,GAAKvB,EAAMuB,KAAOvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM4B,SAAS5B,EAAMuB,KAAOvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAGxJ7B,EAAM+B,iBAAkB,EAFxB/B,EAAMuB,MAAQ,EAIhB,MACF,KA7EU,EA8EFvB,EAAMuB,MAAQ,GAAKvB,EAAMuB,KAAOvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM2B,QAAQ3B,EAAMuB,KAAOvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAGvJ7B,EAAM+B,iBAAkB,EAFxB/B,EAAMwB,MAAQ,EAIhB,MACF,KAnFU,EAoFFxB,EAAMuB,MAAQ,GAAKvB,EAAMuB,MAAQvB,EAAM6B,MAAQ7B,EAAMwB,MAAQ,GAAKxB,EAAMwB,MAAQxB,EAAM8B,MAAQ9B,EAAM4B,SAAS5B,EAAMuB,KAAO,EAAIvB,EAAMwB,MAAQxB,EAAM6B,KAAO,IAG7J7B,EAAM+B,iBAAkB,EAFxB/B,EAAMuB,MAAQ,IAUxBa,qBAAsB,SAAApC,GACpBA,EAAM+B,iBAAkB,GAE1BM,SAAU,SAAArC,GAtGS,IAuGbA,EAAMyB,gBACRzB,EAAMyB,cA5GW,EA6GjBzB,EAAMsB,WAAatB,EAAMsB,UAAY,GAAK,IAG9CgB,UAAW,SAAAtC,GA5GQ,IA6GbA,EAAMyB,gBACRzB,EAAMyB,cAjHY,EAkHlBzB,EAAMsB,YAActB,EAAMsB,UAAY,GAAK,EAAI,GAAK,IAGxDiB,WAAY,SAAAvC,GAlHO,IAmHbA,EAAMyB,gBACRzB,EAAMyB,cArHc,IAwHxBe,mBAAoB,SAAAxC,GAClBA,EAAMyB,cA7HgB,GA+HxBgB,iBAAkB,SAACzC,EAAO0C,GACxB1C,EAAMiC,WAAaS,EAAOC,SAE5BC,SAAU,SAAA5C,GACRA,EAAMyB,cA9HW,GAgInBoB,WAAY,SAAC7C,EAAO0C,GAClB1C,EAAMuB,KAAOmB,EAAOC,SAEtBG,WAAY,SAAC9C,EAAO0C,GAClB1C,EAAMwB,KAAOkB,EAAOC,SAEtBI,cAAe,SAAC/C,EAAO0C,GACrB1C,EAAM2B,QAAUe,EAAOC,SAEzBK,eAAgB,SAAChD,EAAO0C,GACtB1C,EAAM4B,SAAWc,EAAOC,SAE1BM,WAAY,SAACjD,EAAO0C,GAClB1C,EAAM6B,KAAOa,EAAOC,SAEtBO,WAAY,SAAClD,EAAO0C,GAClB1C,EAAM8B,KAAOY,EAAOC,SAEtBQ,WAAY,SAACnD,EAAO0C,GAClB1C,EAAM0B,OAASgB,EAAOC,SAExBS,kBAAmB,SAACpD,EAAO0C,GACzB1C,EAAMgC,cAAgBU,EAAOC,QACxBD,EAAOC,UACV3C,EAAMsB,UAvJI,O,EA+KdD,EAAajB,QAjBf8B,E,EAAAA,YACAC,E,EAAAA,aACAE,E,EAAAA,SACAC,E,EAAAA,UACAF,E,EAAAA,qBACAG,E,EAAAA,WACAK,E,EAAAA,SACAC,E,EAAAA,WACAC,E,EAAAA,WACAC,E,EAAAA,cACAC,E,EAAAA,eACAC,E,EAAAA,WACAC,E,EAAAA,WACAC,E,EAAAA,WACAC,E,EAAAA,kBACAZ,E,EAAAA,mBACAC,E,EAAAA,iBAGWY,EAAkB,SAAArD,GAAK,OAAIA,EAAMsD,QAAQhC,WACzCiC,EAAa,SAAAvD,GAAK,OAAIA,EAAMsD,QAAQ/B,MACpCiC,EAAa,SAAAxD,GAAK,OAAIA,EAAMsD,QAAQ9B,MACpCiC,EAAe,SAAAzD,GAAK,OAAIA,EAAMsD,QAAQ7B,eACtCiC,EAAe,SAAA1D,GAAK,OAAIA,EAAMsD,QAAQ5B,QACtCiC,EAAgB,SAAA3D,GAAK,OAAIA,EAAMsD,QAAQ3B,SACvCiC,GAAiB,SAAA5D,GAAK,OAAIA,EAAMsD,QAAQ1B,UAGxCiC,GAAwB,SAAA7D,GAAK,OAAIA,EAAMsD,QAAQvB,iBAC/C+B,GAAsB,SAAA9D,GAAK,OAAIA,EAAMsD,QAAQtB,eAC7C+B,GAAmB,SAAA/D,GAAK,OAAEA,EAAMsD,QAAQrB,YAEtCZ,KAAf,QC9LO,SAAS2C,GAAcxD,GAC1B,IAAMyD,EAAWvD,cACXwD,EAAUC,cAEVC,EAAmB,SAACC,GACtBJ,EAASd,GAAW,IACpBe,EAAQI,KAAK,SAAUD,IAG3B,OACI,cAAC9D,EAAD,UACI,sBAAKjB,UAAWC,IAAO2B,QAAvB,UACI,oBAAI5B,UAAWC,IAAO6B,QAASmD,QAAS,kBAAMH,EAAiB,SAA/D,kBACA,oBAAI9E,UAAWC,IAAO6B,QAASmD,QAAS,kBAAMH,EAAiB,WAA/D,oBACA,oBAAI9E,UAAWC,IAAO6B,QAASmD,QAAS,kBAAMH,EAAiB,SAA/D,kBACA,oBAAI9E,UAAWC,IAAO6B,QAASmD,QAAS,kBAAMH,EAAiB,SAA/D,uBACA,cAAC,IAAD,CAASjD,GAAG,IAAI7B,UAAWC,IAAO6B,QAAlC,0B,0CCxBD,OAA0B,6DCA1B,OAA0B,mECA1B,OAA0B,6DCA1B,OAA0B,oECA1B,ICAA,IDAA,IAA0B,6DEA1B,OAA0B,iECWlC,SAASoD,KAA0B,IAAD,EACZC,aAASC,GAAqB,CACnDC,WAAW,EACXC,OAAQ,MAHyB,oBAKrC,MAAO,CAAEC,KAL4B,KAKtBC,KALsB,KACtBA,MAOZ,SAASC,KAA0B,IAAD,EACZN,aAASO,GAAqB,CACnDL,WAAW,EACXC,OAAQ,MAHyB,oBAKrC,MAAO,CAAEC,KAL4B,KAKtBC,KALsB,KACtBA,MAOZ,SAASG,KAA0B,IAAD,EACZR,aAASS,GAAqB,CACnDP,WAAW,EACXC,OAAQ,MAHyB,oBAKrC,MAAO,CAAEC,KAL4B,KAKtBC,KALsB,KACtBA,MAQZ,SAASK,KAAyB,IAAD,EACXV,aAASW,GAAoB,CAClDT,WAAW,EACXC,OAAQ,MAHwB,oBAKpC,MAAO,CAAEC,KAL2B,KAKrBC,KALqB,KACrBA,MAcZ,SAASO,KAAoB,IAAD,EACNZ,aAASa,GAAe,CAC7CX,WAAW,EACXC,OAAQ,MAHmB,oBAK/B,MAAO,CAAEC,KALsB,KAKhBC,KALgB,KAChBA,MAOZ,SAASS,KAAmB,IAAD,EACLd,aAASe,GAAc,CAC5Cb,WAAW,EACXC,OAAQ,MAHkB,oBAK9B,MAAO,CAAEC,KALqB,KAKfC,KALe,KACfA,MAOnB,I,kBCpDO,SAASW,KAEd,IAAMxB,EAAWvD,cAEXgF,EAAoB,WACxBzB,EAAS/B,MAELyD,EAAqB,WACzB1B,EAAS9B,MAGLyD,EAAiB,WACrB3B,EAAS5B,MAELwD,EAAkB,WACtB5B,EAAS3B,MAuBLwD,EAAgBlF,YAAYiD,IAC1BgB,EAASU,KAATV,KASR,OARIiB,IACFjB,IACAZ,EAAS7B,MAGX2D,SAASC,iBAAiB,WA1BJ,SAACC,GACrB,OAAQA,EAAMC,KACZ,IAAK,IACHN,IACA,MACF,IAAK,IACHC,IACA,MACF,IAAK,IACHH,IACA,MACF,IAAK,IACHC,QAkBJ,sBAAKrG,UAAWC,KAAO4G,eAAvB,UACE,cAAC,KAAD,CAAiB7G,UAAWC,KAAO6G,cAAeC,KAAMC,KAAmB/B,QAAS,kBAAImB,OACxF,cAAC,KAAD,CAAiBpG,UAAWC,KAAOgH,eAAgBF,KAAMG,KAAsBjC,QAAS,kBAAIoB,OAC5F,cAAC,KAAD,CAAiBrG,UAAWC,KAAOkH,eAAgBJ,KAAMK,KAAqBnC,QAAS,kBAAIqB,OAC3F,cAAC,KAAD,CAAiBtG,UAAWC,KAAOoH,gBAAiBN,KAAMO,KAAsBrC,QAAS,kBAAIsB,UClE5F,IAKMgB,GAAmBnH,YAAY,CACxCC,KAAM,cACNC,aAAc,CACVkH,cAAe,EACfC,OATc,EAUdC,gBAAgB,GAEpBlH,SAAU,CACNmH,QAAS,SAAAjH,GAXM,IAYPA,EAAM+G,SACN/G,EAAM8G,eAAiB,IAG/BI,WAAY,SAAAlH,GACRA,EAAM+G,OAhBG,GAkBbI,YAAa,SAAAnH,GACTA,EAAM+G,OApBK,GAsBfK,WAAY,SAAApH,GACRA,EAAM+G,OAxBG,GA0BbM,WAAY,SAAArH,GACRA,EAAM8G,cAAgB,GAE1BQ,oBAAqB,SAACtH,EAAO0C,GACzB1C,EAAM8G,eAAiBpE,EAAOC,SAElC4E,gBAAiB,SAAAvH,GACbA,EAAMgH,gBAAiB,M,GAc/BH,GAAiBzG,QAPjB6G,G,GAAAA,QACAC,G,GAAAA,WACAC,G,GAAAA,YACAE,G,GAAAA,WACAD,G,GAAAA,WAEAG,I,GADAD,oB,GACAC,iBAGSC,GAAsB,SAAAxH,GAAK,OAAIA,EAAMyH,YAAYX,eACjDY,GAAe,SAAA1H,GAAK,OAAIA,EAAMyH,YAAYV,QAC1CY,GAAuB,SAAA3H,GAAK,OAAIA,EAAMyH,YAAYT,gBAGhDH,MAAf,QCpDe,SAASe,KACpB,IAAMb,EAASnG,YAAY8G,IACrBV,EAAiBpG,YAAY+G,IAC7B1D,EAAWvD,cAgBjB,ODrBiB,ICUbqG,IACA9C,EAASkD,MACJH,IACDa,aAPsB,WAC1B5D,EAASgD,QAM8B,KACnChD,EAASsD,QAQb,6B,sECbKO,GAAoBpI,YAAY,CACzCC,KAAM,eACNC,aAAc,CACVmI,GAbW,IAcXC,KAAM,EACNC,OAAQ,EACRC,cAAe,GAEnBpI,SAAU,CACNqI,WAAY,SAACnI,EAAO0C,GAChB1C,EAAM+H,IAAMrF,EAAOC,QACf3C,EAAM+H,GAAK,IACX/H,EAAM+H,GAAK,IAGnBK,WAAY,SAACpI,EAAO0C,GAzBT,MA0BH1C,EAAM+H,KAGV/H,EAAM+H,IAAMrF,EAAOC,UAEvB0F,mBAAoB,SAAArI,GAChBA,EAAMgI,KAAO,EACbhI,EAAMiI,OAAS,GAEnBK,SAAU,SAACtI,EAAO0C,GACd1C,EAAMgI,MAAQtF,EAAOC,SAEzB4F,YAAa,SAACvI,EAAO0C,GACjB1C,EAAMgI,OAAUtF,EAAOC,SAE3B6F,WAAY,SAACxI,EAAO0C,GAChB1C,EAAMiI,QAAUvF,EAAOC,SAE3B8F,cAAe,SAACzI,EAAO0C,GACnB1C,EAAMiI,SAAYvF,EAAOC,SAE7B+F,kBAAmB,SAAA1I,GACfA,EAAM+H,GAhDC,IAiDP/H,EAAMgI,KAAO,EACbhI,EAAMiI,OAAS,M,GAcvBH,GAAkB1H,QARlB+H,G,GAAAA,WACAC,G,GAAAA,WACAC,G,GAAAA,mBACAC,G,GAAAA,SACAC,G,GAAAA,YACAC,G,GAAAA,WACAC,G,GAAAA,cACAC,G,GAAAA,kBAGSC,GAAW,SAAA3I,GAAK,OAAIA,EAAM4I,aAAab,IACvCc,GAAa,SAAA7I,GAAK,OAAIA,EAAM4I,aAAaZ,MACzCc,GAAe,SAAA9I,GAAK,OAAIA,EAAM4I,aAAaX,QAEzCH,MAAf,QC5CAiB,aAAO,CAAEC,yBAGT,IAAMC,GAAqB,GAGdC,GAAkB,SAAC,GAQzB,IAPLC,EAOI,EAPJA,WACAC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,UACI,EACmBC,eAAfC,EADJ,EACIA,OAAQC,EADZ,EACYA,GACVC,EAAWC,WAEXrI,EAAgBb,YAAY6C,GAC5BlC,EAAOX,YAAY2C,GACnB/B,EAAOZ,YAAY4C,GACnBlC,EAAYV,YAAYyC,GACxB2E,EAAOpH,YAAYiI,IACnBZ,EAASrH,YAAYkI,IACvBZ,EAAgB,ED9CG,EC+CnBF,EACFE,EAtBmB,EDtBI,EC6CdD,IACTC,EAAgB,IAElB,IAAM6B,EAAkBP,EAAYtB,EAC9B8B,EAAkBP,EAAYvB,EAjBhC,EAmBoC4B,WAAe,GAnBnD,oBAmBGG,EAnBH,KAmBiBC,EAnBjB,KAoBAC,EAAaF,EAEXG,GAAWjB,EAAa,GAAK5H,EAAO,GAAK4H,EAAaC,EACtDiB,GAAWlB,EAAa,GAAK3H,EAAO,GAAK2H,EAAaE,EACtDrH,EAAgBpB,YAAYkD,IAE5BG,EAAWvD,cA+HjB,OA7HA4J,cAAS,WAUP,OALKtI,IACH2H,EAAOY,SAASC,EAAIlB,EACpBK,EAAOY,SAASE,EAAIlB,EACpBtF,EAASb,GAAkB,KAErB3B,GACN,Kd/EsB,EcgFpB,OAAQH,GACN,Kd3EQ,Ec4EFqI,EAAOY,SAASE,EAAIJ,IACtBV,EAAOY,SAASE,GAAKV,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAG,EAAGb,EAAOY,SAASE,EAAIxB,KAE1D,MACF,Kd9EU,Ec+EJU,EAAOY,SAASC,EAAIJ,IACtBT,EAAOY,SAASC,GAAKT,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAIvB,GAAoB,EAAGU,EAAOY,SAASE,IAE3E,MACF,KdrFU,EcsFJd,EAAOY,SAASE,EAAIJ,IACtBV,EAAOY,SAASE,GAAKV,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAG,EAAGb,EAAOY,SAASE,EAAIxB,KAE1D,MACF,Kd5FW,Ec6FLU,EAAOY,SAASC,EAAIJ,IACtBT,EAAOY,SAASC,GAAKT,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAIvB,GAAoB,EAAGU,EAAOY,SAASE,IAM3EE,KAAKC,IAAIjB,EAAOY,SAASC,EAAIJ,GAAUL,GACrCY,KAAKC,IAAIjB,EAAOY,SAASE,EAAIJ,GAAUN,IACzCJ,EAAOY,SAASC,EAAIJ,EACpBT,EAAOY,SAASE,EAAIJ,EACpBpG,EAASrB,MAGb,MACF,KdjHuB,EckHrB,OAAQtB,GACN,KdhHQ,EciHFqI,EAAOY,SAASE,EAAIJ,IACtBV,EAAOe,OAAOf,EAAOY,SAASC,EAAG,EAAGb,EAAOY,SAASE,EAAIxB,IACxDU,EAAOY,SAASE,GAAKV,GAEvB,MACF,KdnHU,EcoHJJ,EAAOY,SAASC,EAAIJ,IACtBT,EAAOY,SAASC,GAAKT,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAIvB,GAAoB,EAAGU,EAAOY,SAASE,IAE3E,MACF,Kd1HU,Ec2HJd,EAAOY,SAASE,EAAIJ,IACtBV,EAAOY,SAASE,GAAKV,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAG,EAAGb,EAAOY,SAASE,EAAIxB,KAE1D,MACF,KdjIW,EckILU,EAAOY,SAASC,EAAIJ,IACtBT,EAAOY,SAASC,GAAKT,EACrBJ,EAAOe,OAAOf,EAAOY,SAASC,EAAIvB,GAAoB,EAAGU,EAAOY,SAASE,IAM3EE,KAAKC,IAAIjB,EAAOY,SAASC,EAAIJ,GAAUL,GACrCY,KAAKC,IAAIjB,EAAOY,SAASE,EAAIJ,GAAUN,IACzCJ,EAAOY,SAASC,EAAIJ,EACpBT,EAAOY,SAASE,EAAIJ,EACpBpG,EAASrB,MAGb,MACF,KdxJmB,EcyJI,IAAjBqH,GAEFC,EADAC,EAAaF,EAAe,IAG1BE,EAAa,IACfR,EAAOkB,QAAQC,QAAWC,SAASf,IAEnCE,EADAC,GAAcH,IAGZW,KAAKC,IAAIT,GAAcH,IACzB/F,EAASrB,KACTsH,EAAgB,IAElB,MACF,KdtKoB,EcuKG,IAAjBD,IACFC,EAAgBD,EAAe,IAC/BE,EAAaF,EAAe,IAE1BE,EAAa,IACfR,EAAOkB,QAAQC,QAAWC,UAAUf,IAEpCE,EADAC,GAAcH,IAGZW,KAAKC,IAAIT,GAAcH,IACzB/F,EAASrB,KACTsH,EAAgB,IAUtBP,EAAOqB,4BAIP,mCACEC,IAAKpB,EACLqB,KAAM,CAACvB,EAAQC,EAAGuB,YAClBC,qBAAsB,GACtBC,aAAc,CACZC,KAAMR,SAAYS,IAClBC,OAAQV,SAAYW,KACpBC,MAAOZ,SAAYa,W,gBC1MdC,GAAb,WAKI,WAAYC,GAAa,qBACrBC,KAAKC,WAAaF,EAClBC,KAAKE,OAASC,MAAMC,MAAM,KAAM,CAAEC,OAAQN,IAAcO,IAAIC,OAAOC,KAAMD,QACzEP,KAAKS,KAAON,MAAMC,MAAM,EAAG,CAAEC,OAAQN,IAR7C,yCAYI,SAAKW,GACD,KAAOA,IAAUV,KAAKE,OAAOQ,IACzBV,KAAKE,OAAOQ,GAASV,KAAKE,OAAOF,KAAKE,OAAOQ,IAC7CA,EAAQV,KAAKE,OAAOQ,GAExB,OAAOA,IAjBf,mBAqBI,SAAMC,EAAMC,GACR,IAAMC,EAAWb,KAAKc,KAAKH,GACrBI,EAAYf,KAAKc,KAAKF,GACxBC,IAAaE,IAGjBf,KAAKC,YAAc,EACfD,KAAKS,KAAKI,GAAYb,KAAKS,KAAKM,GAChCf,KAAKE,OAAOW,GAAYE,EACjBf,KAAKS,KAAKI,GAAYb,KAAKS,KAAKM,GACvCf,KAAKE,OAAOa,GAAaF,GAEzBb,KAAKE,OAAOW,GAAYE,EACxBf,KAAKS,KAAKM,IAAc,QAlCpC,KAmDO,SAASC,GAAaC,GAAc,IAAD,uBAAN7B,EAAM,iCAANA,EAAM,kBAEtC,OAAO6B,EAAGC,KAAH,MAAAD,EAAE,CAAM,MAAN,OAAe7B,IAIrB,SAAS+B,GAAaC,GACzB,OAAOvC,KAAKwC,MAAMxC,KAAKyC,SAAWF,GAG/B,SAASG,GAAeC,EAAGC,GAC9B,OAAOD,EAAIC,EC5Cf,SAASC,GAAsB3L,EAAM4L,EAAUC,GAC7C,OAAIA,EAAYD,EAEP,CAACC,EAAY7L,EAAM6L,GAEnB,CAACA,EAAYD,EAAW,EAAGC,EAAYD,GAI3C,SAASE,GAAmB9L,EAAMC,GAYvC,IALA,IAAM2L,EAAW5L,EAAOC,EAClB8L,GAAqB/L,EAAK,IAAMC,EAAK,GACrC+L,EAAY,IAAIjC,GAAU6B,GAC5BK,EAAY,GACZC,EAAW,GACNC,EAAInM,EAAMmM,EAAIP,EAAUO,IAC/BF,EAAUxJ,KAAK0J,GAEjB,IAAK,IAAIA,EAAIP,EAAUO,EAAe,EAAXP,EAAcO,IACnCA,EAAInM,IAAS,GACfiM,EAAUxJ,KAAK0J,GAInB,IAAIC,GADJH,EDRK,SAAsBI,GAGzB,IADA,IACSF,EADME,EAAY/B,OACL,EAAG6B,EAAI,EAAGA,IAAK,CACjC,IAAIG,EAAIxD,KAAKwC,MAAMxC,KAAKyC,UAAYY,EAAI,IACpCI,EAAMF,EAAYF,GACtBE,EAAYF,GAAKE,EAAYC,GAC7BD,EAAYC,GAAKC,EAErB,OAAOF,ECDGG,CAAaP,IACE3B,OAAS,EAEpC,EAAG,CACD,IAAMmC,EAAcR,EAAUG,GAD7B,EAE8BT,GAC7B3L,EACA4L,EACAa,GALD,oBAEMC,EAFN,KAEiBC,EAFjB,KAOGX,EAAUjB,KAAK2B,KAAeV,EAAUjB,KAAK4B,GAC/CT,EAASzJ,KAAKgK,GAEdT,EAAUY,MAAMF,EAAWC,GAE7BP,GAAc,QACkB,IAAzBJ,EAAU9B,YACnB,KAAOkC,GAAc,GACnBF,EAASzJ,KAAKwJ,EAAUG,IACxBA,GAAc,EAKhB,IAFA,IAAMrM,EAAWqK,MAAMC,MAAM,KAAM,CAAEC,OAAQyB,IAAqBc,MAAK,GACjE/M,EAAUsK,MAAMC,MAAM,KAAM,CAAEC,OAAQyB,IAAqBc,MAAK,GAC7DV,EAAI,EAAGA,EAAInM,EAAMmM,IAExBrM,EAAQqM,IAAK,EAEbrM,EAAQqM,EAAIlM,GAAMD,EAAK,KAAM,EAE/B,IAAK,IAAImM,EAAI,EAAGA,EAAIlM,EAAMkM,IAExBpM,EAASoM,GAAKnM,EAAK,KAAM,EAEzBD,EAASoM,GAAKnM,EAAK,GAAKA,IAAQ,EAIlC,IADA,IAAM8M,EAAe,SAAAC,GAAG,SAAQA,EAAM/M,IAAQA,EAAK,GAAK+M,EAAI/M,GACnDmM,EAAI,EAAGA,EAAID,EAAS5B,OAAQ6B,IAC/BD,EAASC,GAAKP,EAChB9L,EAAQgN,EAAaZ,EAASC,MAAO,EAErCpM,EAAS+M,EAAaZ,EAASC,GAAKP,KAAa,EAQrD,OAJA7L,EAAS,IAAK,EACdA,EAASgM,EAAkB,IAAK,EAChCjM,EAAQiM,EAAkB,IAAK,EAC/BjM,EAAQiM,EAAkB,IAAK,EACxB,CAAChM,EAAUD,GAcpB,SAASkN,GAAgBrE,EAAGC,EAAGqE,EAAOC,EAAQC,GAC5C,OACE,cAAC,KAAD,CACE9D,KAAM,CAAC4D,EAAOC,EAAQC,GACtBC,SAAU,CAAC,EAAa,GAAVtE,KAAKuE,GAAU,GAC7B3E,SAAU,CAACC,EAAG,EAAGC,EAAIqE,EAAQ,GAH/B,SAIE,mCAAmBK,MAAM,SAASC,OAAO,cAJjCC,OAAO7E,GAAK,IAAM6E,OAAO5E,GAAK,QASrC,SAAS6E,GAAT,GAYL,IAFC,IAhCwB9E,EAAGC,EAAGqE,EAAOC,EAAQC,EAuB5CnN,EASF,EATEA,KACAC,EAQF,EAREA,KACAH,EAOF,EAPEA,QACAC,EAMF,EANEA,SACAuH,EAKF,EALEA,WACAoG,EAIF,EAJEA,YACAC,EAGF,EAHEA,WACAC,EAEF,EAFEA,UACAC,EACF,EADEA,UAEIC,EAAQ,GACL3B,EAAI,EAAGA,EAAInM,EAAK,EAAGmM,IAC1B,IAAK,IAAIG,EAAI,EAAGA,EAAIrM,EAAK,EAAGqM,IACtBxM,EAAQqM,GAAKnM,EAAK,GAAKsM,IACzBwB,EAAMrL,MArCakG,GAuCdiF,EAAU,EAAIzB,EAAI7E,EAAaqG,EAAa,EAvC3B/E,GAwCjBiF,EAAU,EAAIvB,EAAIhF,EAxCE2F,EAyCrB3F,EAAaqG,EAzCeT,EA0C5BQ,EA1CoCP,EA2CpCQ,EAzCR,cAAC,KAAD,CACEtE,KAAM,CAAC4D,EAAOC,EAAQC,GACtBC,SAAU,CAAC,EAAG,EAAG,GACjB1E,SAAU,CAACC,EAAIsE,EAAQ,EAAG,EAAGrE,GAH/B,SAIE,mCAAmB0E,MAAM,SAASC,OAAO,cAJjCC,OAAO7E,GAAK,IAAM6E,OAAO5E,GAAK,SA6ClC7I,EAASoM,GAAKnM,EAAK,GAAKsM,IAC1BwB,EAAMrL,KACJuK,IACGY,EAAU,EAAIzB,EAAI7E,GAClBuG,EAAU,EAAIvB,EAAIhF,EAAaqG,EAAa,EAC7CrG,EAAaqG,EACbD,EACAC,IAOV,OACE,uBAAO7P,KAAK,QAAZ,SACGgQ,I,wBC5JA,SAASC,GAAT,GAWH,IAVF/N,EAUC,EAVDA,KACAC,EASC,EATDA,KACAqH,EAQC,EARDA,WACAoG,EAOC,EAPDA,YACAC,EAMC,EANDA,WACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,UACA/N,EAGC,EAHDA,QACAC,EAEC,EAFDA,SACAiO,EACC,EADDA,aA8BMzG,GAAevH,EAAOsH,EAAa,EACnCE,GAAevH,EAAOqH,EAAa,EAEnC2G,GAAa3G,EAAa,EAAItH,EAAOsH,EAAaC,EAClD2G,GAAa5G,EAAa,GAAKrH,EAAO,GAAKqH,EAAaE,EAGxD2G,EAAgBC,aAAiBC,KACvC,OACE,qBAAK5Q,UAAWC,KAAO4Q,UAAvB,SACE,eAAC,KAAD,CAAQxG,OAAQ,CACdyG,IAAK,GAAI7F,SAAU,CAACuF,EAAW,EAAGC,EAAY5G,IADhD,UAGE,cAAC6G,EAAD,UACE,cAAC,GAAD,CACE7G,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,iBAAkBwG,EAClBvG,iBAAkBwG,EAClBvG,UAAW,GACXC,UAAW,MAGf,8BAAc0F,MAAM,UAAUkB,UAAW,KAIxCR,EAAe,KAAO,kCACrBtF,SAAU,EAAE,IAAK,GAAIlB,EAAcF,EAAa,GAChDkH,UAAW,MAEb,cAACf,GAAD,CACEzN,KAAMA,EACNC,KAAMA,EACNH,QAASA,EACTC,SAAUA,EACVuH,WAAYA,EACZoG,YAAaA,EACbC,WAAYA,EACZC,UAAWA,EACXC,UAAWA,IAEZG,EAAe,KAAO,cAACS,GAAA,EAAD,CACrBC,SAAU,IAGVC,YAAa,EAAE,IAAKjB,EAAalG,EAAcF,EAAa,GAC5DsH,YAAa,EACbC,QAAS,MAGX,cAACC,GAAA,EAAD,CACEC,OAAoB,EAAZnB,EACRT,MAAO,GACP6B,MAAO,IACPC,OAAcjP,EAAO,EAAb,GACRkP,WAAY,EACZC,MAAI,IAEN,cAAC,KAAD,CAAOC,cAAatG,KAAKuE,GAAK,EAAG3E,SAAU,CAAC,GAAIgF,EAAc,EAAG,GAAIrE,KAAM,CAACuE,EAAWC,EAAW,EAAG,GAArG,SACE,mCAAmBN,OAAO,WAAW8B,QAAS,GAAK/B,MAAM,cAE1DU,EAAe,qBAAKT,OAAO,MAAMlE,KAAM,CAAC,QAAS,EAAG/B,KAAkB,UC7G/E,IAAMgI,IAAmB,EACZC,GAAmB1R,YAAY,CACxCC,KAAM,cACNC,aAAc,CACVyR,mBAAoBF,GACpBG,iBAAkBH,GAClBI,iBAAkBJ,GAClBK,iBAAkBL,IAEtBrR,SAAU,CACN2R,yBAA0B,SAAAzR,GACtBA,EAAMqR,oBAAqB,GAE/BK,0BAA2B,SAAA1R,GACvBA,EAAMqR,oBAAqB,GAE/BM,yBAA0B,SAAA3R,GACtBA,EAAMsR,kBAAmB,GAE7BM,0BAA2B,SAAA5R,GACvBA,EAAMsR,kBAAmB,GAE7BO,uBAAwB,SAAA7R,GACpBA,EAAMuR,kBAAmB,GAE7BO,wBAAyB,SAAA9R,GACrBA,EAAMuR,kBAAmB,GAE7BQ,uBAAwB,SAAA/R,GACpBA,EAAMwR,kBAAmB,GAE7BQ,wBAAyB,SAAAhS,GACrBA,EAAMwR,kBAAmB,M,GAcjCJ,GAAiBhR,QARjBqR,G,GAAAA,yBACAC,G,GAAAA,0BACAC,G,GAAAA,yBACAC,G,GAAAA,0BACAC,G,GAAAA,uBACAC,G,GAAAA,wBACAC,G,GAAAA,uBACAC,G,GAAAA,wBAGSC,GAA2B,SAAAjS,GAAK,OAAIA,EAAMkS,YAAYb,oBACtDc,GAA2B,SAAAnS,GAAK,OAAIA,EAAMkS,YAAYZ,kBACtDc,GAAyB,SAAApS,GAAK,OAAIA,EAAMkS,YAAYX,kBACpDc,GAAyB,SAAArS,GAAK,OAAIA,EAAMkS,YAAYV,kBAGlDJ,MAAf,Q,oBCXekB,GArCQ,SAAC9R,GACpB,IAAMyD,EAAWvD,cACX6R,EAAW3R,YAAYyR,IAC7BxR,qBAAU,WACF0R,IACAtO,EAAS4N,MACT5N,EAAS1B,KACT0B,EAAS+N,UAIjB,IAAMQ,EAAS5R,YAAYwR,IAO3B,OANAvR,qBAAU,WACF2R,GACAvO,EAASiD,SAKb,eAAC,IAAD,CACIsL,OAAQA,EACRlT,UAAWC,KAAOkT,MAClBC,iBAAkBnT,KAAOoT,QACzBC,eAAgB,IAJpB,UAKI,qBAAKC,IAAKrS,EAAMsS,WAAYxT,UAAWC,KAAOwT,cAAeC,IAAK,KAElE,sBAAK1T,UAAWC,KAAO0T,QAAvB,UAEKzS,EAAMQ,SACP,qBAAK1B,UAAWC,KAAO2T,cAAvB,SACK1S,EAAMY,iB,oBCFZ+R,GA7BU,SAAC3S,GACtB,IAAMyD,EAAWvD,cACX6R,EAAW3R,YAAYuR,IAC7BtR,qBAAU,WACF0R,IACAtO,EAASwN,MACTxN,EAAS2N,UAGjB,IAAMwB,EAAuB,WACzBnP,EAASyN,OAQb,OALA7Q,qBAAU,WACNwS,WAAWD,EAAsB,QAEtBxS,YAAYqR,KAIvB,sBAAK3S,UAAWC,KAAO0T,QAAvB,UACKzS,EAAMQ,SACP,qBAAK1B,UAAWC,KAAO2T,cAAvB,SACK1S,EAAMY,cC9BR,OAA0B,gDCG5BkS,GAAmB5T,YAAY,CACxCC,KAAM,cACNC,aAAc,CACV2T,KAAM,IAEVzT,SAAU,CACN0T,oBAAqB,SAACxT,EAAO0C,GACzB1C,EAAMuT,KAAKjP,KAAK5B,EAAOC,SACvB3C,EAAMuT,KAAKE,KAAKpG,IACZrN,EAAMuT,KAAKpH,OAAS,IACpBnM,EAAMuT,KAAKG,UAOvBF,GACAF,GAAiBlT,QADjBoT,oBAGSG,GAAa,SAAA3T,GAAK,OAAIA,EAAM4T,YAAYL,MAGtCD,MAAf,QC1Be,OAA0B,wDCOlC,SAASO,KAAc,IAAD,EACApP,aAASqP,GAAK,CACnCnP,WAAW,EACXC,OAAQ,IACRmP,MAAM,IAJe,oBAMzB,MAAO,CAAElP,KANgB,KAMVC,KANU,KACVA,MAQZ,IAAMkP,GAAkB,WAAO,IAAD,EACVH,KAAfhP,EADyB,EACzBA,KAAMC,EADmB,EACnBA,KACRjF,EAAYe,YAAYP,GACxB4D,EAAWvD,cAWjB,OAVAG,qBAAU,W1BlBY,I0BmBdhB,IACAgF,IACAZ,EAAShE,M1BnBE,I0BqBXJ,IACAiF,IACAb,EAAS9D,SAIb,cAAC,IAAM8T,SAAP,KC5BD,SAASC,GAAoB1T,GAChC,IAAM2T,EAAavT,YAAY+S,IAC/B,OAAO,8BACFQ,EAAW/H,KAAI,SAACgI,EAAM5H,GAAP,OAAkB,8BAAM4H,SC8ChD,SAASC,KACP,IAAMpQ,EAAWvD,cACXU,EAAW,qBAAKmD,QAAS,WAC7BN,EAASkD,MACTlD,EAASrB,KACTqB,EAAS6N,OAHM,uBAKjB,OAAQ,eAAC,GAAD,CAAgB1Q,QAASA,EAAS0R,WAAYA,GAA9C,UACN,mDACA,0EAIJ,SAASwB,GAAmBrQ,GAC1BA,EAASmD,MAGX,SAASmN,KACP,IAAMC,EAAO5T,YAAY4G,IACnBiN,EAAYC,kBAAO,GACnBzQ,EAAWvD,cACjBiU,QAAQC,IAAIH,EAAUI,SACtBhU,qBAAU,WACH4T,EAAUI,UACbF,QAAQC,IAAI,YACZ3Q,EAASuP,GAAoBgB,IAC7BC,EAAUI,SAAU,MAGxB,IAAMzT,EACJ,eAAC,IAAM6S,SAAP,WACE,qBAAK1P,QAAS,WACZN,EAASrB,KACTqB,EAASyE,MACTzE,EAASoD,MACTpD,EAASd,GAAW,IACpBc,EAAS6N,OALX,+BAQA,2DAIJ,OAAQ,eAAC,GAAD,CAAgB1Q,QAASA,EAAS0R,WAAYA,GAA9C,UACN,2CACA,iEAAoC0B,EAApC,eACA,cAACN,GAAD,OAIJ,SAASY,KACP,IAAM7Q,EAAWvD,cACXU,EACJ,eAAC,IAAM6S,SAAP,WACE,qBAAK1P,QAAS,WACZN,EAASrB,KACTqB,EAASyE,MACTzE,EAASoD,MACTpD,EAASd,GAAW,IACpBc,EAAS6N,OALX,yBAQA,2DAIJ,OAAQ,eAAC,GAAD,CAAgB1Q,QAASA,EAAS0R,WAAYA,GAA9C,UACN,uCACA,8FAKJ,SAASiC,GAAiB9Q,EAAUY,GAClCA,IACAZ,EAASiD,IACTjD,EAASrB,GAKX,SAASoS,GAAwB/Q,EAAUY,EAAMoQ,GAC/CpQ,IACAZ,EAASoE,MACQ,SAAb4M,GACFhR,EAASqE,GbhIiB,IaiI1BrE,EAASwE,GbrIgB,IasIzBxE,EAASqE,GbvIe,IawIxBrE,EAASwE,GbpIgB,KaqIH,SAAbwM,IACThR,EAASuE,GbzIgB,Ia0IzBvE,EAASsE,GbtIiB,IauI1BtE,EAASuE,GbxIgB,IayIzBvE,EAASsE,Gb7Ie,KaiJ5B,SAAS2M,KACP,OACE,eAAC,GAAD,WACE,sCACA,qEACA,8DAQN,SAASC,GAAwBC,EAAUnR,EAAUY,GAGnD,OAFAA,IAEQuQ,GACN,KAtIiB,EAuIfnR,EAASuE,GblKc,IamKvBvE,EAASsE,Gb/Je,IagKxB,MACF,KAzIkB,EA0IhBtE,EAASuE,GbjKY,IakKrBvE,EAASsE,GbtKU,IauKnB,MACF,KA5IkB,EA6IhBtE,EAASuE,GbvKc,IawKvBvE,EAASsE,Gb5Ka,Ia6KtB,MACF,KA/ImB,EAgJjBtE,EAASkE,GAAW,MAO1B,SAASkN,GAAT,GAA8C,IACxCC,EAAuB,KAC3B,OAF2C,EAAZF,UAG7B,KA7JiB,EA8JfE,EAAuB,mBACvB,MACF,KA/JkB,EAgKhBA,EAAuB,6BACvB,MACF,KAjKkB,EAkKhBA,EAAuB,oBACvB,MACF,KAnKmB,EAoKjBA,EAAuB,mBAK3B,OAAQ,eAAC,GAAD,WACN,wCACA,2DACA,8BAAMA,OAMV,SAASC,GAAuBC,EAAQvR,EAAUY,GAGhD,OAFAA,IAEQ2Q,GACN,KAnLmB,EAoLjBvR,EAASqE,GbjNe,IakNxBrE,EAASwE,GbtNc,IauNvB,MACF,KAtLgB,EAuLdxE,EAASqE,GbxNU,IayNnBrE,EAASwE,GbrNY,IasNrB,MACF,KAzLkB,EA0LhBxE,EAASqE,Gb9Na,Ia+NtBrE,EAASwE,Gb3Nc,Ia4NvB,MACF,KA5LiB,EA6LfxE,EAASmE,GAAW,MAO1B,SAASqN,GAAT,GAA2C,IACrCH,EAAuB,KAC3B,OAFwC,EAAVE,QAG5B,KA1MmB,EA2MjBF,EAAuB,qBACvB,MACF,KA5MgB,EA6MdA,EAAuB,oBACvB,MACF,KA9MkB,EA+MhBA,EAAuB,6BACvB,MACF,KAhNiB,EAiNfA,EAAuB,kBAK3B,OAAQ,eAAC,GAAD,WACN,wCACA,+EACA,8BAAMA,O,IAIJI,GACJ,WAAYC,EAAUC,EAAUC,GAAc,qBAC5C/J,KAAK6J,SAAWA,EAChB7J,KAAK8J,SAAWA,EAChB9J,KAAK+J,YAAcA,GAIvB,SAASC,GAAajU,EAAMC,EAAMmT,GAEhC,IAAMc,EAAW9J,MAAMpK,EAAOC,EAAO,GAAG4M,KAAK,MAI7C,GAHAqH,EAASlU,GAAQC,EAAO,GAAKD,EAAO,GAAK,IAAI6T,GAAM,cAACrB,GAAD,IAAsBC,GArOlD,GAsOvByB,EAAS,GAAK,IAAIL,GAAM,cAACnB,GAAD,IAAoBQ,GArOvB,GAsOrBgB,EAASlU,EAAOC,EAAO,GAAK,IAAI4T,GAAM,cAACZ,GAAD,IAAyBC,GAjOzC,GAkOL,SAAbE,EACF,IAAK,IAAIjH,EAAInM,GAAQC,EAAO,GAAKD,EAAO,EAAGmM,EAAI,EAAGA,IAAK,CAErD,OADgBf,GA3OC,IA6Of,KAzOsB,EA0OpB,GAAiB,SAAbgI,EAAqB,CACvB,IAAMG,EAAWnI,GAAa+I,GAC9BD,EAAS/H,GAAK,IAAI0H,GAAM,cAACL,GAAD,CAAuBD,SAAUA,IAActI,GAAaqI,GAAyBC,GA5O3F,GA8OpB,MACF,KAhPsB,EAiPpB,GAAiB,SAAbH,EAAqB,CACvB,IAAMO,EAASvI,GAAagJ,GAC5BF,EAAS/H,GAAK,IAAI0H,GAAM,cAACD,GAAD,CAAsBD,OAAQA,IAAY1I,GAAayI,GAAwBC,GAnPrF,GAqPpB,MACF,KApPqB,EAqPnBO,EAAS/H,GAAK,IAAI0H,GAAM,cAACR,GAAD,IAA2BF,GArPhC,IA4P3B,OAAOe,EAGF,SAASG,GAAT,GAAkH,IAA1FC,EAAyF,EAAzFA,WAAY5U,EAA6E,EAA7EA,KAAMC,EAAuE,EAAvEA,KAAMK,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,KAAML,EAAqD,EAArDA,cAAe2U,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,WAAYpB,EAAY,EAAZA,SAAY,EACtFqB,mBAASR,GAAajU,EAAMC,EAAMmT,IADoD,oBAC/Gc,EAD+G,KACrGQ,EADqG,KAGhHC,EAAgB9B,iBAAO,MACvBzQ,EAAWvD,cACjBG,qBAAU,WACJuV,IACFG,EAAYT,GAAajU,EAAMC,EAAMmT,IACrChR,EAASxB,GAAiB,QARwF,IAWxGgU,EAA4BjS,KAAlCK,KACM6R,EAA4B3R,KAAlCF,KACM8R,EAA4B1R,KAAlCJ,KACM+R,EAA2BzR,KAAjCN,KAKMgS,GAJGhD,KAAThP,KAI4BQ,KAA5BR,MAEJiS,EAAetV,EAAOK,EAAON,EAE7B8U,IACFS,EAAejV,EAAOC,EAAO,GAG/B,IAAIiV,EAAkB,aAOtB,I1B1UqB,I0B0UjBtV,G1B3UsB,I0B2UOA,IAC3BsU,EAASe,KACNX,EAAWtB,QAAQiC,GAAe,CAAC,IAAD,EACOf,EAASe,GAA7CnB,EAD6B,EAC7BA,SAAUC,EADmB,EACnBA,SAAUC,EADS,EACTA,YAO5B,OALAW,EAAc3B,QAAUc,EAKhBE,GACN,KAhTe,EAiTbkB,EAAkB,WAAQnB,EAAS3R,GAAWA,EAASlE,KAAYkE,EAAS8N,OAC5E,MACF,KAlTa,EAoTXgF,EAAkB,WAAQnB,EAAS3R,EAAUwS,GAA0BxS,EAAS/D,KAAY+D,EAAS8N,OACrG,MACF,KArToB,EAsTlBgF,EAAkB,WAAQnB,EAAS3R,EAAUyS,GAA0BzS,EAAS0N,OAChF,MACF,KAvToB,EAwTlBoF,EAAkB,WAAQnB,EAAS3R,EAAU0S,GAA0B1S,EAAS0N,OAChF,MACF,KAzTmB,EA0TjBoF,EAAkB,WAAQnB,EAAS3R,EAAU2S,EAAwB3B,GAAWhR,EAAS0N,OACzF,MACF,KA1Tc,EA2TZoF,EAAkB,WAAQnB,EAAS3R,EAAU4S,GAAoB5S,EAAS/D,KAAY+D,EAAS8N,QAgBzG,OAJAlR,qBAAU,WACRkW,I1BnXmB,I0BqUftV,IACF0U,EAAWtB,QAAQiC,IAAgB,MAgDhCN,EAAc3B,Q,wBCxXhB,SAASmC,GAAT,GAWH,IAFA,IARAb,EAQD,EARCA,WACAtU,EAOD,EAPCA,KACAC,EAMD,EANCA,KACAP,EAKD,EALCA,KACAC,EAID,EAJCA,KACAI,EAGD,EAHCA,SACAD,EAED,EAFCA,QACAsV,EACD,EADCA,YAEMC,EAAU,GACPlJ,EAAI,EAAGA,EAAIlM,EAAMkM,IAAK,CAE3B,IADA,IAAImJ,EAAa,GACRhJ,EAAI,EAAGA,EAAItM,EAAMsM,IAClBgI,EAAWtB,QAAQ7G,EAAInM,EAAOsM,IAAO5M,IAAS4M,GAAK3M,IAASwM,EAC5DmJ,EAAW7S,KACP,wBAAQhF,UAAWC,KAAO6X,OACtBC,MAAO,CACHC,UAAW3V,EAAQqM,GAAKnM,EAAO,GAAKsM,GAAK,oBAAsB,wCAC/DoJ,WAAY3V,EAASoM,GAAKnM,EAAO,GAAKsM,GAAK,oBAAsB,wCACjEqJ,aAAc7V,GAASqM,EAAI,IAAMnM,EAAO,GAAKsM,GAAK,oBAAsB,wCACxEsJ,YAAa7V,EAASoM,GAAKnM,EAAO,GAAKsM,EAAI,GAAK,oBAAsB,wCACtEuJ,gBAAkBnW,IAAS4M,GAAK3M,IAASwM,EAAK,oBAAsB,6BANrCqB,OAAOrB,GAAK,IAAMqB,OAAOlB,KAYpEgJ,EAAW7S,KACP,wBAAQhF,UAAWC,KAAO6X,OACtBC,MAAO,CACHM,OAAQ,iCACRD,gBAAiB,uBAHcrI,OAAOrB,GAAK,IAAMqB,OAAOlB,KAS5E+I,EAAQ5S,KAAK,qBAAKhF,UAAWC,KAAOqY,SAAvB,SAA6DT,GAAvB,SAAW9H,OAAOrB,KAGzE,OACI,sBAAK1O,UAAWC,KAAOuB,UAAvB,UACI,wBACA,qBAAKxB,UAAWC,KAAO6M,IAAvB,SACK6K,EAAcC,EAAU,U,wBClD1B,OAA0B,uCCA1B,OAA0B,wCCA1B,OAA0B,2CCA1B,OAA0B,oCCA1B,OAA0B,gCCA1B,OAA0B,kCCA1B,OAA0B,mCCA1B,OAA0B,uCCuBnCW,GAAc,SAACrX,GACjB,OACI,qBAAKlB,UAAWC,KAAOuY,YAAvB,SACI,cAAC,GAAD,CAAQC,WAAYvX,EAAMuX,WAAY5I,MAAO3O,EAAM2O,WAKzD6I,GAAS,SAACxX,GACZ,OAAO,qBAAKlB,UAAWC,KAAO0Y,OAAQZ,MAAO,CAAEvI,MAAM,GAAD,OAAKtO,EAAMuX,WAAX,KAA0BjF,WAAYtS,EAAM2O,UA2BrF+I,GAvBW,SAAC,GAAoB,IAAnBlQ,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACxBkQ,EAAKvX,YAAY+H,IACjByP,EAAQ,IAAMxX,YAAY4G,IAChC,OACI,sBAAKlI,UAAWC,KAAOuB,UAAvB,UACI,sBAAKxB,UAAWC,KAAO8Y,mBAAvB,UACI,qBAAK/Y,UAAWC,KAAO8G,KAAMwM,IAAKyF,GAAOtF,IAAI,OAC7C,cAAC,GAAD,CAAa+E,WAAYI,OAE7B,sBAAK7Y,UAAWC,KAAO8Y,mBAAvB,UACI,qBAAK/Y,UAAWC,KAAO8G,KAAMwM,IAAKuF,EAAQ,GAAKG,GAAcC,GAAgBxF,IAAI,mBACjF,cAAC,GAAD,CAAa+E,WAAYK,EAAOjJ,MAAM,YAE1C,sBAAK7P,UAAWC,KAAOkZ,YAAvB,UACI,qBAAKnZ,UAAWC,KAAO8G,KAAMwM,IvBzCf,EuByCoB7K,EAAuB0Q,GAAUC,GAAW3F,IAAI,avB9CtE,EuB+CXhL,EAAqB,qBAAK1I,UAAWC,KAAO8G,KAAMwM,IAAK+F,GAAS5F,IAAI,iBAAoB,KvB7ChF,EuB8CRhL,EAAkB,qBAAK1I,UAAWC,KAAO8G,KAAMwM,IAAKgG,GAAQ7F,IAAI,aAAgB,KvB1CtE,EuB2CV/K,EAAsB,qBAAK3I,UAAWC,KAAO8G,KAAMwM,IAAKiG,GAAY9F,IAAI,eAAkB,Y,oBCP5F,SAAS+F,KAAiB,IAEnClX,EACAC,EAFImT,EAAa+D,cAAb/D,SAGR,OAAQA,GACN,IAAK,OACHpT,EAAO,EACPC,EAAO,EACP,MACF,IAAK,SACHD,EAAO,GACPC,EAAO,GACP,MACF,IAAK,OACHD,EAAO,GACPC,EAAO,GAOX,IAGMqU,EAAazB,iBAAOzI,MAAMpK,EAAOC,EAAO,GAAG4M,MAAK,IAChDhN,EAASd,YAAY8C,GACrBO,EAAWvD,cAGjB,IAAKgB,EAAQ,CAEXuC,EAAShB,EAAWpB,IACpBoC,EAASf,EAAWpB,IACpBmC,EAASpB,EAAWhB,EAAO,IAC3BoC,EAASnB,EAAWhB,EAAO,IAC3BmC,EAASb,GAAkB,IANhB,MAOiBuK,GAAmB9L,EAAMC,GAP1C,oBAOJF,EAPI,KAOMD,EAPN,KAQXsC,EAASjB,EAAepB,IACxBqC,EAASlB,EAAcpB,IACvBsC,EAASzB,KACTyB,EAASoD,MACTpD,EAASyE,MACQ,SAAbuM,GACFhR,EAASqE,GxBtFa,IwBuFtBrE,EAASqE,GxBlFe,KwBmFF,SAAb2M,GACThR,EAASuE,GxBrFc,IwBsFvBvE,EAASuE,GxBzFc,KwB0FD,WAAbyM,IACThR,EAASqE,GxBvFe,IwBwFxBrE,EAASuE,GxBzFc,KwB2FzBvE,EAASd,GAAW,IACpBc,EAASxB,GAAiB,IAC1B0T,EAAWtB,QAAU5I,MAAMpK,EAAOC,EAAO,GAAG4M,MAAK,GAEnD,IAAMnN,EAAOX,YAAY2C,GACnB/B,EAAOZ,YAAY4C,GACnB5B,EAAWhB,YAAYgD,IACvBjC,EAAUf,YAAY+C,GACtBlC,EAAgBb,YAAY6C,GAC5BuE,EAAOpH,YAAYiI,IACnBZ,EAASrH,YAAYkI,IACrBsN,EAAexV,YAAYmD,IAC3BkV,EAAYrY,YAAY+H,IACxBuQ,EAAuBtY,YAAY4G,IACnC6O,EAAc4C,GAAY,GAAK,IAAMC,GAAwB,EAEnE,OACE,sBAAK5Z,UAAWC,KAAO4Z,aAAvB,UACE,cAACvJ,GAAD,CACE/N,KAAMA,EACNC,KAAMA,EACNqH,WApDa,GAqDboG,YAnDc,GAoDdC,WArDa,GAsDbE,UAvDa,GAuDF7N,EACX4N,UAxDa,GAwDF3N,EACXF,SAAUA,EACVD,QAASA,EACTkO,axB1HqB,EwB0HP5H,IAEhB,cAACxC,GAAD,IACA,cAACyQ,GAAD,CACEC,WAAYA,EACZ5U,KAAMA,EACNC,KAAMA,EACNK,KAAMA,EACNC,KAAMA,EACNL,cAAeA,EACf2U,aAAcA,EACdC,WAAYA,EACZpB,SAAYA,IAEd,cAAC+B,GAAD,CACEb,WAAYA,EACZ5U,KAAMA,EACNC,KAAMA,EACNK,KAAMA,EACNC,KAAMA,EACNF,SAAUA,EACVD,QAASA,EACTF,cAAeA,EACfwV,YxBlJoB,EwBkJPjP,EACbqO,WAAYA,IAEd,cAACzO,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAmBI,KAAMA,EAAMC,OAAQA,O,wBClI9BmR,GAtBa,WACxB,OACI,sBAAK9Z,UAAWC,KAAO8Z,YAAvB,UACI,oBAAI/Z,UAAWC,KAAO+Z,YAAtB,uBACA,qBAAIha,UAAWC,KAAOgU,KAAtB,UACI,+BAAI,sBAAMjU,UAAWC,KAAOga,aAAxB,wBACA,uBADJ,4FAIA,+BAAI,sBAAMja,UAAWC,KAAOga,aAAxB,0BACA,uBADJ,6EAIA,+BAAK,sBAAMja,UAAWC,KAAOga,aAAxB,uBACD,uBADJ,mHChBD,I,MAAA,IAA0B,wCCA1B,OAA0B,oCC0B1BC,GArBiB,WAC5B,OACI,eAAC,IAAMvF,SAAP,WACI,qBAAK3U,UAAWC,KAAOka,kBAAvB,SACI,oBAAGna,UAAWC,KAAOma,SAArB,UACI,sBAAMpa,UAAWC,KAAOoa,aAAxB,8BADJ,IACkE,oDAC9D,qBAAKra,UAAWC,KAAOqa,UAAW/G,IAAKgH,GAAa7G,IAAI,iBACxD,4BAGR,oBAAG1T,UAAWC,KAAOua,YAArB,8IAIc,uBACV,+BAAM,qBAAKxa,UAAS,UAAKC,KAAOwa,aAAZ,YAA4Bxa,KAAOya,qBAAuBnH,IAAKoH,GAASjH,IAAI,qBCpBjG,OAA0B,qCC6B1BkH,GAvBkB,WAC7B,OACI,eAAC,IAAMjG,SAAP,WACI,qBAAK3U,UAAWC,KAAOka,kBAAvB,SACI,oBAAGna,UAAWC,KAAOma,SAArB,UACI,sBAAMpa,UAAWC,KAAOoa,aAAxB,qCADJ,IACyE,oDACrE,qBAAKra,UAAWC,KAAOqa,UAAW/G,IAAKsH,GAAcnH,IAAI,mBACzD,qBAAK1T,UAAWC,KAAOqa,UAAW/G,IAAKuH,GAAgBpH,IAAI,qBAC3D,4BAGR,oBAAG1T,UAAWC,KAAOua,YAArB,iNAKc,uBACV,+BAAM,qBAAKxa,UAAWC,KAAOwa,aAAclH,IAAKwH,GAAiBrH,IAAI,qBCGtEsH,GArBqB,WAChC,OACI,eAAC,IAAMrG,SAAP,WACI,qBAAK3U,UAAWC,KAAOka,kBAAvB,SACI,oBAAGna,UAAWC,KAAOma,SAArB,UACI,sBAAMpa,UAAWC,KAAOoa,aAAxB,oCADJ,IACwE,oDACpE,qBAAKra,UAAWC,KAAOqa,UAAW/G,IAAK0H,GAAavH,IAAI,kBACxD,qBAAK1T,UAAWC,KAAOqa,UAAW/G,IAAK2H,GAAexH,IAAI,oBAC1D,4BAGR,mBAAG1T,UAAWC,KAAOua,YAArB,iJCOGW,GAnBkB,WAC7B,OACI,eAAC,IAAMxG,SAAP,WACI,qBAAK3U,UAAWC,KAAOka,kBAAvB,SACI,oBAAGna,UAAWC,KAAOma,SAArB,UACI,sBAAMpa,UAAWC,KAAOoa,aAAxB,0BAAyD,oDACzD,qBAAKra,UAAWC,KAAOqa,UAAW/G,IAAK6H,GAAW1H,IAAI,eACtD,4BAGR,mBAAG1T,UAAWC,KAAOua,YAArB,yLC2DGa,GA7DD,WACV,IAAMzW,EAAUC,cACVyW,EAAe,WACjB1W,EAAQI,KAAK,KAEXuW,EAAS,YAEf,OACI,sBAAKvb,UAAWC,KAAOub,MAAvB,UACI,sBAAMxb,UAAS,UAAKC,KAAOwb,aAAZ,YAA4Bxb,KAAOyb,iBAAmBzW,QAAS,kBAAMqW,KAApF,SAAqGC,IAErG,gCACI,oBAAIvb,UAAWC,KAAO0b,UAAtB,0DACA,sBAAM3b,UAAWC,KAAO2b,UAAxB,6DAEJ,sBAAK5b,UAAWC,KAAO8Z,YAAvB,UACI,oBAAI/Z,UAAWC,KAAO+Z,YAAtB,2BACA,qBAAIha,UAAWC,KAAOgU,KAAtB,UACI,gGACA,qBAAKjU,UAAWC,KAAO4b,UAAWtI,IAAKuI,GAAYpI,IAAI,qBAI/D,sBAAK1T,UAAWC,KAAO8Z,YAAvB,UACI,oBAAI/Z,UAAWC,KAAO+Z,YAAtB,oBACA,qBAAIha,UAAWC,KAAOgU,KAAtB,UACI,iKAEA,yFACA,wCACA,8HAGR,sBAAKjU,UAAWC,KAAO8Z,YAAvB,UACI,oBAAI/Z,UAAWC,KAAO+Z,YAAtB,uCACA,qBAAIha,UAAWC,KAAOgU,KAAtB,UACI,6BACI,cAAC,GAAD,MAEJ,6BACI,cAAC,GAAD,MAEJ,6BACI,cAAC,GAAD,MAEJ,6BACI,cAAC,GAAD,YAIZ,cAAC,GAAD,IACA,uBACA,uBACA,uBACA,sBAAMjU,UAAWC,KAAOwb,aAAcxW,QAAS,kBAAMqW,KAArD,SAAsEC,IACtE,uBACA,2BC7DG,SAASQ,KACpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAACta,EAAD,MAEJ,cAAC,IAAD,CAAOqa,OAAK,EAACC,KAAK,QAAlB,SACI,cAACvX,GAAD,MAEJ,cAAC,IAAD,CAAOsX,OAAK,EAACC,KAAK,kBAAlB,SACI,cAACxC,GAAD,MAEJ,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,UACI,cAACta,EAAD,S,OCjBD,SAASua,KACtB,OAAO,cAACH,GAAD,IAHTI,IAAMC,cAAc,SCJpB,IAEaC,GAAkBjc,YAAY,CACvCC,KAAM,aACNC,aAAc,CACVgc,OALiC,GAOrC9b,SAAU,CACN+b,YAAa,SAAA7b,GACTA,EAAM4b,OAAS5b,EAAM4b,UAYlBD,IALXA,GAAgBvb,QADhByb,YAMWF,GAAf,SCZeG,eAAe,CAC5BC,QAAS,CACPzY,QAAS0Y,GACTvU,YAAawU,GACb3b,gBAAiB4b,EACjBtT,aAAcuT,GACdjK,YAAakK,GACbxI,YAAayI,GACbC,WAAYC,MCVhBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACI,cAACnB,GAAD,UAIZzV,SAAS6W,eAAe,U,mBCf5Bzd,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,UAAY,8BAA8B,qBAAuB,yCAAyC,yBAA2B,6CAA6C,iBAAmB,qCAAqC,UAAY,8BAA8B,UAAY,gC,mBCAhXD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,QAAU,yBAAyB,QAAU,2B,mBCArID,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,UAAY,qCAAqC,YAAc,uCAAuC,KAAO,gCAAgC,mBAAqB,8CAA8C,OAAS,oC,mBCA5SD,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,cAAgB,iCAAiC,eAAiB,kCAAkC,eAAiB,kCAAkC,gBAAkB,qC,mBCA9OD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,QAAU,gCAAgC,cAAgB,sCAAsC,QAAU,gCAAgC,cAAgB,wC,mBCAlND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,IAAM,qBAAqB,SAAW,0BAA0B,OAAS,0B,mBCAlID,EAAOC,QAAU,CAAC,QAAU,kCAAkC,cAAgB,0C,mBCA9ED,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,mC,mBCA9BD,EAAOC,QAAU,CAAC,aAAe,uC","file":"static/js/main.eb37ce37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"guide\":\"guide_guide__dA5n0\",\"moveGuide\":\"guide_moveGuide__4KCOA\",\"eventIcon\":\"guide_eventIcon__2IPZM\",\"eventPicture\":\"guide_eventPicture__1ps0u\",\"mimiMapEventPicture\":\"guide_mimiMapEventPicture__1Y4Dx\",\"liHeaderContainer\":\"guide_liHeaderContainer__1YYdp\",\"eventDetail\":\"guide_eventDetail__2U7Rh\",\"bigHeader\":\"guide_bigHeader__386L4\",\"smallHeader\":\"guide_smallHeader__2L7yM\",\"plainText\":\"guide_plainText__2w_Ub\",\"list\":\"guide_list__36ooW\",\"liHeader\":\"guide_liHeader__3lbn5\",\"liHeaderText\":\"guide_liHeaderText__3Tc4o\",\"gameModeName\":\"guide_gameModeName__3j-Cq\",\"description\":\"guide_description__b3T-f\",\"topGoBackButton\":\"guide_topGoBackButton__2Kake\",\"goBackButton\":\"guide_goBackButton__1eT02\"};","import React from 'react';\nimport styles from './footer.module.css';\n\nconst Footer = () => {\n    return (\n        <div className={styles.footer}>\n            Happy game, happy life.\n        </div>\n    );\n}\n\nexport default Footer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const START_PLAY = 0;\nexport const PLAYING = 1;\nexport const TO_STOP = 2;\nexport const STOPPED = 3;\n\nexport const backgroundMusicSlice = createSlice({\n    name: 'backgroundMusic',\n    initialState: {\n        isPlaying: STOPPED,\n    },\n    reducers: {\n        playBGM: state => {\n            state.isPlaying = START_PLAY;\n        },\n        playingBGM: state => {\n            state.isPlaying = PLAYING;\n        },\n        stopBGM: state => {\n            state.isPlaying = TO_STOP;\n        },\n        stopedBGM: state => {\n            state.isPlaying = STOPPED;\n        },\n    },\n});\n\nexport const {\n    playBGM, stopBGM, playingBGM, stopedBGM\n} = backgroundMusicSlice.actions;\n\nexport const selectIsPlaying = state => state.backgroundMusic.isPlaying;\n\n\nexport default backgroundMusicSlice.reducer;\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Footer from \"./Footer\";\nimport styles from \"./welcome.module.css\"\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { PLAYING, selectIsPlaying, stopBGM } from \"../reducers/backgroundMusicSlice\";\n\n\nexport function WelcomeScreens(props) {\n    const disptach = useDispatch();\n    const isPlayBGM = useSelector(selectIsPlaying);\n    useEffect(() => {\n        if (isPlayBGM === PLAYING) {\n            disptach(stopBGM());\n        }\n    });\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Maze</h1>\n            {props.children}\n            <Footer />\n        </div>);\n}\n\nexport function Welcome() {\n    return (\n        <WelcomeScreens>\n            <div className={styles.options}>\n                <NavLink to=\"/game\" className={styles.buttons}>Game Start</NavLink>\n                <NavLink to=\"/guide\" className={styles.buttons}>Guide</NavLink>\n                <NavLink to=\"/about\" className={styles.buttons}>About</NavLink>\n            </div>\n        </ WelcomeScreens>);\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const MOVE_FORWARD = 0;\nexport const TURN_LEFT = 2;\nexport const TURN_RIGHT = 1;\nexport const MOVE_BACKWARD = 3;\nexport const RANDOM_EVENT = 4;\nexport const NOTHING = 5;\nexport const UP = 0;\nexport const RIGHT = 3;\nexport const DOWN = 2;\nexport const LEFT = 1;\n\nexport const controlSlice = createSlice({\n  name: 'control',\n  initialState: {\n    direction: 0,\n    posX: 0,\n    posZ: 0,\n    // Used to block a new action when an action is exectuting\n    currentAction: MOVE_FORWARD,\n    isInit: false,\n    wallTop: [],\n    wallLeft: [],\n    numX: 5,\n    numZ: 5,\n    lastMoveHitWall: false,\n    isResetCamera: false,\n    resetEvent: true,\n  },\n  reducers: {\n    moveForward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_FORWARD;\n        switch (state.direction) {\n          case UP:\n            // Check if there is a wall\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ < state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n          // console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    moveBackward: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = MOVE_BACKWARD;\n        switch (state.direction) {\n          case UP:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + (state.posZ + 1) * (state.numX + 1)])) {\n              state.posZ += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case RIGHT:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posX -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case DOWN:\n            if (!(state.posX >= 0 && state.posX < state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallTop[state.posX + state.posZ * (state.numX + 1)])) {\n              state.posZ -= 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          case LEFT:\n            if (!(state.posX >= 0 && state.posX <= state.numX && state.posZ >= 0 && state.posZ <= state.numZ && state.wallLeft[state.posX + 1 + state.posZ * (state.numX + 1)])) {\n              state.posX += 1;\n            } else {\n              state.lastMoveHitWall = true;\n            }\n            break;\n          default:\n          // console.log(\"Direction error: \", state.direction);\n        }\n      }\n    },\n    resetLastMoveHitWall: state => {\n      state.lastMoveHitWall = false;\n    },\n    turnLeft: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_LEFT;\n        state.direction = (state.direction + 1) % 4;\n      }\n    },\n    turnRight: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = TURN_RIGHT;\n        state.direction = ((state.direction - 1) % 4 + 4) % 4;\n      }\n    },\n    occurEvent: state => {\n      if (state.currentAction === NOTHING) {\n        state.currentAction = RANDOM_EVENT;\n      }\n    },\n    resetCurrentAction: state=> {\n      state.currentAction = MOVE_FORWARD;\n    },\n    assignResetEvent: (state, action) => {\n      state.resetEvent = action.payload;\n    },\n    popEvent: state => {\n      state.currentAction = NOTHING;\n    },\n    assignPosX: (state, action) => {\n      state.posX = action.payload;\n    },\n    assignPosZ: (state, action) => {\n      state.posZ = action.payload;\n    },\n    assignWallTop: (state, action) => {\n      state.wallTop = action.payload;\n    },\n    assignWallLeft: (state, action) => {\n      state.wallLeft = action.payload;\n    },\n    assignNumX: (state, action) => {\n      state.numX = action.payload;\n    },\n    assignNumZ: (state, action) => {\n      state.numZ = action.payload;\n    },\n    assignInit: (state, action) => {\n      state.isInit = action.payload;\n    },\n    assignResetCamera: (state, action) => {\n      state.isResetCamera = action.payload;\n      if (!action.payload) {\n        state.direction = UP;\n      }\n    },\n  },\n});\n\nexport const {\n  moveForward,\n  moveBackward,\n  turnLeft,\n  turnRight,\n  resetLastMoveHitWall,\n  occurEvent,\n  popEvent,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  assignNumX,\n  assignNumZ,\n  assignInit,\n  assignResetCamera,\n  resetCurrentAction,\n  assignResetEvent\n} = controlSlice.actions;\n\nexport const selectDirection = state => state.control.direction;\nexport const selectPosX = state => state.control.posX;\nexport const selectPosZ = state => state.control.posZ;\nexport const selectAction = state => state.control.currentAction;\nexport const selectIsInit = state => state.control.isInit;\nexport const selectWallTop = state => state.control.wallTop;\nexport const selectWallLeft = state => state.control.wallLeft;\nexport const selectNumX = state => state.control.numX;\nexport const selectNumZ = state => state.control.numZ;\nexport const selectLastMoveHitWall = state => state.control.lastMoveHitWall;\nexport const selectIsResetCamera = state => state.control.isResetCamera;\nexport const selectResetEvent = state=>state.control.resetEvent;\n\nexport default controlSlice.reducer;\n","import React from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./welcome.module.css\"\nimport { WelcomeScreens } from \"./Welcome\";\nimport { assignInit } from \"../reducers/controlSlice\";\nimport { NavLink, useHistory } from 'react-router-dom';\n\n\nexport function ModeSelection(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleModeSelect = (mode) => {\n        dispatch(assignInit(false));\n        history.push('/game/'+ mode);\n    }\n\n    return (\n        <WelcomeScreens>\n            <div className={styles.options}>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(\"easy\")}>Easy</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(\"medium\")}>Medium</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(\"hard\")}>Hard</h3>\n                <h3 className={styles.buttons} onClick={() => handleModeSelect(\"pure\")}>Pure Maze</h3>\n                <NavLink to=\"/\" className={styles.buttons}>Go back</NavLink>\n            </div>\n        </WelcomeScreens>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/mixkit-game-level-completed-2059.9b5b1a62.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-video-game-health-recharge-2837.1196415e.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-negative-guitar-tone-2324.cab1c2b6.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-bonus-extra-in-a-video-game-2064.fc57cf28.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-small-hit-in-a-game-2072.63f0b124.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-arcade-retro-jump-223.ec530168.wav\";","export default __webpack_public_path__ + \"static/media/mixkit-player-losing-or-failing-2042.183e2b8a.wav\";","import React from 'react';\nimport useSound from 'use-sound';\n// The following 7 music pieces credit to https://mixkit.co/free-sound-effects/game/.\nimport GameCompletionSound from '../music/mixkit-game-level-completed-2059.wav'\nimport PositiveEffectSound from '../music/mixkit-video-game-health-recharge-2837.wav'\nimport NegativeEffectSound from '../music/mixkit-negative-guitar-tone-2324.wav'\nimport NeutralEffectSound from '../music/mixkit-bonus-extra-in-a-video-game-2064.wav'\nimport ConfrontBattleSound from '../music/mixkit-arcade-retro-jump-223.wav'\nimport HitWallSound from '../music/mixkit-small-hit-in-a-game-2072.wav'\nimport GameOverSound from '../music/mixkit-player-losing-or-failing-2042.wav'\n\nexport function useGameCompletionSound() {\n    const [play, { stop }] = useSound(GameCompletionSound, {\n        interrupt: true,\n        volume: 0.75,\n    });\n    return { play, stop };\n}\n\nexport function usePositiveEffectSound() {\n    const [play, { stop }] = useSound(PositiveEffectSound, {\n        interrupt: true,\n        volume: 0.45,\n    });\n    return { play, stop };\n}\n\nexport function useNegativeEffectSound() {\n    const [play, { stop }] = useSound(NegativeEffectSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\n// Clears all effects, no matter positive or negative.\nexport function useNeutralEffectSound() {\n    const [play, { stop }] = useSound(NeutralEffectSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nexport function useConfrontBattleSound() {\n    const [play, { stop }] = useSound(ConfrontBattleSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\nexport function useGameOverSound() {\n    const [play, { stop }] = useSound(GameOverSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nexport function useHitWallSound() {\n    const [play, { stop }] = useSound(HitWallSound, {\n        interrupt: true,\n        volume: 0.65,\n    });\n    return { play, stop };\n}\n\nconst EffectSoundTestContainer = () => {\n    const { play: playGameCompletionSound, stop: stopGameCompletionSound } = useGameCompletionSound();\n    const { play: playPositiveEffectSound, stop: stopPositiveEffectSound } = usePositiveEffectSound();\n    const { play: playNegativeEffectSound, stop: stopNegativeEffectSound } = useNegativeEffectSound();\n    const { play: playNeutralEffectSound, stop: stopNeutralEffectSound } = useNeutralEffectSound();\n    const { play: playConfrontBattleSound, stop: stopConfrontBattleSound } = useConfrontBattleSound();\n    const { play: playGameOverSound, stop: stopGameOverSound } = useGameOverSound();\n    const { play: playHitWallSound, stop: stopHitWallSound } = useHitWallSound();\n\n    return (\n        <div>\n            <button onClick={() => playGameCompletionSound()}>Play Game Compeletion Sound</button>\n            <button onClick={() => stopGameCompletionSound()}>Stop Game Compeletion Sound</button>\n            <button onClick={() => playPositiveEffectSound()}>Play PositiveEffectSound</button>\n            <button onClick={() => stopPositiveEffectSound()}>Stop PositiveEffectSound</button>\n            <button onClick={() => playNegativeEffectSound()}>Play NegativeEffectSound</button>\n            <button onClick={() => stopNegativeEffectSound()}>Stop NegativeEffectSound</button>\n            <button onClick={() => playNeutralEffectSound()}>Play NeutralEffectSound</button>\n            <button onClick={() => stopNeutralEffectSound()}>Stop NeutralEffectSound</button>\n            <button onClick={() => playConfrontBattleSound()}>Play ConfrontBattleSound</button>\n            <button onClick={() => stopConfrontBattleSound()}>Stop ConfrontBattleSound</button>\n            <button onClick={() => playGameOverSound()}>Play GameOverSound</button>\n            <button onClick={() => stopGameOverSound()}>Stop GameOverSound</button>\n            <button onClick={() => playHitWallSound()}>Play HitWallSound</button>\n            <button onClick={() => stopHitWallSound()}>Stop HitWallSound</button>\n        </div>\n\n    );\n}\n\n\nexport default EffectSoundTestContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  moveBackward,\n  moveForward,\n  resetLastMoveHitWall,\n  selectLastMoveHitWall,\n  turnLeft,\n  turnRight,\n} from '../reducers/controlSlice';\nimport styles from \"./gamePanel.module.css\"\nimport { useHitWallSound } from '../commons/SoundHooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleDown, faChevronCircleUp, faChevronCircleLeft, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons'\n\nexport function GamePanel() {\n\n  const dispatch = useDispatch();\n\n  const handleMoveForward = () => {\n    dispatch(moveForward());\n  };\n  const handleMoveBackward = () => {\n    dispatch(moveBackward());\n  };\n\n  const handleTurnLeft = () => {\n    dispatch(turnLeft());\n  };\n  const handleTurnRight = () => {\n    dispatch(turnRight());\n  };\n\n\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'a':\n        handleTurnLeft();\n        break;\n      case 'd':\n        handleTurnRight();\n        break;\n      case 'w':\n        handleMoveForward();\n        break;\n      case 's':\n        handleMoveBackward();\n        break;\n      default:\n        break;\n    }\n  }\n\n  const isPlayHitWall = useSelector(selectLastMoveHitWall);\n  const { play } = useHitWallSound();\n  if (isPlayHitWall) {\n    play();\n    dispatch(resetLastMoveHitWall());\n  }\n\n  document.addEventListener(\"keydown\", handleKeyDown);\n\n\n  return (\n    <div className={styles.panelContainer}>\n      <FontAwesomeIcon className={styles.forwardButton} icon={faChevronCircleUp} onClick={()=>handleMoveForward()}/>\n      <FontAwesomeIcon className={styles.backwardButton} icon={faChevronCircleDown } onClick={()=>handleMoveBackward()}/>\n      <FontAwesomeIcon className={styles.turnLeftButton} icon={faChevronCircleLeft} onClick={()=>handleTurnLeft()}/>\n      <FontAwesomeIcon className={styles.turnRightButton} icon={faChevronCircleRight} onClick={()=>handleTurnRight()}/>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const UNINIT = 0;\nexport const READY = 1;\nexport const RUNNING = 2;\nexport const PAUSE = 3;\n\nexport const elapseTimerSlice = createSlice({\n    name: 'elapseTimer',\n    initialState: {\n        curNumSeconds: 0,\n        status: UNINIT,\n        intervalHasSet: false,\n    },\n    reducers: {\n        countUp: state => {\n            if (state.status === RUNNING) {\n                state.curNumSeconds += 1;\n            }\n        },\n        pauseCount: state => {\n            state.status = PAUSE;\n        },\n        resumeCount: state => {\n            state.status = RUNNING;\n        },\n        readyCount: state=>{\n            state.status = READY;\n        },\n        resetCount: state => {\n            state.curNumSeconds = 0;\n        },\n        adjustCountByAmount: (state, action) => {\n            state.curNumSeconds += action.payload;\n        },\n        markIntervalSet: state=>{\n            state.intervalHasSet = true;\n        }\n\n    },\n});\n\nexport const {\n    countUp,\n    pauseCount,\n    resumeCount,\n    resetCount,\n    readyCount,\n    adjustCountByAmount,\n    markIntervalSet\n} = elapseTimerSlice.actions;\n\nexport const selectCurNumSeconds = state => state.elapseTimer.curNumSeconds;\nexport const selectStatus = state => state.elapseTimer.status;\nexport const selectIntervalHasSet = state => state.elapseTimer.intervalHasSet;\n\n\nexport default elapseTimerSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurNumSeconds, selectStatus, countUp, resumeCount, READY, selectIntervalHasSet, markIntervalSet } from '../reducers/elapseTimerSlice'\n\n// A timer recording elapse time.\nexport default function ElapseTimer() {\n    const status = useSelector(selectStatus);\n    const intervalHasSet = useSelector(selectIntervalHasSet);\n    const dispatch = useDispatch();\n    const handleCountUpDispatch = () => {\n        dispatch(countUp());\n    }\n\n    if (status === READY) {\n        dispatch(resumeCount());\n        if (!intervalHasSet) {\n            setInterval(handleCountUpDispatch, 1000);\n            dispatch(markIntervalSet());\n        }\n    }\n\n    // const x = useSelector(selectCurNumSeconds);\n    // const elapseTime = `Time elapsed: ${Math.floor(x / 3600)} H ${Math.floor(x / 60)} M ${x % 60} S`;\n\n    return (\n        <></>\n    );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_HP = 100;\n\nexport const MINI_MAP_ON = (1 << 0);\nexport const DARK_MODE_ON = (1 << 1);\nexport const SPEED_UP = (1 << 2);\n\nexport const MINI_MAP_OFF = (1 << 0);\nexport const DARK_MODE_OFF = (1 << 1);\nexport const SPEED_DOWN = (1 << 2);\n\nexport const playerStatusSlice = createSlice({\n    name: 'playerStatus',\n    initialState: {\n        HP: INITIAL_HP,\n        buff: 0,\n        debuff: 0,\n        speedModifier: 1\n    },\n    reducers: {\n        decreaseHP: (state, action) => {\n            state.HP -= action.payload;\n            if (state.HP < 0) {\n                state.HP = 0;\n            }\n        },\n        increaseHP: (state, action) => {\n            if (state.HP === INITIAL_HP) {\n                return;\n            }\n            state.HP += action.payload;\n        },\n        resetBuffAndDebuff: state => {\n            state.buff = 0;\n            state.debuff = 0;\n        },\n        addABuff: (state, action) => {\n            state.buff |= action.payload;\n        },\n        removeABuff: (state, action) => {\n            state.buff &= (~action.payload);\n        },\n        addADebuff: (state, action) => {\n            state.debuff |= action.payload;\n        },\n        removeADebuff: (state, action) => {\n            state.debuff &= (~action.payload);\n        },\n        resetPlayerStatus: state => {\n            state.HP = INITIAL_HP;\n            state.buff = 0;\n            state.debuff = 0;\n        }\n    },\n});\n\nexport const {\n    decreaseHP,\n    increaseHP,\n    resetBuffAndDebuff,\n    addABuff,\n    removeABuff,\n    addADebuff,\n    removeADebuff,\n    resetPlayerStatus\n} = playerStatusSlice.actions;\n\nexport const selectHP = state => state.playerStatus.HP;\nexport const selectBuff = state => state.playerStatus.buff;\nexport const selectDebuff = state => state.playerStatus.debuff;\n\nexport default playerStatusSlice.reducer;\n","import * as React from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport * as THREE from 'three';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectAction,\n  selectPosX,\n  selectPosZ,\n  popEvent,\n  selectDirection,\n  MOVE_FORWARD,\n  MOVE_BACKWARD,\n  TURN_LEFT,\n  TURN_RIGHT,\n  NOTHING,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  RANDOM_EVENT,\n  selectIsResetCamera,\n  assignResetCamera\n} from '../reducers/controlSlice';\nimport { selectBuff, selectDebuff, SPEED_DOWN, SPEED_UP } from '../reducers/playerStatusSlice';\n\n\n// extend THREE to include TrackballControls\nextend({ TrackballControls });\n\n// Make the camera look ahead, can be any value greater than 0\nconst DIRECTION_ADJUSTER = 0.1;\nconst SPEED_MODIFIER = 2;\n\nexport const LabyrinthCamera = ({\n  blockWidth,\n  startCoordX,\n  startCoordZ,\n  cameraInitCoordX,\n  cameraInitCoordZ,\n  moveSpeed,\n  turnSpeed,\n}) => {\n  const { camera, gl } = useThree();\n  const controls = React.useRef();\n\n  const currentAction = useSelector(selectAction);\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const direction = useSelector(selectDirection);\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  let speedModifier = 1;\n  if (buff & SPEED_UP) {\n    speedModifier = SPEED_MODIFIER;\n  } else if (debuff & SPEED_DOWN) {\n    speedModifier = 1 / SPEED_MODIFIER;\n  }\n  const actualMoveSpeed = moveSpeed * speedModifier;\n  const actualTurnSpeed = turnSpeed * speedModifier;\n  // Current angle is the remaining angle the camera needs to rotate\n  const [currentAngle, setCurrentAngle] = React.useState(0);\n  let localAngle = currentAngle;\n\n  const coordX = (-blockWidth / 2 + (posX + 1) * blockWidth + startCoordX);\n  const coordZ = (-blockWidth / 2 + (posZ + 1) * blockWidth + startCoordZ);\n  const isResetCamera = useSelector(selectIsResetCamera);\n\n  const dispatch = useDispatch();\n\n  useFrame(() => {\n    // // console.log(posX, coordX, camera.position.x)\n    // update the view as the vis is interacted with\n    // controls.current.update();\n    // console.log(currentAction);\n    if (!isResetCamera) {\n      camera.position.x = cameraInitCoordX;\n      camera.position.z = cameraInitCoordZ;\n      dispatch(assignResetCamera(true));\n    }\n    switch (currentAction) {\n      case MOVE_FORWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n            }\n            break;\n          case LEFT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z < coordZ) {\n              camera.position.z += actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n          // console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case MOVE_BACKWARD:\n        switch (direction) {\n          case UP:\n            if (camera.position.z < coordZ) {\n              camera.lookAt(camera.position.x, 0, camera.position.z - DIRECTION_ADJUSTER);\n              camera.position.z += actualMoveSpeed;\n            }\n            break;\n          case LEFT:\n            if (camera.position.x < coordX) {\n              camera.position.x += actualMoveSpeed;\n              camera.lookAt(camera.position.x - DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          case DOWN:\n            if (camera.position.z > coordZ) {\n              camera.position.z -= actualMoveSpeed;\n              camera.lookAt(camera.position.x, 0, camera.position.z + DIRECTION_ADJUSTER);\n            }\n            break;\n          case RIGHT:\n            if (camera.position.x > coordX) {\n              camera.position.x -= actualMoveSpeed;\n              camera.lookAt(camera.position.x + DIRECTION_ADJUSTER, 0, camera.position.z);\n            }\n            break;\n          default:\n          // console.log(\"direction error!\");\n        }\n        if (Math.abs(camera.position.x - coordX) < actualMoveSpeed) {\n          if (Math.abs(camera.position.z - coordZ) < actualMoveSpeed) {\n            camera.position.x = coordX;\n            camera.position.z = coordZ;\n            dispatch(popEvent());\n          }\n        }\n        break;\n      case TURN_LEFT:\n        if (currentAngle === 0) {\n          localAngle = currentAngle + 90;\n          setCurrentAngle(localAngle);\n        }\n        if (localAngle > 0) {\n          camera.rotateY(THREE.Math.degToRad(actualTurnSpeed));\n          localAngle -= actualTurnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (Math.abs(localAngle) < actualTurnSpeed) {\n          dispatch(popEvent());\n          setCurrentAngle(0);\n        }\n        break;\n      case TURN_RIGHT:\n        if (currentAngle === 0) {\n          setCurrentAngle(currentAngle - 90);\n          localAngle = currentAngle - 90;\n        }\n        if (localAngle < 0) {\n          camera.rotateY(THREE.Math.degToRad(-actualTurnSpeed));\n          localAngle += actualTurnSpeed;\n          setCurrentAngle(localAngle);\n        }\n        if (Math.abs(localAngle) < actualTurnSpeed) {\n          dispatch(popEvent());\n          setCurrentAngle(0);\n        }\n        break;\n      case NOTHING:\n        break;\n      case RANDOM_EVENT:\n        break;\n      default:\n      // console.log(\"button error!\");\n    }\n    camera.updateProjectionMatrix();\n  });\n\n  return (\n    <trackballControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n\nexport default LabyrinthCamera;\n","// TODO: define interface\nexport class UnionFind {\n    partsCount;\n    rank;\n    parent;\n\n    constructor(elementNum) {\n        this.partsCount = elementNum;\n        this.parent = Array.apply(null, { length: elementNum }).map(Number.call, Number)\n        this.rank = Array.apply(0, { length: elementNum });\n    }\n\n    // Find the parent of the given index\n    find(index) {\n        while (index !== this.parent[index]) {\n            this.parent[index] = this.parent[this.parent[index]];\n            index = this.parent[index];\n        }\n        return index;\n    }\n\n    // Union the left element and right element, so that they become connected\n    union(left, right) {\n        const leftRoot = this.find(left);\n        const rightRoot = this.find(right);\n        if (leftRoot === rightRoot) {\n            return;\n        }\n        this.partsCount -= 1;\n        if (this.rank[leftRoot] < this.rank[rightRoot]) {\n            this.parent[leftRoot] = rightRoot;\n        } else if (this.rank[leftRoot] > this.rank[rightRoot]) {\n            this.parent[rightRoot] = leftRoot;\n        } else {\n            this.parent[leftRoot] = rightRoot;\n            this.rank[rightRoot] += 1;\n        }\n    }\n}\n\nexport function shuffleArray(targetArray) {\n    // Reference: https://stackoverflow.com/questions/3943772/how-do-i-shuffle-the-characters-in-a-string-in-javascript\n    const length = targetArray.length;\n    for (let i = length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let tmp = targetArray[i];\n        targetArray[i] = targetArray[j];\n        targetArray[j] = tmp;\n    }\n    return targetArray;\n}\n\nexport function partialApply(fn, ...args) {\n    // Reference: https://medium.com/@jnkrtech/partial-function-application-in-javascript-and-flow-7f3ca87074fe\n    return fn.bind(null, ...args);\n}\n\n// Returns random integer smaller than max.\nexport function genRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\nexport function compareNumbers(a, b) {\n    return a - b;\n}\n","import * as React from 'react';\nimport { Box } from '@react-three/drei'\nimport { shuffleArray, UnionFind } from \"../commons/utils\";\n\n// Wall global index definination example:\n// (The below two pictures are the same 3*3 maze, we separte vertical and horizontal walls to make it looks more clear)\n//\n//   012\n//   ---\n//   345\n//   ---\n//   678\n//\n//  9|10|11|\n// 12|13|14|\n// 15|16|17|\n//\n\n/* Given an wall index, output the neighbour cell index (In x+z*numZ format) */\nfunction getWallNeighbourCells(numX, numCells, wallIndex) {\n  if (wallIndex < numCells) {\n    // wallIndex < numCells, it is a horizontal wall\n    return [wallIndex - numX, wallIndex];\n  } else {\n    return [wallIndex - numCells - 1, wallIndex - numCells];\n  }\n}\n\nexport function initLabyrinthWalls(numX, numZ) {\n  // The algorithm is:\n  // We put all cells of a maze into a disjointed set, and set them as\n  // disjointed. Then we random select a wall. If the two cells separated\n  // by the wall is not connected, we tear down the wall, otherwise we keep\n  // the wall and choose another wall. We do this until there's only only\n  // connecting compoments left.\n  const numCells = numX * numZ;\n  const numCellPlusBorder = (numX+1) * (numZ+1);\n  const unionFind = new UnionFind(numCells);\n  let wallArray = [];\n  let resArray = [];\n  for (let i = numX; i < numCells; i++) {\n    wallArray.push(i);\n  }\n  for (let i = numCells; i < numCells * 2; i++) {\n    if (i % numX !== 0) {\n      wallArray.push(i);\n    }\n  }\n  wallArray = shuffleArray(wallArray);\n  let currentPos = wallArray.length - 1;\n\n  do {\n    const currentWall = wallArray[currentPos];\n    const [neighborA, neighborB] = getWallNeighbourCells(\n      numX,\n      numCells,\n      currentWall\n    );\n    if (unionFind.find(neighborA) === unionFind.find(neighborB)) {\n      resArray.push(currentWall);\n    } else {\n      unionFind.union(neighborA, neighborB);\n    }\n    currentPos -= 1;\n  } while (unionFind.partsCount !== 1);\n  while (currentPos >= 0) {\n    resArray.push(wallArray[currentPos]);\n    currentPos -= 1;\n  }\n\n  const wallLeft = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  const wallTop = Array.apply(null, { length: numCellPlusBorder }).fill(false);\n  for (let i = 0; i < numX; i++) {\n    // Make the top border to be true\n    wallTop[i] = true;\n    // Make the bottom border to be true\n    wallTop[i + numZ*(numX+1)] = true;\n  }\n  for (let i = 0; i < numZ; i++) {\n    // Make the left border to be true\n    wallLeft[i * (numX+1)] = true;\n    // Make the right border to be true\n    wallLeft[i * (numX+1) + numX] = true;\n  }\n\n  const convertIndex = val =>((~~(val / numX))*(numX+1) + val%numX);\n  for (let i = 0; i < resArray.length; i++) {\n    if (resArray[i] < numCells) {\n      wallTop[convertIndex(resArray[i])] = true;\n    } else {\n      wallLeft[convertIndex(resArray[i] - numCells)] = true;\n    }\n  }\n\n  wallLeft[0] = false;\n  wallLeft[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-1] = false;\n  wallTop[numCellPlusBorder-2] = false;\n  return [wallLeft, wallTop];\n}\n\nfunction GenHorizontalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"top\"}\n      args={[width, height, depth]}\n      rotation={[0, 0, 0]}\n      position={[x + width / 2, 0, z]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nfunction GenVerticalWall(x, z, width, height, depth) {\n  return (\n    <Box key={String(x) + ',' + String(z) + \"left\"}\n      args={[width, height, depth]}\n      rotation={[0, Math.PI * 0.5, 0]}\n      position={[x, 0, z + width / 2]}>\n      <meshPhongMaterial color=\"orange\" attach=\"material\" />\n    </Box>\n  );\n}\n\nexport function Walls(\n  { numX,\n    numZ,\n    wallTop,\n    wallLeft,\n    blockWidth,\n    blockHeight,\n    blockDepth,\n    mazeWidth,\n    mazeDepth }\n) {\n  const walls = [];\n  for (let i = 0; i < numX+1; i++) {\n    for (let j = 0; j < numZ+1; j++) {\n      if (wallTop[i + (numX+1) * j]) {\n        walls.push(\n          GenHorizontalWall(\n            -mazeWidth/2 + i * blockWidth - blockDepth / 2,\n            -mazeDepth/2 + j * blockWidth,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n      if (wallLeft[i + (numX+1) * j]) {\n        walls.push(\n          GenVerticalWall(\n            -mazeWidth/2 + i * blockWidth,\n            -mazeDepth/2 + j * blockWidth - blockDepth / 2,\n            blockWidth + blockDepth,\n            blockHeight,\n            blockDepth\n          )\n        );\n      }\n    }\n  }\n\n  return (\n    <group name=\"walls\">\n      {walls}\n    </group>\n  );\n}\n","import * as React from 'react';\nimport { ReactReduxContext } from 'react-redux';\nimport { Canvas } from 'react-three-fiber'\nimport { Sky, Stars, Plane, useContextBridge } from '@react-three/drei'\nimport { LabyrinthCamera } from './LabyrinthCamera';\nimport { Walls } from './Walls';\nimport styles from \"./labyrinthView.module.css\"\n\nexport function LabyrinthView({\n  numX,\n  numZ,\n  blockWidth,\n  blockHeight,\n  blockDepth,\n  mazeWidth,\n  mazeDepth,\n  wallTop,\n  wallLeft,\n  darkModeIsOn\n}) {\n\n  // Direction definination:\n  //\n  //             top\n  //      ^\n  //      |\n  //      | z\n  //      | \n  // left | a             right\n  //      | x\n  //      | i\n  //      | s\n  //      |______________>\n  //            x axis\n  //\n  //            bottom\n\n  // WallLeft and wall top are two conceptual matrix of booleans(they are flattened to arrays for performance), recording\n  // whether a wall exist or not for a certain cell.\n  //\n  // wallTop: whether the wall on the top(in the 2D world) of a cell exists\n  // wallLeft: whether the wall on the left of a cell exists\n  // The isExist information for the wall on the right of the cell is provided by the wallLeft of the cell's right neighbour cell, so as for\n  // the bottom wall.\n  //\n  // To lookup the top wall info cell(x, y), we call wallTop[x + y*numZ]\n\n  // Starting point in the x and z axis(this is coordinate, not index)\n  const startCoordX = -numX * blockWidth / 2;\n  const startCoordZ = -numZ * blockWidth / 2;\n  // Get the current view coordinate\n  const posCoordX = -blockWidth / 2 + numX * blockWidth + startCoordX;\n  const posCoordZ = -blockWidth / 2 + (numZ + 1) * blockWidth + startCoordZ;\n  // Needed to use react-redux in react-three-fiber canvas. \n  // For details: https://standard.ai/blog/introducing-standard-view-and-react-three-fiber-context-bridge/\n  const ContextBridge = useContextBridge(ReactReduxContext);\n  return (\n    <div className={styles.canvasDiv}>\n      <Canvas camera={{\n        fov: 80, position: [posCoordX, 0, posCoordZ + blockWidth]\n      }}>\n        <ContextBridge>\n          <LabyrinthCamera\n            blockWidth={blockWidth}\n            startCoordX={startCoordX}\n            startCoordZ={startCoordZ}\n            cameraInitCoordX={posCoordX}\n            cameraInitCoordZ={posCoordZ}\n            moveSpeed={0.5}\n            turnSpeed={2}\n          />\n        </ContextBridge>\n        <ambientLight color=\"#ffffff\" intensity={0.4} />\n        {/* Reference: https://drei.pmnd.rs/?path=/story/shaders-softshadows--soft-shadows-st\n            Make the light the same direction with the sun\n        */}\n        {darkModeIsOn ? null : <directionalLight\n          position={[-500, 20, startCoordZ + blockWidth / 2]}\n          intensity={1.5}\n        />}\n        <Walls\n          numX={numX}\n          numZ={numZ}\n          wallTop={wallTop}\n          wallLeft={wallLeft}\n          blockWidth={blockWidth}\n          blockHeight={blockHeight}\n          blockDepth={blockDepth}\n          mazeWidth={mazeWidth}\n          mazeDepth={mazeDepth}\n        />\n        {darkModeIsOn ? null : <Sky\n          distance={10000} // Camera distance (default=450000)\n          // Sun position normal(Make the exit faces the sun, x should be less than -mazeWidth+blockWidth, \n          // y should be greater than 0, z should be -mazeHeight+blockWidth)\n          sunPosition={[-500, blockHeight, startCoordZ + blockWidth / 2]}\n          inclination={0} // Sun elevation angle from 0 to 1 (default=0)\n          azimuth={0.25} // Sun rotation around the Y axis from 0 to 1 (default=0.25)\n        />}\n        {/* Referenced from https://github.com/pmndrs/drei#stars */}\n        <Stars\n          radius={mazeWidth * 2} // Radius of the inner sphere (default=100)\n          depth={50} // Depth of area where stars should fit (default=50)\n          count={5000} // Amount of stars (default=5000)\n          factor={20 * (numX / 5)} // Size factor (default=4)\n          saturation={0} // Saturation 0-1 (default=0)\n          fade // Faded dots (default=false)\n        />\n        <Plane rotation-x={-Math.PI / 2} position={[0, -blockHeight / 2, 0]} args={[mazeWidth, mazeDepth, 4, 4]}>\n          <meshBasicMaterial attach=\"material\" opacity={0.5} color=\"#405940\" />\n        </Plane>\n        {darkModeIsOn ? <fog attach=\"fog\" args={['black', 0, blockWidth]} /> : null}\n      </Canvas>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst INITIAL_PRESENSE = false;\nexport const popUpWindowSlice = createSlice({\n    name: 'popUpWindow',\n    initialState: {\n        smallPopUpPresense: INITIAL_PRESENSE,\n        smallPopIsToOpen: INITIAL_PRESENSE,\n        bigPopUpPresense: INITIAL_PRESENSE,\n        bigPopUpIsToOpen: INITIAL_PRESENSE\n    },\n    reducers: {\n        enableSmallPopUpPresense: state => {\n            state.smallPopUpPresense = true;\n        },\n        disableSmallPopUpPresense: state => {\n            state.smallPopUpPresense = false;\n        },\n        enableSmallPopUpIsToOpen: state => {\n            state.smallPopIsToOpen = true;\n        },\n        disableSmallPopUpIsToOpen: state => {\n            state.smallPopIsToOpen = false;\n        },\n        enableBigPopUpPresense: state => {\n            state.bigPopUpPresense = true;\n        },\n        disableBigPopUpPresense: state => {\n            state.bigPopUpPresense = false;\n        },\n        enableBigPopUpIsToOpen: state => {\n            state.bigPopUpIsToOpen = true;\n        },\n        disableBigPopUpIsToOpen: state => {\n            state.bigPopUpIsToOpen = false;\n        },\n    },\n});\n\nexport const {\n    enableSmallPopUpPresense,\n    disableSmallPopUpPresense,\n    enableSmallPopUpIsToOpen,\n    disableSmallPopUpIsToOpen,\n    enableBigPopUpPresense,\n    disableBigPopUpPresense,\n    enableBigPopUpIsToOpen,\n    disableBigPopUpIsToOpen\n} = popUpWindowSlice.actions;\n\nexport const selectSmallPopUpPresense = state => state.popUpWindow.smallPopUpPresense;\nexport const selectSmallPopUpIsToOpen = state => state.popUpWindow.smallPopIsToOpen;\nexport const selectBigPopUpPresense = state => state.popUpWindow.bigPopUpPresense;\nexport const selectBigPopUpIsToOpen = state => state.popUpWindow.bigPopUpIsToOpen;\n\n\nexport default popUpWindowSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { enableBigPopUpPresense, selectBigPopUpPresense, selectBigPopUpIsToOpen, disableBigPopUpIsToOpen } from '../reducers/popUpWindowSlice';\nimport styles from './bigPopUpWindow.module.css'\nimport Modal from \"react-modal\"\nimport { pauseCount } from '../reducers/elapseTimerSlice';\nimport { occurEvent } from '../reducers/controlSlice';\n\nconst BigPopUpWindow = (props) => {\n    const dispatch = useDispatch();\n    const isToOpen = useSelector(selectBigPopUpIsToOpen)\n    useEffect(() => {\n        if (isToOpen) {\n            dispatch(enableBigPopUpPresense());\n            dispatch(occurEvent());\n            dispatch(disableBigPopUpIsToOpen());\n        }\n    });\n\n    const isOpen = useSelector(selectBigPopUpPresense);\n    useEffect(() => {\n        if (isOpen) {\n            dispatch(pauseCount());\n        }\n    });\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            className={styles.popup}\n            overlayClassName={styles.overlay}\n            closeTimeoutMS={1000}>\n            <img src={props.background} className={styles.backgroundPic} alt={\"\"} />\n\n            <div className={styles.content}>\n\n                {props.children}\n                <div className={styles.buttonsection}>\n                    {props.buttons}\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default BigPopUpWindow;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { disableSmallPopUpPresense, enableSmallPopUpPresense, selectSmallPopUpPresense, selectSmallPopUpIsToOpen, disableSmallPopUpIsToOpen } from '../reducers/popUpWindowSlice';\nimport styles from './smallPopUpWindow.module.css'\nimport Modal from \"react-modal\"\n\n\nconst SmallPopUpWindow = (props) => {\n    const dispatch = useDispatch();\n    const isToOpen = useSelector(selectSmallPopUpIsToOpen)\n    useEffect(() => {\n        if (isToOpen) {\n            dispatch(enableSmallPopUpPresense());\n            dispatch(disableSmallPopUpIsToOpen());\n        }\n    });\n    const handlePresenseChange = () => {\n        dispatch(disableSmallPopUpPresense());\n    }\n\n    useEffect(() => {\n        setTimeout(handlePresenseChange, 2000);\n    });\n    const isOpen = useSelector(selectSmallPopUpPresense);\n\n    return (\n        isOpen && \n        <div className={styles.content}>\n            {props.children}\n            <div className={styles.buttonsection}>\n                {props.buttons}\n            </div>\n        </div>\n    );\n}\n\nexport default SmallPopUpWindow;\n","export default __webpack_public_path__ + \"static/media/bigWindowBackground.851d04fd.png\";","import { createSlice } from '@reduxjs/toolkit';\nimport { compareNumbers } from '../commons/utils'\n\nexport const leaderboardSlice = createSlice({\n    name: 'leaderboard',\n    initialState: {\n        list: []\n    },\n    reducers: {\n        appendToLeaderBoard: (state, action) => {\n            state.list.push(action.payload);\n            state.list.sort(compareNumbers);\n            if (state.list.length > 10) {\n                state.list.pop();\n            }\n        }\n    },\n});\n\nexport const {\n    appendToLeaderBoard\n} = leaderboardSlice.actions;\n\nexport const selectList = state => state.leaderboard.list;\n\n\nexport default leaderboardSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/mixkit-game-level-music-689.1410a480.wav\";","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useSound from 'use-sound';\n// Music credits to https://mixkit.co/free-sound-effects/game/.\nimport bgm from '../music/mixkit-game-level-music-689.wav'\nimport { playingBGM, selectIsPlaying, stopedBGM, START_PLAY, STOPPED, TO_STOP } from '../reducers/backgroundMusicSlice';\n\nexport function useBgmPlay() {\n    const [play, { stop }] = useSound(bgm, {\n        interrupt: true,\n        volume: 0.35,\n        loop: true,\n    });\n    return { play, stop };\n}\n\nexport const BackgroundMusic = () => {\n    const { play, stop } = useBgmPlay();\n    const isPlaying = useSelector(selectIsPlaying);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (isPlaying === START_PLAY) {\n            play();\n            dispatch(playingBGM());\n        }\n        if (isPlaying === TO_STOP) {\n            stop();\n            dispatch(stopedBGM());\n        }\n    });\n    return (\n        <React.Fragment>\n        </React.Fragment>\n    );\n};\n","import { useSelector } from \"react-redux\";\nimport { selectList } from \"../reducers/leaderboardSlice\";\n\nexport function LearderboardSection(props) {\n    const leaderList = useSelector(selectList);\n    return <div>\n        {leaderList.map((item, index) => (<div>{item}</div>))}\n    </div>\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { assignInit, assignNumX, assignNumZ, assignResetEvent, NOTHING, popEvent, RANDOM_EVENT, selectResetEvent } from \"../reducers/controlSlice\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { readyCount, selectCurNumSeconds, resumeCount, pauseCount, resetCount } from '../reducers/elapseTimerSlice'\nimport { selectHP, resetPlayerStatus } from \"../reducers/playerStatusSlice\";\nimport BigPopUpWindow from \"./BigPopUpWindow\";\nimport SmallPopUpWindow from \"./SmallPopUpWindow\";\nimport { disableBigPopUpPresense, enableBigPopUpIsToOpen, enableSmallPopUpIsToOpen } from \"../reducers/popUpWindowSlice\";\nimport { partialApply, genRandomInt } from \"../commons/utils\";\nimport background from '../images/bigWindowBackground.png'\nimport { appendToLeaderBoard } from \"../reducers/leaderboardSlice\";\nimport { usePositiveEffectSound, useNegativeEffectSound, useGameCompletionSound, useNeutralEffectSound, useGameOverSound } from \"../commons/SoundHooks\"\nimport {\n  decreaseHP,\n  increaseHP,\n  removeABuff,\n  removeADebuff,\n  resetBuffAndDebuff,\n  addABuff,\n  addADebuff,\n  DARK_MODE_ON,\n  DARK_MODE_OFF,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  SPEED_UP,\n  SPEED_DOWN\n} from '../reducers/playerStatusSlice';\nimport { useBgmPlay } from \"../commons/BackgroundMusic\";\nimport { playBGM, stopBGM } from \"../reducers/backgroundMusicSlice\";\nimport { LearderboardSection } from \"./Leaderboard\";\n\nconst NUM_DEBUFF_TYPE = 4;\nconst DARK_MODE_ID = 0;\nconst SPEED_DOWN_ID = 1;\nconst HIDE_MINI_MAP = 2;\nconst HP_DOWN_BY_TEN = 3;\n\nconst NUM_BUFF_TYPE = 4;\nconst BRIGHT_MODE_ID = 0;\nconst SPEED_UP_ID = 1;\nconst SHOW_MINI_MAP = 2;\nconst HP_UP_BY_TEN = 3;\n\nconst NUM_EVENT_TYPE = 6;\nconst START_GAME_EVENT = 0;\nconst END_GAME_EVENT = 1;\nconst POSITIVE_EFFECT_EVENT = 2;\nconst NEGATIVE_EFFECT_EVENT = 3;\nconst NEUTRAL_EFFECT_EVENT = 4;\nconst CONFRONT_BATTLE_EVENT = 5;\nconst GAME_FAIL_EVENT = 6;\n\nfunction StartEventRender() {\n  const dispatch = useDispatch();\n  const buttons = (<div onClick={() => {\n    dispatch(resumeCount());\n    dispatch(popEvent());\n    dispatch(disableBigPopUpPresense());\n  }}>Play now!</div>);\n  return (<BigPopUpWindow buttons={buttons} background={background}>\n    <h1>You are in a maze</h1>\n    <div>This is a dangerous maze, good luck!</div>\n  </BigPopUpWindow>);\n}\n\nfunction startEventCallback(dispatch) {\n  dispatch(readyCount());\n}\n\nfunction EndEventRender() {\n  const time = useSelector(selectCurNumSeconds);\n  const hasAppend = useRef(false);\n  const dispatch = useDispatch();\n  console.log(hasAppend.current);\n  useEffect(() => {\n    if (!hasAppend.current) {\n      console.log(\"appended\");\n      dispatch(appendToLeaderBoard(time));\n      hasAppend.current = true;\n    }\n  })\n  const buttons = (\n    <React.Fragment>\n      <div onClick={() => {\n        dispatch(popEvent());\n        dispatch(resetPlayerStatus());\n        dispatch(resetCount());\n        dispatch(assignInit(false));\n        dispatch(disableBigPopUpPresense());\n      }}\n      > Play next level </div>\n      <div> See the leaderboard </div>\n    </React.Fragment>\n  );\n\n  return (<BigPopUpWindow buttons={buttons} background={background}>\n    <h1>Congrats!</h1>\n    <div>You've passed the maze within {time} seconds!</div>\n    <LearderboardSection />\n  </BigPopUpWindow>);\n}\n\nfunction FailGameEventRender() {\n  const dispatch = useDispatch();\n  const buttons = (\n    <React.Fragment>\n      <div onClick={() => {\n        dispatch(popEvent());\n        dispatch(resetPlayerStatus());\n        dispatch(resetCount());\n        dispatch(assignInit(false));\n        dispatch(disableBigPopUpPresense());\n      }}\n      > Try again </div>\n      <div> See the leaderboard </div>\n    </React.Fragment>\n  );\n\n  return (<BigPopUpWindow buttons={buttons} background={background}>\n    <h1>Oops!</h1>\n    <div>You've failed the game (▰˘︹˘▰)!</div>\n  </BigPopUpWindow>);\n}\n\n// function endEventCallback(dispatch, playGameCompletionSound) {\nfunction endEventCallback(dispatch, play) {\n  play();\n  dispatch(pauseCount);\n  dispatch(popEvent);\n}\n\n// With a Strong wind, all buff and debuff are cleared.\n// function strongWindEventCallBack(dispatch, playNeutralEffectSound) {\nfunction strongWindEventCallBack(dispatch, play, gameMode) {\n  play();\n  dispatch(resetBuffAndDebuff());\n  if (gameMode === \"easy\") {\n    dispatch(addABuff(DARK_MODE_OFF));\n    dispatch(removeADebuff(DARK_MODE_ON));\n    dispatch(addABuff(MINI_MAP_ON));\n    dispatch(removeADebuff(MINI_MAP_OFF));\n  } else if (gameMode === \"hard\") {\n    dispatch(addADebuff(DARK_MODE_ON));\n    dispatch(removeABuff(DARK_MODE_OFF));\n    dispatch(addADebuff(MINI_MAP_OFF));\n    dispatch(removeABuff(MINI_MAP_ON));\n  }\n}\n\nfunction StrongWindEventRender() {\n  return (\n    <SmallPopUpWindow>\n      <h1>Wow!</h1>\n      <div>You've been applied A strong wind!</div>\n      <div>All effects are cleared!</div>\n    </SmallPopUpWindow>\n  );\n}\n\n\n// The smelly wind will add debuff: darkmode, minimap off, slowly move.\n// function smellyWindEventCallBack(debuffID, dispatch, playNegativeEffectSound) {\nfunction smellyWindEventCallBack(debuffId, dispatch, play) {\n  play();\n  // Generate a random debuff\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      dispatch(addADebuff(DARK_MODE_ON));\n      dispatch(removeABuff(DARK_MODE_OFF));\n      break;\n    case SPEED_DOWN_ID:\n      dispatch(addADebuff(SPEED_DOWN));\n      dispatch(removeABuff(SPEED_UP));\n      break;\n    case HIDE_MINI_MAP:\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(removeABuff(MINI_MAP_ON));\n      break;\n    case HP_DOWN_BY_TEN:\n      dispatch(decreaseHP(10));\n      break;\n    default:\n      break;\n  }\n}\n\nfunction SmellyWindEventRender({ debuffId }) {\n  let specificEventContent = null;\n  switch (debuffId) {\n    case DARK_MODE_ID:\n      specificEventContent = \"Dark Mode is on!\";\n      break;\n    case SPEED_DOWN_ID:\n      specificEventContent = \"Your speed is slowed down!\";\n      break;\n    case HIDE_MINI_MAP:\n      specificEventContent = \"Mini map is gone!\"\n      break;\n    case HP_DOWN_BY_TEN:\n      specificEventContent = \"Your lost 10 HP!\"\n      break;\n    default:\n      break;\n  }\n  return (<SmallPopUpWindow>\n    <h1>Oh no!</h1>\n    <div>You met a smelly wind...</div>\n    <div>{specificEventContent}</div>\n  </SmallPopUpWindow>);\n}\n\n// With a Fresh wind, one buff is added: brightmode, minimap on, faster move.\n// function freshWindEventCallBack(buffId, dispatch, playPositiveEffectSound) {\nfunction freshWindEventCallBack(buffId, dispatch, play) {\n  play();\n  // Generate a random buff\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(removeADebuff(DARK_MODE_ON));\n      break;\n    case SPEED_UP_ID:\n      dispatch(addABuff(SPEED_UP));\n      dispatch(removeADebuff(SPEED_DOWN));\n      break;\n    case SHOW_MINI_MAP:\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(removeADebuff(MINI_MAP_OFF));\n      break;\n    case HP_UP_BY_TEN:\n      dispatch(increaseHP(10));\n      break;\n    default:\n      break;\n  }\n}\n\nfunction FreshWindEventRender({ buffId }) {\n  let specificEventContent = null;\n  switch (buffId) {\n    case BRIGHT_MODE_ID:\n      specificEventContent = \"Bright mode is on!\";\n      break;\n    case SPEED_UP_ID:\n      specificEventContent = \"Your speed is up!\";\n      break;\n    case SHOW_MINI_MAP:\n      specificEventContent = \"Mini map is shown for you!\";\n      break;\n    case HP_UP_BY_TEN:\n      specificEventContent = \"Your got 10 HP!\";\n      break;\n    default:\n      break;\n  }\n  return (<SmallPopUpWindow>\n    <h1>Great!</h1>\n    <div>A fresh wind brought you something helpful! </div>\n    <div>{specificEventContent}</div>\n  </SmallPopUpWindow>);\n}\n\nclass Event {\n  constructor(toRender, callBack, eventTypeId) {\n    this.toRender = toRender;\n    this.callBack = callBack;\n    this.eventTypeId = eventTypeId;\n  }\n}\n\nfunction initEventMap(numX, numZ, gameMode) {\n  // console.log(\"game mode is: \" + gameMode);\n  const eventMap = Array(numX * numZ + 1).fill(null);\n  eventMap[numX * (numZ - 1) + numX - 1] = new Event(<StartEventRender />, startEventCallback, START_GAME_EVENT);\n  eventMap[0] = new Event(<EndEventRender />, endEventCallback, END_GAME_EVENT);\n  eventMap[numX * numZ + 1] = new Event(<FailGameEventRender />, endEventCallback, GAME_FAIL_EVENT);\n  if (gameMode !== \"pure\") {\n    for (let i = numX * (numZ - 1) + numX - 2; i > 0; i--) {\n      const eventId = genRandomInt(NUM_EVENT_TYPE);\n      switch (eventId) {\n        case NEGATIVE_EFFECT_EVENT:\n          if (gameMode !== \"easy\") {\n            const debuffId = genRandomInt(NUM_DEBUFF_TYPE + 1);\n            eventMap[i] = new Event(<SmellyWindEventRender debuffId={debuffId} />, partialApply(smellyWindEventCallBack, debuffId), NEGATIVE_EFFECT_EVENT);\n          }\n          break;\n        case POSITIVE_EFFECT_EVENT:\n          if (gameMode !== \"hard\") {\n            const buffId = genRandomInt(NUM_BUFF_TYPE + 1);\n            eventMap[i] = new Event(<FreshWindEventRender buffId={buffId} />, partialApply(freshWindEventCallBack, buffId), POSITIVE_EFFECT_EVENT);\n          }\n          break;\n        case NEUTRAL_EFFECT_EVENT:\n          eventMap[i] = new Event(<StrongWindEventRender />, strongWindEventCallBack, NEUTRAL_EFFECT_EVENT);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return eventMap;\n}\n\nexport function EventManager({ discovered, posX, posZ, numX, numZ, currentAction, isResetEvent, isGameFail, gameMode }) {\n  const [eventMap, setEventMap] = useState(initEventMap(numX, numZ, gameMode));\n\n  const currentRender = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isResetEvent) {\n      setEventMap(initEventMap(numX, numZ, gameMode));\n      dispatch(assignResetEvent(false));\n    }\n  });\n  const { play: playGameCompletionSound } = useGameCompletionSound();\n  const { play: playPositiveEffectSound } = usePositiveEffectSound();\n  const { play: playNegativeEffectSound } = useNegativeEffectSound();\n  const { play: playNeutralEffectSound } = useNeutralEffectSound();\n  const { play } = useBgmPlay();\n  // TODO: add confront battle event\n  // const { play: playConfrontBattleSound } = useConfrontBattleSound();\n  //TODO: add gameover event\n  const { play: playGameOverSound } = useGameOverSound();\n\n  let currentIndex = posZ * numX + posX;\n\n  if (isGameFail) {\n    currentIndex = numX * numZ + 1;\n  }\n\n  let currentCallback = () => { }\n  const callBackCommonTail = () => {\n    if (currentAction === NOTHING) {\n      discovered.current[currentIndex] = true;\n    }\n  }\n\n  if (currentAction === NOTHING || currentAction === RANDOM_EVENT) {\n    if (eventMap[currentIndex]) {\n      if (!discovered.current[currentIndex]) {\n        const { toRender, callBack, eventTypeId } = eventMap[currentIndex];\n        // currentRender.current = eventMap[currentIndex];\n        currentRender.current = toRender;\n        //toRender = eventMap[currentIndex][0];\n        // currentCallback = () => { eventMap[currentIndex][1](dispatch, select); dispatch(enableIsToOpen()) };\n        // currentCallback = () => { callback(dispatch, select); dispatch(enableIsToOpen()) };\n\n        switch (eventTypeId) {\n          case START_GAME_EVENT:\n            currentCallback = () => { callBack(dispatch); dispatch(playBGM()); dispatch(enableBigPopUpIsToOpen()); };\n            break;\n          case END_GAME_EVENT:\n            // currentCallback = () => { callBack(dispatch, playGameCompletionSound); dispatch(enableBigPopUpIsToOpen()); dispatch(assignNumX(numX + 2)); dispatch(assignNumZ(numZ + 2)) };\n            currentCallback = () => { callBack(dispatch, playGameCompletionSound); dispatch(stopBGM()); dispatch(enableBigPopUpIsToOpen()); };\n            break;\n          case POSITIVE_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playPositiveEffectSound); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          case NEGATIVE_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playNegativeEffectSound); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          case NEUTRAL_EFFECT_EVENT:\n            currentCallback = () => { callBack(dispatch, playNeutralEffectSound, gameMode); dispatch(enableSmallPopUpIsToOpen()) };\n            break;\n          case GAME_FAIL_EVENT:\n            currentCallback = () => { callBack(dispatch, playGameOverSound); dispatch(stopBGM()); dispatch(enableBigPopUpIsToOpen()); };\n            break;\n          // TODO: add confront battle event\n          // case CONFRONT_BATTLE_EVENT:\n          //   currentCallback = () => { callBack(dispatch, playConfrontBattleSound); dispatch(enableIsToOpen()) };\n          //   break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    currentCallback();\n    callBackCommonTail();\n  });\n  return currentRender.current;\n}\n","import React from 'react';\nimport { NOTHING } from '../reducers/controlSlice';\nimport styles from './miniMap.module.css';\n\n\nexport function MiniMap({\n    discovered,\n    numX,\n    numZ,\n    posX,\n    posZ,\n    wallLeft,\n    wallTop,\n    miniMapIsOn,\n}) {\n    const display = [];\n    for (let i = 0; i < numZ; i++) {\n        let currentRow = [];\n        for (let j = 0; j < numX; j++) {\n            if (discovered.current[i * numX + j] || (posX === j && posZ === i)) {\n                currentRow.push(\n                    <button className={styles.square} key={String(i) + ',' + String(j)}\n                        style={{\n                            borderTop: wallTop[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderLeft: wallLeft[i * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderBottom: wallTop[(i + 1) * (numX + 1) + j] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            borderRight: wallLeft[i * (numX + 1) + j + 1] ? '0.5px solid white' : '0.5px solid rgba(240, 248, 255, 0.25)',\n                            backgroundColor: (posX === j && posZ === i) ? 'rgb(37, 110, 194)' : 'rgba(240, 248, 255, 0.5)'\n                        }} >\n                    </button>\n                );\n            }\n            else {\n                currentRow.push(\n                    <button className={styles.square} key={String(i) + ',' + String(j)}\n                        style={{\n                            border: '0.5px solid rgba(0, 0, 0, 0.1)',\n                            backgroundColor: 'rgba(0, 0, 0, 0.1)'\n                        }} >\n                    </button>);\n\n            }\n        }\n        display.push(<div className={styles.broadRow} key={\"border\" + String(i)}>{currentRow}</div>)\n    }\n\n    return (\n        <div className={styles.container}>\n            <div></div>\n            <div className={styles.map}>\n                {miniMapIsOn ? display : null}\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/heart-icon.5f6c67fd.png\";","export default __webpack_public_path__ + \"static/media/normalclock.bdc92f27.png\";","export default __webpack_public_path__ + \"static/media/outoftimeclock.c12811a4.png\";","export default __webpack_public_path__ + \"static/media/mapicon.376644ec.png\";","export default __webpack_public_path__ + \"static/media/sun.37d40077.png\";","export default __webpack_public_path__ + \"static/media/night.bde826a9.png\";","export default __webpack_public_path__ + \"static/media/rocket.b58a9096.png\";","export default __webpack_public_path__ + \"static/media/turtleicon.fcc4bf50.png\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DARK_MODE_OFF, MINI_MAP_ON, selectBuff, selectDebuff, selectHP, SPEED_DOWN, SPEED_UP } from '../reducers/playerStatusSlice';\nimport styles from './playerStatusPanel.module.css'\n// Ref: https://iconarchive.com/show/love-is-in-the-web-icons-by-succodesign/heart-icon.html\nimport heart from '../images/heart-icon.png'\n// Ref: https://commons.wikimedia.org/wiki/File:Stock_alarm.svg\nimport normalclock from '../images/normalclock.png'\n// Ref: https://en.wikipedia.org/wiki/File:Out_of_date_clock_icon.svg\nimport outoftimeclock from '../images/outoftimeclock.png'\n// Ref: https://www.subpng.com/png-6x43z7/\nimport mapicon from '../images/mapicon.png'\n// Ref: https://www.flaticon.com/free-icon/sun_169367\nimport dayIcon from '../images/sun.png'\n// Ref: https://www.flaticon.com/free-icon/night_208293\nimport nightIcon from '../images/night.png'\n// Ref: https://www.flaticon.com/free-icon/rocket_1356479\nimport rocket from '../images/rocket.png'\n// Ref: https://iconarchive.com/show/noto-emoji-animals-nature-icons-by-google/22283-turtle-icon.html\nimport turtleicon from '../images/turtleicon.png'\nimport { selectCurNumSeconds } from '../reducers/elapseTimerSlice';\n\n// Ref: https://medium.com/@ItsMeDannyZ/how-to-build-a-progress-bar-with-react-8c5e79731d1f\nconst ProgressBar = (props) => {\n    return (\n        <div className={styles.progressBar}>\n            <Filler percentage={props.percentage} color={props.color} />\n        </div>\n    )\n}\n\nconst Filler = (props) => {\n    return <div className={styles.filler} style={{ width: `${props.percentage}%`, background: props.color }} />\n}\n\n\nconst PlayerStatusPanel = ({buff, debuff}) => {\n    const hp = useSelector(selectHP);\n    const clock = 100 - useSelector(selectCurNumSeconds);\n    return (\n        <div className={styles.container}>\n            <div className={styles.progressBarSection}>\n                <img className={styles.icon} src={heart} alt=\"HP\" />\n                <ProgressBar percentage={hp} />\n            </div>\n            <div className={styles.progressBarSection}>\n                <img className={styles.icon} src={clock > 20 ? normalclock : outoftimeclock} alt=\"Remaining Time\" />\n                <ProgressBar percentage={clock} color=\"blue\" />\n            </div>\n            <div className={styles.buffSection}>\n                <img className={styles.icon} src={buff & DARK_MODE_OFF ? dayIcon : nightIcon} alt=\"day mode\" />\n                {buff & MINI_MAP_ON ? <img className={styles.icon} src={mapicon} alt=\"minimap mode\" /> : null}\n                {buff & SPEED_UP ? <img className={styles.icon} src={rocket} alt=\"speed up\" /> : null}\n                {debuff & SPEED_DOWN ? <img className={styles.icon} src={turtleicon} alt=\"speed down\" /> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerStatusPanel;\n","import { useRef, useState } from 'react';\nimport { GamePanel } from './GamePanel';\nimport ElapseTimer from './ElapseTimer';\nimport { LabyrinthView } from './LabyrinthView';\nimport { EventManager } from './EventManager';\nimport { MiniMap } from './MiniMap'\nimport { BackgroundMusic } from '../commons/BackgroundMusic'\nimport PlayerStatusPanel from './PlayerStatusPanel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { initLabyrinthWalls } from './Walls';\nimport {\n  assignInit,\n  assignNumX,\n  assignNumZ,\n  assignPosX,\n  assignPosZ,\n  assignWallTop,\n  assignWallLeft,\n  selectIsInit,\n  assignResetCamera,\n  assignResetEvent,\n  resetCurrentAction,\n  selectPosX,\n  selectPosZ,\n  selectWallLeft,\n  selectWallTop,\n  selectAction,\n  selectResetEvent,\n} from '../reducers/controlSlice';\nimport {\n  addABuff,\n  addADebuff,\n  DARK_MODE_OFF,\n  DARK_MODE_ON,\n  MINI_MAP_ON,\n  MINI_MAP_OFF,\n  selectBuff,\n  selectDebuff,\n  selectHP,\n  resetPlayerStatus,\n} from '../reducers/playerStatusSlice';\nimport styles from \"./labyrinthGame.module.css\"\nimport { resetCount, selectCurNumSeconds } from '../reducers/elapseTimerSlice';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { genRandomInt } from '../commons/utils';\n\nexport default function LabyrinthGame() {\n  const { gameMode } = useParams();\n  let numX;\n  let numZ;\n  switch (gameMode) {\n    case \"easy\":\n      numX = 5;\n      numZ = 5;\n      break;\n    case \"medium\":\n      numX = 10;\n      numZ = 10;\n      break;\n    case \"hard\":\n      numX = 15;\n      numZ = 15;\n      break;\n    default:\n    // console.log(\"game mode error: \" + gameMode);\n\n  }\n\n  const blockWidth = 20;\n  const blockDepth = 0.5;\n  const blockHeight = 10;\n  const discovered = useRef(Array(numX * numZ + 1).fill(false));\n  const isInit = useSelector(selectIsInit);\n  const dispatch = useDispatch();\n  // const [gameRoundID, setGameRoundID] = useState(0);\n  // Reset the game when initialization\n  if (!isInit) {\n    // setGameRoundID(genRandomInt(1024));\n    dispatch(assignNumX(numX));\n    dispatch(assignNumZ(numZ));\n    dispatch(assignPosX(numX - 1));\n    dispatch(assignPosZ(numZ - 1));\n    dispatch(assignResetCamera(false));\n    const [wallLeft, wallTop] = initLabyrinthWalls(numX, numZ);\n    dispatch(assignWallLeft(wallLeft));\n    dispatch(assignWallTop(wallTop));\n    dispatch(resetCurrentAction());\n    dispatch(resetCount());\n    dispatch(resetPlayerStatus());\n    if (gameMode === 'easy') {\n      dispatch(addABuff(MINI_MAP_ON));\n      dispatch(addABuff(DARK_MODE_OFF));\n    } else if (gameMode === 'hard') {\n      dispatch(addADebuff(MINI_MAP_OFF));\n      dispatch(addADebuff(DARK_MODE_ON));\n    } else if (gameMode === 'medium') {\n      dispatch(addABuff(DARK_MODE_OFF));\n      dispatch(addADebuff(MINI_MAP_OFF));\n    }\n    dispatch(assignInit(true));\n    dispatch(assignResetEvent(true));\n    discovered.current = Array(numX * numZ + 1).fill(false);\n  }\n  const posX = useSelector(selectPosX);\n  const posZ = useSelector(selectPosZ);\n  const wallLeft = useSelector(selectWallLeft);\n  const wallTop = useSelector(selectWallTop);\n  const currentAction = useSelector(selectAction);\n  const buff = useSelector(selectBuff);\n  const debuff = useSelector(selectDebuff);\n  const isResetEvent = useSelector(selectResetEvent);\n  const currentHP = useSelector(selectHP);\n  const currentCurNumSeconds = useSelector(selectCurNumSeconds);\n  const isGameFail = (currentHP <=0 || 100 - currentCurNumSeconds <= 0);\n\n  return (\n    <div className={styles.visContainer}>\n      <LabyrinthView\n        numX={numX}\n        numZ={numZ}\n        blockWidth={blockWidth}\n        blockHeight={blockHeight}\n        blockDepth={blockDepth}\n        mazeDepth={numX * blockWidth}\n        mazeWidth={numZ * blockWidth}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        darkModeIsOn={debuff & DARK_MODE_ON}\n      />\n      <GamePanel />\n      <EventManager\n        discovered={discovered}\n        posX={posX}\n        posZ={posZ}\n        numX={numX}\n        numZ={numZ}\n        currentAction={currentAction}\n        isResetEvent={isResetEvent}\n        isGameFail={isGameFail}\n        gameMode = {gameMode}\n      />\n      <MiniMap\n        discovered={discovered}\n        posX={posX}\n        posZ={posZ}\n        numX={numX}\n        numZ={numZ}\n        wallLeft={wallLeft}\n        wallTop={wallTop}\n        currentAction={currentAction}\n        miniMapIsOn={buff & MINI_MAP_ON}\n        isGameFail={isGameFail}\n      />\n      <ElapseTimer />\n      <BackgroundMusic />\n      <PlayerStatusPanel buff={buff} debuff={debuff} />\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './guide.module.css';\n\nconst GameModeDescription = () => {\n    return (\n        <div className={styles.description}>\n            <h3 className={styles.smallHeader}>Game mode</h3>\n            <ul className={styles.list}>\n                <li><span className={styles.gameModeName}>Easy mode:</span>\n                    <br />\n                Maze size is 5 X 5, while Minimap is always on, slow mode and dark mode is always off.\n            </li>\n                <li><span className={styles.gameModeName} >Medium mode:</span>\n                    <br />\n                Maze size is 10 X 10, and you have chances to meet all kinds of events.\n            </li>\n                <li ><span className={styles.gameModeName}>Hard mode</span>\n                    <br />\n                Maze size is 15 X 15, and dark mode is always on. Strong wind will clear all effects except dark mode.\n            </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default GameModeDescription;","export default __webpack_public_path__ + \"static/media/movesGuide.dcee7320.png\";","export default __webpack_public_path__ + \"static/media/miniMap.763b6727.png\";","import React from 'react';\nimport miniMapIcon from '../images/mapicon.png';\nimport miniMap from '../images/miniMap.png';\nimport styles from './guide.module.css'\n\nconst MiniMapEventDescription = () => {\n    return (\n        <React.Fragment>\n            <div className={styles.liHeaderContainer} >\n                <p className={styles.liHeader}>\n                    <span className={styles.liHeaderText}> Minimap ON/OFF </span> <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <img className={styles.eventIcon} src={miniMapIcon} alt=\"miniMap Icon\" />\n                    <br />\n                </p>\n            </div>\n            <p className={styles.eventDetail}>\n\n                When you see this icon,\n                It means the Mini Map has been shown for you. You can see the map of the maze on the top left.\n                Like this:<br />\n                <span><img className={`${styles.eventPicture} ${styles.mimiMapEventPicture}`} src={miniMap} alt=\"MiniMap\" /></span>\n            </p>\n        </React.Fragment >\n    );\n}\n\nexport default MiniMapEventDescription;","export default __webpack_public_path__ + \"static/media/darkMode.d01dbca6.png\";","import React from 'react';\nimport darkModeIcon from '../images/night.png';\nimport brightModeIcon from '../images/sun.png';\nimport darkModePicture from '../images/darkMode.png';\nimport styles from './guide.module.css'\n\nconst DarkModeEventDescription = () => {\n    return (\n        <React.Fragment>\n            <div className={styles.liHeaderContainer} >\n                <p className={styles.liHeader}>\n                    <span className={styles.liHeaderText}>Dark/Bright Mode ON/OFF</span> <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <img className={styles.eventIcon} src={darkModeIcon} alt=\"dark mode Icon\" />\n                    <img className={styles.eventIcon} src={brightModeIcon} alt=\"bright mode Icon\" />\n                    <br />\n                </p>\n            </div>\n            <p className={styles.eventDetail}>\n\n                When you see these icon,\n                It means the dark mode or bright mode has been enabled.\n                These effects will immediately apply. For example, when you invoke the dark mode, your game view will be\n                like this:<br />\n                <span><img className={styles.eventPicture} src={darkModePicture} alt=\"MiniMap\" /></span>\n            </p>\n        </React.Fragment >\n    );\n}\n\nexport default DarkModeEventDescription;","import React from 'react';\nimport speedUpIcon from '../images/rocket.png';\nimport speedDownIcon from '../images/turtleicon.png';\nimport styles from './guide.module.css'\n\nconst SpeedChangeEventDescription = () => {\n    return (\n        <React.Fragment>\n            <div className={styles.liHeaderContainer} >\n                <p className={styles.liHeader}>\n                    <span className={styles.liHeaderText}> Speed Up/Down ON/OFF </span> <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <img className={styles.eventIcon} src={speedUpIcon} alt=\"speed up Icon\" />\n                    <img className={styles.eventIcon} src={speedDownIcon} alt=\"speed down Icon\" />\n                    <br />\n                </p>\n            </div>\n            <p className={styles.eventDetail}>\n\n                When you see these icon,\n                It means the some change have been applied to your moving speed.\n                These effects will immediately apply.\n            </p>\n        </React.Fragment >\n    );\n}\n\nexport default SpeedChangeEventDescription;","import React from 'react';\nimport heartIcon from '../images/heart-icon.png';\nimport styles from './guide.module.css'\n\nconst HPChangeEventDescription = () => {\n    return (\n        <React.Fragment>\n            <div className={styles.liHeaderContainer} >\n                <p className={styles.liHeader}>\n                    <span className={styles.liHeaderText}>HP Gain/Lose</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                    <img className={styles.eventIcon} src={heartIcon} alt=\"heart Icon\" />\n                    <br />\n                </p>\n            </div>\n            <p className={styles.eventDetail}>\n                You might also invoke some events related to the change of your HP.\n                Some of them will be positive, however, some won't.\n                Keep an eye on the your health during the game!\n            </p>\n        </React.Fragment >\n    );\n}\n\nexport default HPChangeEventDescription;","import React from 'react';\nimport GameModeDescription from './GameModeDescription';\nimport styles from './guide.module.css'\nimport HelperPage from './HelperPage';\nimport movesGuide from '../images/movesGuide.png';\nimport OperationDescription from './OperationDescription';\nimport MiniMapEventDescription from './MiniMapEventDescription';\nimport DarkModeEventDescription from './DarkModeEventDescription';\nimport SpeedChangeEventDescription from './SpeedChangeEventDescription';\nimport HPChangeEventDescription from './HPChangeEventDescription';\nimport { useHistory } from 'react-router-dom';\n\nconst Guide = () => {\n    const history = useHistory();\n    const handleGoBack = () => {\n        history.push(\"\");\n    }\n    const goBack = \"< Go Back\";\n\n    return (\n        <div className={styles.guide}>\n            <span className={`${styles.goBackButton} ${styles.topGoBackButton}`} onClick={() => handleGoBack()}>{goBack}</span>\n\n            <div>\n                <h2 className={styles.bigHeader}>Welcome! You have entered a dangerous maze !</h2>\n                <span className={styles.plainText}>The purpose of the game is to find the exit.</span>\n            </div>\n            <div className={styles.description}>\n                <h3 className={styles.smallHeader}> How to play:</h3>\n                <ul className={styles.list}>\n                    <li>Use \"W\", \"A\", \"S\", \"D\" to move forward, left, backward, right.</li>\n                    <img className={styles.moveGuide} src={movesGuide} alt=\"move guide\" />\n                </ul>\n            </div>\n\n            <div className={styles.description}>\n                <h3 className={styles.smallHeader}> Tips:</h3>\n                <ul className={styles.list}>\n                    <li>During your exploration, your moves might invoke different kinds of effects.\n                Some of them are helpful, some of them are not. :)</li>\n                    <li>Keep an eye on your HP! If your HP went to 0, you fail!</li>\n                    <li>Enjoy!</li>\n                    <li>Maybe you already know, but again, trying to go through the walls directly won't work!</li>\n                </ul>\n            </div>\n            <div className={styles.description}>\n                <h3 className={styles.smallHeader}>Effects you might invoke:</h3>\n                <ul className={styles.list}>\n                    <li>\n                        <MiniMapEventDescription />\n                    </li>\n                    <li>\n                        <DarkModeEventDescription />\n                    </li>\n                    <li>\n                        <SpeedChangeEventDescription />\n                    </li>\n                    <li>\n                        <HPChangeEventDescription />\n                    </li>\n                </ul>\n            </div >\n            <GameModeDescription />\n            <br />\n            <br />\n            <br />\n            <span className={styles.goBackButton} onClick={() => handleGoBack()}>{goBack}</span >\n            <br />\n            <br />\n        </div >\n    );\n}\n\nexport default Guide;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Welcome } from \"./components/Welcome\";\nimport { ModeSelection } from \"./components/ModeSelection\";\nimport LabyrinthGame from \"./components/LabyrinthGame\";\nimport Guide from \"./components/Guide\";\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Welcome />\n            </Route>\n            <Route exact path=\"/game\">\n                <ModeSelection />\n            </Route>\n            <Route exact path=\"/game/:gameMode\">\n                <LabyrinthGame />\n            </Route>\n            <Route exact path=\"/guide\">\n                <Guide />\n            </Route>\n            {/* Finally, catch all unmatched routes */}\n            <Route>\n                <Welcome />\n            </Route>\n        </Switch>\n    );\n}\n","import Modal from \"react-modal\"\nimport Routes from './Routes';\n\nimport './styles.css';\n\nModal.setAppElement('#root')\n\nexport default function App() {\n  return <Routes />\n}\n","import { createSlice } from '@reduxjs/toolkit';\nconst INITIAL_HELPER_PAGE_SHOWN_STATUS = false;\n\nexport const helperPageSlice = createSlice({\n    name: 'helperPage',\n    initialState: {\n        shown: INITIAL_HELPER_PAGE_SHOWN_STATUS,\n    },\n    reducers: {\n        toggleShown: state => {\n            state.shown = !state.shown;\n        },\n    },\n});\n\nexport const {\n    toggleShown,\n} = helperPageSlice.actions;\n\nexport const selectShown = state => state.helperPage.shown;\n\n\nexport default helperPageSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport controlReducer from './reducers/controlSlice';\nimport elapseTimerReducer from './reducers/elapseTimerSlice';\nimport backgroundMusicReducer from './reducers/backgroundMusicSlice';\nimport playerStatusReducer from './reducers/playerStatusSlice';\nimport popUpWindowReducer from './reducers/popUpWindowSlice';\nimport leaderboardReducer from './reducers/leaderboardSlice';\nimport helperPageReducer from './reducers/helperPageSlice';\n\n\nexport default configureStore({\n  reducer: {\n    control: controlReducer,\n    elapseTimer: elapseTimerReducer,\n    backgroundMusic: backgroundMusicReducer,\n    playerStatus: playerStatusReducer,\n    popUpWindow: popUpWindowReducer,\n    leaderboard: leaderboardReducer,\n    helperPage: helperPageReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helperPageContainer\":\"helperPage_helperPageContainer__1eM9p\",\"moveGuide\":\"helperPage_moveGuide__30Pob\",\"operationDescription\":\"helperPage_operationDescription__nn3h2\",\"iconDescriptionContainer\":\"helperPage_iconDescriptionContainer__3KEOE\",\"twoIconContainer\":\"helperPage_twoIconContainer__3apiz\",\"eventIcon\":\"helperPage_eventIcon__2huNr\",\"plainText\":\"helperPage_plainText__DKd71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"welcome_container__1zouN\",\"title\":\"welcome_title__2C8Sf\",\"options\":\"welcome_options__IosI2\",\"buttons\":\"welcome_buttons__mJTC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerStatusPanel\":\"playerStatusPanel_playerStatusPanel__1cmZa\",\"container\":\"playerStatusPanel_container__3gKUU\",\"progressBar\":\"playerStatusPanel_progressBar__2OczX\",\"icon\":\"playerStatusPanel_icon__LoCU4\",\"progressBarSection\":\"playerStatusPanel_progressBarSection__25ZUm\",\"filler\":\"playerStatusPanel_filler__A1WSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelContainer\":\"gamePanel_panelContainer__2I-11\",\"forwardButton\":\"gamePanel_forwardButton__3wqGa\",\"backwardButton\":\"gamePanel_backwardButton__2mBmK\",\"turnLeftButton\":\"gamePanel_turnLeftButton__1neex\",\"turnRightButton\":\"gamePanel_turnRightButton__8HIPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"bigPopUpWindow_popup__3Y6BH\",\"overlay\":\"bigPopUpWindow_overlay__2vXM3\",\"backgroundPic\":\"bigPopUpWindow_backgroundPic__JlTZ5\",\"content\":\"bigPopUpWindow_content__3lEcr\",\"buttonsection\":\"bigPopUpWindow_buttonsection__DsooY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"miniMap_container__203Xp\",\"map\":\"miniMap_map__3sY0k\",\"broadRow\":\"miniMap_broadRow__ccNrJ\",\"square\":\"miniMap_square__z_h7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"smallPopUpWindow_content__1_Cd_\",\"buttonsection\":\"smallPopUpWindow_buttonsection__1qAGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__13GXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasDiv\":\"labyrinthView_canvasDiv__1DGyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visContainer\":\"labyrinthGame_visContainer__2ZVSS\"};"],"sourceRoot":""}